{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"~~Hm, also worth noting that this will not be a complete implementation of the extension without addressing #12788. Specifically, only one transformation per material will be used. I misunderstood the API there.~~\r\n\r\nThinking more about this, the fact that only one transformation is allowed per material seems fine. The fact that `texture.clone()` does not reuse texture memory is more of a problem. For me the use case here is texture atlases, and practically it would be much better to bake UVs given these constraints. Maybe we'll want to merge this to support Adobe Dimension, if it requires this extension, but otherwise I'm having second thoughts. \ud83d\ude15","created_at":"2018-04-13T05:19:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-381026711","id":381026711,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM4MTAyNjcxMQ==","updated_at":"2018-04-14T23:01:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/381026711","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":">  The fact that texture.clone() does not reuse texture memory is more of a problem.\r\n\r\nProblem for the performance and memory consumption? Or anything else?","created_at":"2018-04-16T14:17:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-381615018","id":381615018,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM4MTYxNTAxOA==","updated_at":"2018-04-16T18:03:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/381615018","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Both: wasted GPU memory, and dropped frames during duplicate texture upload. We should encourage people to bake UVs with the transforms rather than use this extension, otherwise.","created_at":"2018-04-16T17:55:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-381693397","id":381693397,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM4MTY5MzM5Nw==","updated_at":"2018-04-16T17:55:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/381693397","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Should other engines have the same issue? (Sorry I haven't looked into the detail about the issue yet.) I suppose very depending on it if we can encourage.","created_at":"2018-04-16T18:07:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-381697018","id":381697018,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM4MTY5NzAxOA==","updated_at":"2018-04-16T18:07:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/381697018","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":">Both: wasted GPU memory, and dropped frames during duplicate texture upload. We should encourage people to bake UVs with the transforms rather than use this extension, otherwise.\r\n\r\nWouldn't this also be memory inefficient? I'm not sure how this all performs, but storage wise there would be more attributes with mode data, possibly redundant? \r\n\r\n1. baked\r\n2. vertex transformed (many `vUv0`,`vUv1`...`vUvN`)\r\n3. fragment transformed (one vUv, many transform uniforms)\r\n\r\nThese three probably each have their pros and cons?","created_at":"2018-05-30T06:51:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-393049972","id":393049972,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5MzA0OTk3Mg==","updated_at":"2018-05-30T08:32:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/393049972","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"Sorry for the late review. Now I follow Don's concern. Yes, non-reuse texture memory for texture atlases doesn't make sense. It's bad for memory consumption and performance, it blocks main thread due to big texture upload many times.\r\n\r\nI think texture atlases is also used for reducing draw call by combining textures(materials). In that case uv may be baked in general because geometries(meshes) are combined ? (This is my guess because I'm not familiar with the workflow.)\r\n\r\nWondering whether non-baked uv is the standard way for texture atlases regardless of glTF. If yes, perhaps it'd be helpful if Three.js provides shared texture functionality, uv bake utility method, or something.","created_at":"2018-06-10T20:43:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-396080478","id":396080478,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjA4MDQ3OA==","updated_at":"2018-06-10T20:47:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396080478","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@donmccurdy \r\n\r\n>Thinking more about this...\r\n\r\nWould you consider drawing some diagrams to illustrate what you are trying to explain?\r\n\r\nI took a stab, but it's very simple, i just broke down the `texture2D` call and pointed them to a material.\r\n\r\n\r\nI think thought whats interesting is how much of this stuff you want to share, and between what. If it is some super custom atlas, where every sprite is different in size, there's going to be less sharing. But if it's for example 2x2 same sized maps (spec,albedo,normal,gloss) then it would make sense to share the circles in the diagram too. \r\n\r\nInstead of calling them `sprite 1` it would be `normal map location` `specmap location`. \r\n\r\nThere could also be multiple materials at the bottom, if one texture atlas is used for everything. \r\n\r\n## different material maps packed into one\r\nThis was just a test, but it describes a scenario where multiple maps (albedo, spec, displacement) are in one atlas.\r\n![material](https:\/\/user-images.githubusercontent.com\/4681282\/41511623-7dcbe2d4-722f-11e8-8caa-9b51e1e64482.PNG)\r\n","created_at":"2018-06-17T20:08:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397903061","id":397903061,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkwMzA2MQ==","updated_at":"2018-06-17T22:27:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397903061","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"## Packed model map bundle system example\r\n\r\nThis describes the following scenario:\r\n\r\n- least http requests to retrieve \"textures\" (or maps?) for a model\r\n- least amount of textures used in rendering (atlas)\r\n- various property describing textures looked up in some predefined slot\r\n\r\nThe circles in this diagram could be managed by some kind of `ASSET_LOAD_AND_RENDER_OPTIMIZER` so that in the future, the layout could change, additional maps could be added etc. \r\n\r\nSo if the type of \"atlas\" changes, the materials don't have to know about that, they just take appropriate `vec2` inputs. Don't care if a user sets that to goof around with an animation, or some automated system, to manage atlas lookups. \r\n\r\n![packedpermodel](https:\/\/user-images.githubusercontent.com\/4681282\/41512498-ff6068b6-723d-11e8-8b3b-a1faf92f79ab.jpg)\r\n\r\nCrap there's an error here, albedo should point to albedo and spec gloss to spec gloss, and all 4 should be present left and right i ran out of space. ","created_at":"2018-06-17T21:55:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397909139","id":397909139,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkwOTEzOQ==","updated_at":"2018-06-17T22:38:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397909139","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"## Minecraft like world all in one atlas\r\nThis describes the following scenario:\r\n\r\n- there is a 3d world with materials, and they all use one texture, they're all of one type (just albedo)\r\n\r\n![minecraft](https:\/\/user-images.githubusercontent.com\/4681282\/41512595-0eb64536-7240-11e8-99ed-48b0f2eb5242.jpg)\r\n\r\nThis i think i did very poorly, i think it should maybe have words `one to many` `many to many` `one to one`. \r\n\r\nMaterials can be many to many Meshes? (or one to many?)\r\nSame for textures. Maybe two cubes with the same texture, one needs to have a red hue because its being clicked. ","created_at":"2018-06-17T22:07:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397909737","id":397909737,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkwOTczNw==","updated_at":"2018-06-17T22:10:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397909737","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"There are probably many more use cases and variations to these. Like the minecraft one could have `abledoAtlas`, `normalMapAtlas` etc. \r\n\r\nI think it would be extremely helpful if consistent terms could be used in this, or some other diagram or conversation. Then establish what should be shared what not, and why. \r\n\r\nIn these diagrams, i see the implementation of the circle for example as a black box. Is it done through uniforms, or baked attributes it doesn't matter, at the level of the diagram it's only important that it does the transformation. \r\n\r\n@donmccurdy \r\n\r\n>Hm, also worth noting that this will not be a complete implementation of the extension without addressing #12788. Specifically, only one transformation per material will be used. I misunderstood the API there.\r\n\r\n>Thinking more about this, the fact that only one transformation is allowed per material seems fine. The fact that texture.clone() does not reuse texture memory is more of a problem.\r\n\r\nI think there are two issues being conflated here, i'm not sure how to label them, maybe `performance` and `usage` (or `design`?). I think the terminology for what's a map, texture, and most particularly \"uv\" (or their definitions) are not clear.\r\n\r\nThe `clone()` memory duplication is more abstract i think, and not tied to this **feature** _(black box of the circle in the diagram)_. The feature itself i think is another level of abstraction _(how to transform **a thing**)_ and then comes the loader, and then the extension. I hope this makes sense because it's not easy to describe and terminology makes it harder.\r\n\r\nI'll take an ignore, an `stop spamming (with diagrams)`, `this makes no sense` as answers :) but please i beg you do not delete this. I come from working in the content authoring tools as a 3d artist background, before dabbling in code, a lot of the terminology refers to other things, and the UI's layout may be biasing my position on where things should live or be handled. I'm in no way trying to be disruptive, and i'm trying to learn myself. \r\n\r\n\r\n\r\n\r\n","created_at":"2018-06-17T22:26:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397910699","id":397910699,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkxMDY5OQ==","updated_at":"2018-06-17T22:26:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397910699","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"The \"uv\" is problematic because it can refer to a few different things, my stab at classifying them:\r\n\r\n- mapping of a mesh (where an artist, or some software decided a triangle should live in UV space)\r\n- texture lookup (which value of the texture should be used somewhere)\r\n    - which \"texture\" to use (bitmap data)\r\n    - which mapping to use (uv0, uv1, myDynamicUv)\r\n    - which transformation to apply if any ( transform a channel, use a baked one )","created_at":"2018-06-17T22:36:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397911181","id":397911181,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkxMTE4MQ==","updated_at":"2018-06-17T22:36:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397911181","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"These diagrams are kinda 1:1 ish with the shaders, but that's misleading they can also represent different systems. \r\n\r\nFor example `which texture to use` is already very cleanly abstracted and known. The interface is clean:\r\n```javascript\r\nmyMaterial.someMap = someTexture || null\r\n```\r\nAnd then the systems use this. `GLTFLoader` creates textures based on some structure in a file, `EffectComposer` sets render targets, various example set them inline etc.\r\n\r\n`Texture.transform` is currently part of the circle, but it happens both outside and inside the shaders (the matrix is the interface, one assembles it the other uses it). The suggested baking approach would be on the `Geometry` in part (set up attributes) and part in shaders (consume attributes) but it would still be part of the same system (i think?). \r\n\r\n\r\n![textures](https:\/\/user-images.githubusercontent.com\/4681282\/41512845-27ef5f5a-7246-11e8-9eaa-cfe7e2574d0a.jpg)\r\n\r\n","created_at":"2018-06-17T22:45:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397911580","id":397911580,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkxMTU4MA==","updated_at":"2018-06-17T22:50:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397911580","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"This is how this flow might look in JS. \r\n\r\nWe make this tree by:\r\n\r\n```\r\nvar material = new Material({\r\n  map: new TextureLoader.load('foo.jpg'),\r\n})\r\n\r\nscene.add( new Mesh( someGeometry, material) )\r\n\r\nrenderer.render(scene,camera)\r\n```\r\n\r\nWhen the renderer needs to figure out what to do with the shader, it looks up `Mesh -> Geometry -> Attribute` and when it needs to figure out the transform uniform `Mesh -> Material -> Texture`. \r\n\r\n![textures333](https:\/\/user-images.githubusercontent.com\/4681282\/41514281-70ec4240-725a-11e8-9d55-6328e5ea0e99.jpeg)\r\n\r\nI think the biggest problem here is should the`Texture` box split into two different things. And what does it refer to could be `Texture` object, but could be `someMap` slot.\r\n\r\n","created_at":"2018-06-18T01:09:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-397919743","id":397919743,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzkxOTc0Mw==","updated_at":"2018-06-18T01:16:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397919743","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"Only had time to go through this quickly so if I've missed a key point I apologize \u2014\r\n\r\n> The clone() memory duplication is more abstract i think, and not tied to this feature (black box of the circle in the diagram).\r\n\r\n> I think the biggest problem here is should theTexture box split into two different things...\r\n\r\nAgreed, that's just a general pain point but becomes more acute because Texture has two jobs where authoring tools often have distinct texture vs map roles. #12788 captures that well.\r\n\r\nI'm not sure what you're asking or suggesting overall \u2014 is this feedback on the glTF extension, three.js implementation, or just trying to understand it all better?\r\n\r\nOne note \u2014 unless I misunderstood your graphics, you're envisioning albedo\/normal\/metal\/rough\/... maps sharing a single image asset, where parts of the texture have different functions? I don't think that's common, and it breaks some assumptions if colorSpace varies across a single texture, because parts are linear and other parts are sRGB. Technically quite solveable, just awkward. I believe it's more common to have many meshes in the scene all share the same albedo texture, and all share another normal texture, etc. You can do this by (a) baking offsets into UVs, or (b) associating a texture offset for each. I don't know pros\/cons of A vs B, the latter is probably better for geometry reuse...","created_at":"2018-06-18T19:38:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-398170681","id":398170681,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODE3MDY4MQ==","updated_at":"2018-06-18T19:38:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398170681","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":">maps sharing a single image asset, where parts of the texture have different functions? I don't think that's common, and it breaks some assumptions if colorSpace varies across a single texture, \r\n\r\nCorrect. I'm trying to understand it all better. What you described would look like this.\r\n\r\nIn the quoted one: \r\n1. `Mesh -> Material -> Texture -> Location` were shared between many `Mesh`. N meshes would always look up the lower right quadrant for texture FOO. If the system suddenly says it's now in the top left quad, system changes location, all meshes update. One to many?\r\n2. `Mesh -> Material -> Texture -> IMAGEDATA(?)` are 1:1, each bitmap, only fits the layout of one `Mesh -> Geometry`, 1:1\r\n\r\nHere it's:\r\n1. is 1:1, some sub region of a bitmap corresponds to some `Mesh -> Geometry`\r\n2. is one to many, `Mesh -> Texture -> IMAGEDATA(?)` is shared by many `Mesh -> Geometry`.\r\n\r\n![atlasperchannel 2](https:\/\/user-images.githubusercontent.com\/4681282\/41569735-fb6c34d6-7320-11e8-88a6-4e4c494d6e31.jpg)\r\n\r\n\r\n\r\nI'm curious if there is a generic design \/ pattern here, that would maybe adhere to this diagram, or yield a different diagram (or different naming). For example i don't like using the attribute `common` here, i'd opt for `flexible`. For example, the recent glTF meetup discussed compressed textures, but the conclusion was that for transfers, jpeg is still king. Two different applications may care about GPU memory usage or transfer times, yielding two opposing needs. \r\n\r\nSo with that being said:\r\n\r\n>You can do this by (a) baking offsets into UVs, or (b) associating a texture offset for each. I don't know pros\/cons of A vs B, the latter is probably better for geometry reuse...\r\n\r\nI'd look for abstractions here first, and then asses the pros and cons of each approach. Abstractions i see here:\r\n\r\n1. Use arbitrary UV channels for texture lookups. This means that `UV_7` is just some UV channel:\r\n    - could be loaded from a file\r\n    - could be loaded from seven files\r\n    - could be dynamically generated\r\n    - could be loaded and then transformed ( baked transformation )\r\n2. Use explicit transformation of (an arbitrary?) UV channel:\r\n    - should it be done in the vertex shader? (invocation per vertex, consuming a whole `varying vec2 vUV_CHANNELNUM` \r\n    - should it be done in the fragment shader? (invocation per pixel on interpolated values)\r\n\r\n\r\nThis i see as sort of the lowest common denominator, these are (possibly) all the options that have to happen in order for this feature to work with a webgl\/opengl\/d3d API. How, who, when, what sets the state for this is an implementation detail. But there might be enough in here already, from a philosophical standpoint to set a certain course. IE:\r\n\r\n```glsl\r\n\r\nvec4 foo = texture2D( bar, baz );\r\n\r\n```\r\n\r\n- what is `foo`? ( i think it's `material.someMap`) \r\n- what is `bar`? ( i think it's `material.someMap.image`)\r\n- what is `baz`? ( tough one, `material.someMap.repeat`,`geometry.attributes.uv` and some internals (when to use uv2))","created_at":"2018-06-19T01:17:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-398243785","id":398243785,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODI0Mzc4NQ==","updated_at":"2018-06-19T01:23:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398243785","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"For glTF, the overall abstraction is defined as:\r\n\r\n![gltf overview image](https:\/\/user-images.githubusercontent.com\/1848368\/41574033-943d2450-7334-11e8-924f-a1807587a37c.png)\r\n\r\nDifferent engines may have different mesh\/material\/map\/texture\/image abstractions, and that's fine. By \"common\" I mean that features like texture atlases have certain frequent use cases, and designing a data structure that's too abstract (e.g. different colorspaces for different regions of a single image) is probably unnecessary. I don't have a strong opinion about abstractions (1) and (2), those are decisions that engine authors must make.\r\n\r\n\r\n","created_at":"2018-06-19T03:25:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-398262686","id":398262686,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODI2MjY4Ng==","updated_at":"2018-06-19T03:25:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398262686","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"what's the sampler in that diagram?","created_at":"2018-06-19T04:15:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-398269172","id":398269172,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODI2OTE3Mg==","updated_at":"2018-06-19T04:15:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398269172","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":"See https:\/\/github.com\/KhronosGroup\/glTF\/blob\/master\/specification\/2.0\/README.md#samplers and https:\/\/www.khronos.org\/opengl\/wiki\/Sampler_(GLSL).","created_at":"2018-06-19T05:38:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-398280120","id":398280120,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODI4MDEyMA==","updated_at":"2018-06-19T05:38:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398280120","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":18,"author_association":"COLLABORATOR","body":"I think this PR is ready to review and merge, regardless of the duplicate texture uploads. If that (https:\/\/github.com\/mrdoob\/three.js\/issues\/12788) can be fixed later, so much the better.","created_at":"2018-07-10T05:49:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-403708092","id":403708092,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzcwODA5Mg==","updated_at":"2018-07-10T05:49:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/403708092","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":19,"author_association":"COLLABORATOR","body":"I want a note in glTF loader document or somewhere about the performance and memory issue with this extension because of duplicated image on Three.js","created_at":"2018-07-10T07:52:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-403733500","id":403733500,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzczMzUwMA==","updated_at":"2018-07-10T07:52:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/403733500","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":20,"author_association":"COLLABORATOR","body":"Sounds good \u2014 added a note in the docs.","created_at":"2018-07-10T14:37:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-403846168","id":403846168,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzg0NjE2OA==","updated_at":"2018-07-10T14:37:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/403846168","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"Why simply not address the image issue, it\u2019s been around for years?","created_at":"2018-07-10T18:57:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-403930485","id":403930485,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzkzMDQ4NQ==","updated_at":"2018-07-10T18:57:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/403930485","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":22,"author_association":"COLLABORATOR","body":"I'd be glad to see that happen, but it's not simple \u2014 the most direct solution would be for the renderer to keep a Map from images to a list of `THREE.Texture` instances that reference them, not re-upload for additional uses of the image, and only deallocate the texture when all relevant `THREE.Texture` instances have been disposed. But that's not trivial to implement, the 1:1 relationship between `THREE.Texture` and WebGL textures is conceptually nice, and ultimately if the texture transform API ever changed (say, to support `material.mapSlot`, or to use NodeMaterial) then the work would become pointless. So I'm not sure how to proceed with that issue.","created_at":"2018-07-10T21:15:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-403968501","id":403968501,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzk2ODUwMQ==","updated_at":"2018-07-10T21:16:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/403968501","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":23,"author_association":"CONTRIBUTOR","body":"Might be related:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/issues\/14375","created_at":"2018-07-11T01:54:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-404019652","id":404019652,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwNDAxOTY1Mg==","updated_at":"2018-07-11T01:54:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/404019652","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":24,"author_association":"COLLABORATOR","body":"Thanks for updating the document. Sorry, I'm too late to approve then this PR has conflicts now. Could you resolve it?","created_at":"2018-07-21T02:24:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-406764437","id":406764437,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc2NDQzNw==","updated_at":"2018-07-21T02:24:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406764437","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":25,"author_association":"COLLABORATOR","body":"Thanks, done \u2705","created_at":"2018-07-21T21:26:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-406824497","id":406824497,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjgyNDQ5Nw==","updated_at":"2018-07-21T21:26:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406824497","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":26,"author_association":"COLLABORATOR","body":"I think this is ready. \ud83d\udc4d","created_at":"2018-08-21T05:13:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-414552082","id":414552082,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDU1MjA4Mg==","updated_at":"2018-08-21T05:13:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414552082","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":27,"author_association":"COLLABORATOR","body":"I've rebased this PR. \u2705","created_at":"2018-10-23T00:06:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-432034787","id":432034787,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQzMjAzNDc4Nw==","updated_at":"2018-10-23T00:06:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/432034787","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":28,"author_association":"OWNER","body":"Thanks!","created_at":"2018-10-23T00:18:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13831#issuecomment-432037030","id":432037030,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13831","node_id":"MDEyOklzc3VlQ29tbWVudDQzMjAzNzAzMA==","updated_at":"2018-10-23T00:18:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/432037030","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}