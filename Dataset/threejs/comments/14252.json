{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"If `NodeMaterial` moves into `src\/`, we should implement backward-compatible wrappers for `MeshFooMaterial` classes on top of it. I don't see any particular need for existing examples to be converted to use node syntax, unless doing so simplifies the code for whatever reason.","created_at":"2018-06-08T20:47:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395885592","id":395885592,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTg4NTU5Mg==","updated_at":"2018-06-08T20:47:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395885592","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Do you have an idea what would happen to \r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/examples\/js\/lines\/LineMaterial.js specifically? I didn't understand: \r\n\r\n>unless doing so simplifies the code for whatever reason.\r\n\r\nIf `NodeMaterial` is supposed to make materials extensible, something thats not written in it wont be?","created_at":"2018-06-08T21:04:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395889869","id":395889869,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTg4OTg2OQ==","updated_at":"2018-06-08T21:04:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395889869","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"For example:\r\n\r\n```js\r\nvar material = new THREE.MeshStandardMaterial();\r\nmaterial.map = textureLoader.load('foo.png');\r\n\r\nvar node = material.node;\r\nnode.color.coord.index = 1;\r\n\r\nconsole.log( material.node.color ); \/\/ THREE.TextureNode\r\n```\r\n\r\nBut this really comes down to implementation details, a PR would be necessary to answer these questions in any detail.","created_at":"2018-06-08T21:23:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395894304","id":395894304,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTg5NDMwNA==","updated_at":"2018-06-08T21:23:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395894304","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"@donmccurdy \r\n\r\nthat's a great example but i think it's for a different topic. If you don't mind i'd open another issue and move this there?\r\n\r\nIn the block above, how can I reason about `material.node` where does it come from? I have to know that `.color` somehow took a `TextureNode` not a `THREE.Color` or `THREE.Texture`? Or do i have to know that each `.prop` has some corresponding `.node.prop`?\r\n\r\nWhy not:\r\n\r\n```javascriptvar material = new THREE.MeshStandardMaterial();\r\nmaterial.map = textureLoader.load('foo.png'); \/\/ returns Texture not Node\r\nmaterial.map.channel  = 1\r\n```\r\n\r\nAlso related is https:\/\/github.com\/mrdoob\/three.js\/issues\/14250. In order to give a better comparison with what nodes to with textures and mapping, the templates could be refactored.\r\n","created_at":"2018-06-08T21:55:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395902129","id":395902129,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTkwMjEyOQ==","updated_at":"2018-06-08T21:59:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395902129","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"For this topic, it sounds like:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/examples\/js\/lines\/LineMaterial.js\r\n\r\nWouldn't actually be rewriitten, since it's already a `ShaderMaterial` and one can modify the provided code already. \r\n\r\nWhat's confusing is how does this apply to the non-artist people. I would assume that for some reason this shader is different, could be labeled more `utility` than `effect\/beauty`. It's job is to make the lines work with complicated low level structs, like instancing. As such, there is no expectation to expose it to someone who doesn't know GLSL. \/\r\n\r\nI would like to establish some kind of a nomenclature or classification to better understand why some materials are eligible for these out of the box modifications and others are not. \r\n\r\nOne rule could be \"if its in \/examples, not our concern\". Another could be \"if it does FOO, not a concern\". ","created_at":"2018-06-08T21:57:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395902894","id":395902894,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTkwMjg5NA==","updated_at":"2018-06-08T21:57:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395902894","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"I don't think we're going to be able to answer these questions until we begin implementing something... to your original question of \"should all shaders from \/examples be converted...\" I think the answer is no.","created_at":"2018-06-08T22:02:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395903947","id":395903947,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTkwMzk0Nw==","updated_at":"2018-06-08T22:03:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395903947","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"I think the biggest pain point in this whole story is what `move to \/src` entails:\r\n\r\n>until we begin implementing something... \r\n\r\ni can't relate this to:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/tree\/dev\/examples\/js\/nodes\r\n\r\nIsn't it already implemented? What does implementation refer to in this context?\r\n\r\n","created_at":"2018-06-08T22:08:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-395905191","id":395905191,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTkwNTE5MQ==","updated_at":"2018-06-08T22:08:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395905191","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"I believe I misread, thinking you were referring to the backward-compatible `MeshStandardMaterial` replacement that would transparently create nodes from the current syntax (but which doesn't exist yet).\r\n\r\nFor `LineMaterial`, I think it could very reasonably be left as-is. It's a reasonable example of using `ShaderMaterial`, and `NodeMaterial` is not meant to replace `ShaderMaterial`.","created_at":"2018-06-12T00:23:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-396427069","id":396427069,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQyNzA2OQ==","updated_at":"2018-06-12T00:23:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396427069","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"I think i'm overall confused with what `NodeMaterial` is supposed to do, from all that i've read, i thought that `ShaderMaterial` will go away, but then i realized it's just another way of assembling a `ShaderMaterial`.  If we ever decide to have fat lines in the core, that too seems like it should be assembled from nodes?","created_at":"2018-06-12T00:59:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-396432413","id":396432413,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQzMjQxMw==","updated_at":"2018-06-12T00:59:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396432413","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"Each one of these will extend `NodeMaterial`?\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/tree\/dev\/src\/materials\r\n\r\nstuff in `\/examples` will be left as is?","created_at":"2018-06-12T01:01:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-396432685","id":396432685,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQzMjY4NQ==","updated_at":"2018-06-12T01:01:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396432685","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"I think we're pretty far down a chain of assumptions on this discussion. I've written my own _suggested_ steps on this (buried in #7522 somewhere now) which would involve (1) putting NodeMaterial in src, and (2) eventually rewriting core MeshFooMaterial materials to use nodes internally. But mrdoob has not weighed in on whether to merge NodeMaterial at all, and if so he might certainly prefer to keep the existing materials around as-is, or wait a while before changing them.\r\n\r\nSo I think there are too many unanswered questions to really get into this. But (IMO) nothing _needs_ to be converted... if examples can be improved with nodes, we'll improve them. If not, no worries.","created_at":"2018-06-12T10:59:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-396550208","id":396550208,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjU1MDIwOA==","updated_at":"2018-06-12T10:59:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396550208","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":11,"author_association":"OWNER","body":"Agreed with everything @donmccurdy said.","created_at":"2018-06-18T07:09:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14252#issuecomment-397961480","id":397961480,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14252","node_id":"MDEyOklzc3VlQ29tbWVudDM5Nzk2MTQ4MA==","updated_at":"2018-06-18T07:09:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397961480","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}