{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I've done more digging into this, and have managed to fix the material issue in the exporter, except for the single material case in which I am exporting an array of length 1.. which i think should be just a single UUID in that case, so I still have to do some digging there... but three viewer still handles it ok, and assigns unmaterialed objects a default MeshBasicMaterial.\r\n\r\nI also found additional quirks in vertex\/normal\/transform export as well and some possible solutions..\r\nThere is a bunch of default coordinate mangling and transform reinterpretation, that seems like it is no longer neccessary. By removing them, I am able to get wysiwyg exports from a multi object\/material blender scene, and the three.js viewer. The caveat here is that it appears that Blenders \"XYZ\" Eulers, actually maps to three.js' \"ZYX\" Euler. I think I can remap this on the blender side, but that aspect of the eulers will be different. I'm attaching a zip of my modified exporter in case someone is jonesing for at least a partial solution to this.\r\n\r\nI need to test the other corners of the exporter... specifically skinned meshes, and there are probably others.\r\n\r\n[io_three.zip](https:\/\/github.com\/mrdoob\/three.js\/files\/1158796\/io_three.zip) hth\r\n","created_at":"2017-07-19T10:33:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11793#issuecomment-316343927","id":316343927,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11793","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjM0MzkyNw==","updated_at":"2017-07-19T10:36:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316343927","user":{"following_url":"https:\/\/api.github.com\/users\/manthrax\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/manthrax\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/350247?v=4","url":"https:\/\/api.github.com\/users\/manthrax","gists_url":"https:\/\/api.github.com\/users\/manthrax\/gists{\/gist_id}","html_url":"https:\/\/github.com\/manthrax","subscriptions_url":"https:\/\/api.github.com\/users\/manthrax\/subscriptions","node_id":"MDQ6VXNlcjM1MDI0Nw==","repos_url":"https:\/\/api.github.com\/users\/manthrax\/repos","received_events_url":"https:\/\/api.github.com\/users\/manthrax\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/manthrax\/starred{\/owner}{\/repo}","site_admin":false,"login":"manthrax","type":"User","id":350247,"followers_url":"https:\/\/api.github.com\/users\/manthrax\/followers","organizations_url":"https:\/\/api.github.com\/users\/manthrax\/orgs"}}]}