{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Sure. It should be backwards-compatible. This is an easy change. Hopefully you can propose an elegant implementation.","created_at":"2018-04-30T23:52:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-385562179","id":385562179,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NTU2MjE3OQ==","updated_at":"2018-04-30T23:52:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/385562179","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I always saw the orbit controls as something that controlled... well, orbiting i guess, of a camera. \r\n\r\nI believe it also has that `autoRotate` property, which is a good example of how you can cause a thing (`THREE.Camera` this case) to \"orbit\" around another thing (the `.target` `THREE.Vector3`).\r\n\r\nThe `autoRotate` interaction requires no mouse input, no keys to be pressed, no trackpads to be dragged on. \r\n\r\nIn a world full of unicorns, where it rains custard filled donuts, i imagine that these two concepts would be the responsibilities of two vastly different modules. \r\n\r\n>Ctrl-drag as an alternative to right-drag.\r\n\r\nIn the context of orbit controls, I believe that this is referring to `PAN`. This pan could be controlled through various input (keyboard, mouse, trackpad, joystick even VR controllers, leap motion, kinect etc). \r\n\r\nIn the context of mouse and trackball controls, this refers to a `key press` and some kind of a `drag` (could be mouse, could be touch). \r\n\r\n\r\nI've tried to remove the event listeners from inside the controllers and expose the handlers:\r\n```\r\nOrbit controls:\r\n========================\r\nonMouseDown\r\nonMouseMove\r\nonMouseUp\r\nonMouseWheel\r\nonKeyDown\r\nonTouchStart\r\nonTouchMove\r\nonTouchEnd\r\nonContextMenu\r\n\r\n\r\nOrthographic Trackball\r\n========================\r\nkeydown\r\nkeyup\r\nmousedown\r\nmousemove\r\nmouseup\r\nmousewheel\r\ntouchstart\r\ntouchmove\r\ntouchend\r\ncontextmenu\r\n\r\nTrackball\r\n========================\r\nkeydown\r\nkeyup\r\nmousedown\r\nmousemove\r\nmouseup\r\nmousewheel\r\ntouchstart\r\ntouchmove\r\ntouchend\r\ncontextmenu\r\n\r\nTransformControls\r\n========================\r\nonPointerHover\r\nonPointerDown\r\nonPointerMove\r\nonPointerUp\r\n```\r\n\r\n`TransformControls` is different than the first three, but i think it was easier to reason about. In this case, you may strongly believe that `CTRL + foo` should trigger `onPointerMove` but i think it should be `ALT + bar`. \r\n\r\nWe both agree that the controls should move \"on pointer\" but we disagree what \"on pointer\" is. \r\n\r\nCould this decoupling make sense in a world, not filled unicorns and raining donuts? \r\n\r\nRefactoring these is not fun by any means, but the results can be satisfying. \r\n\r\n","created_at":"2018-05-02T18:38:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-386078744","id":386078744,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NjA3ODc0NA==","updated_at":"2018-05-02T18:42:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/386078744","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Maybe a simpler case that could be made:\r\n\r\n> Imagine there are users out there who already implemented CTRL + drag for something else. Would this break their apps?","created_at":"2018-05-02T18:45:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-386080679","id":386080679,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NjA4MDY3OQ==","updated_at":"2018-05-02T18:45:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/386080679","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Any solution that allows the user to (1) specify Ctrl-drag as a trigger for an action and (2) specify multiple triggers for the same action would be fine from my perspective. :smile: I figure that a solution for (1) would  make Meta\/Alt\/Shift specifiable as well.\r\n\r\nThe current state of my PR turns this Ctrl-drag alternative into default behavior, but (_as I've indicated both here and there_) I've no demands for that to be the case\u2014if nothing else, you can view that part as a usage proposal.","created_at":"2018-05-02T19:03:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-386086161","id":386086161,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NjA4NjE2MQ==","updated_at":"2018-05-02T19:03:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/386086161","user":{"following_url":"https:\/\/api.github.com\/users\/rkirsling\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/rkirsling\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2172590?v=4","url":"https:\/\/api.github.com\/users\/rkirsling","gists_url":"https:\/\/api.github.com\/users\/rkirsling\/gists{\/gist_id}","html_url":"https:\/\/github.com\/rkirsling","subscriptions_url":"https:\/\/api.github.com\/users\/rkirsling\/subscriptions","node_id":"MDQ6VXNlcjIxNzI1OTA=","repos_url":"https:\/\/api.github.com\/users\/rkirsling\/repos","received_events_url":"https:\/\/api.github.com\/users\/rkirsling\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/rkirsling\/starred{\/owner}{\/repo}","site_admin":false,"login":"rkirsling","type":"User","id":2172590,"followers_url":"https:\/\/api.github.com\/users\/rkirsling\/followers","organizations_url":"https:\/\/api.github.com\/users\/rkirsling\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"For the benefit of others , the change to the existing code to implement your feature is easy, although it makes the existing variable names seem a bit too restrictive:\r\n```javascript\r\nfunction onMouseDown( event ) {\r\n\r\n\tif ( scope.enabled === false ) return;\r\n\r\n\tevent.preventDefault();\r\n\r\n\tswitch ( event.button ) {\r\n\r\n\t\tcase scope.mouseButtons.ORBIT:\r\n\r\n\t\t\tif ( event.ctrlKey ) {\r\n\r\n\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase scope.mouseButtons.ZOOM:\r\n\r\n\t\t. . .\r\n```\r\nThe reason the Controls are part of the examples is because it affords users the opportunity to modify the Controls to their liking.","created_at":"2018-05-02T19:22:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-386091316","id":386091316,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NjA5MTMxNg==","updated_at":"2018-05-02T19:22:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/386091316","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Are there other alternatives that would be more flexible? TransformControls seem to be a step further towards that?","created_at":"2018-05-02T19:33:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-386094275","id":386094275,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NjA5NDI3NQ==","updated_at":"2018-05-02T19:33:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/386094275","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"Please note that the change in #13972 is more flexible than @WestLangley's code snippet above, allowing one to freely specify whether a given mousedown event qualifies as an `ORBIT` \/ `ZOOM` \/ `PAN` action.\r\n\r\nSeems like there's a worthwhile discussion to be had surrounding support for alternate pointer devices, but I'm pretty sure it's outside the scope of this issue and its corresponding PR...?","created_at":"2018-05-02T20:28:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13970#issuecomment-386110360","id":386110360,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13970","node_id":"MDEyOklzc3VlQ29tbWVudDM4NjExMDM2MA==","updated_at":"2018-05-02T20:46:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/386110360","user":{"following_url":"https:\/\/api.github.com\/users\/rkirsling\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/rkirsling\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2172590?v=4","url":"https:\/\/api.github.com\/users\/rkirsling","gists_url":"https:\/\/api.github.com\/users\/rkirsling\/gists{\/gist_id}","html_url":"https:\/\/github.com\/rkirsling","subscriptions_url":"https:\/\/api.github.com\/users\/rkirsling\/subscriptions","node_id":"MDQ6VXNlcjIxNzI1OTA=","repos_url":"https:\/\/api.github.com\/users\/rkirsling\/repos","received_events_url":"https:\/\/api.github.com\/users\/rkirsling\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/rkirsling\/starred{\/owner}{\/repo}","site_admin":false,"login":"rkirsling","type":"User","id":2172590,"followers_url":"https:\/\/api.github.com\/users\/rkirsling\/followers","organizations_url":"https:\/\/api.github.com\/users\/rkirsling\/orgs"}}]}