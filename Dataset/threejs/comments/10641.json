{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"> My last fix #10501 does not completely fix the guard condition for ``divisions`` as the document of [``isNaN``](https:\/\/developer.mozilla.org\/en\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/isNaN) points out some exceptions. \r\n\r\nWhat specific cases are you referring to?","created_at":"2017-01-24T20:27:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-274928437","id":274928437,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NDkyODQzNw==","updated_at":"2017-01-24T20:27:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/274928437","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"```javascript\r\nif ( typeof divisions !== 'numbers' ) divisions = 5;\r\n```\r\nDo you mean `number` ?\r\n\r\nThis is not a sufficient test anyway, since `divisions` should be a positive integer.\r\n\r\nthree.js does not, in general, do type checking. I think it is sufficient to do what we do elsewhere:\r\n```javascript\r\nif ( divisions === undefined ) divisions = 5;\r\n```\r\n","created_at":"2017-01-25T01:14:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-274991148","id":274991148,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk5MTE0OA==","updated_at":"2017-01-25T01:14:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/274991148","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"@mrdoob Here are some examples from the document of ``isNaN``.\r\n```js\r\nisNaN(null);      \/\/ false\r\nisNaN(\"\");        \/\/ false: the empty string is converted to 0 which is not NaN\r\nisNaN(new Date());                \/\/ false\r\nisNaN(new Date().toString());     \/\/ true\r\n```\r\n\r\n@WestLangley I do mean ``number``. Thank you for pointing out and I have updated my fix.\r\n\r\nI think the ``typeof`` check is sufficient here since the condition of the ``for`` loop acts as another guard condition for non-positive integers.\r\n```js\r\nfor ( var d = 0; d <= divisions; d ++ ) {\r\n```\r\n\r\nComparing ``divisions`` with ``undefined`` is a even weaker condition than the previous implementation ``!divisions`` since a value of ``null === undefined`` evalutes to false.\r\n\r\nAs the [documentation](https:\/\/threejs.org\/docs\/index.html?q=Curve#Reference\/Extras.Core\/Curve) specifies that ``divisions`` is a number, we should keep the implementation consistent, rather than specifying number in the documentation but using non-undefined values in the implementation.\r\n","created_at":"2017-01-25T02:16:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275000710","id":275000710,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTAwMDcxMA==","updated_at":"2017-01-25T02:16:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275000710","user":{"following_url":"https:\/\/api.github.com\/users\/waitingcheung\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/waitingcheung\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2617118?v=4","url":"https:\/\/api.github.com\/users\/waitingcheung","gists_url":"https:\/\/api.github.com\/users\/waitingcheung\/gists{\/gist_id}","html_url":"https:\/\/github.com\/waitingcheung","subscriptions_url":"https:\/\/api.github.com\/users\/waitingcheung\/subscriptions","node_id":"MDQ6VXNlcjI2MTcxMTg=","repos_url":"https:\/\/api.github.com\/users\/waitingcheung\/repos","received_events_url":"https:\/\/api.github.com\/users\/waitingcheung\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/waitingcheung\/starred{\/owner}{\/repo}","site_admin":false,"login":"waitingcheung","type":"User","id":2617118,"followers_url":"https:\/\/api.github.com\/users\/waitingcheung\/followers","organizations_url":"https:\/\/api.github.com\/users\/waitingcheung\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Your test is not sufficient. A sufficient test is to test for positive integers only.\r\n\r\nFor example,\r\n\r\n1. If the argument is undefined, assign a default value.\r\n2. Otherwise, if the argument is not a positive integer, throw an error.\r\n\r\nWe typically do not perform the second test -- only the first one.\r\n\r\nThat is why I suggested\r\n```javascript\r\nif ( divisions === undefined ) divisions = 5;\r\n```\r\n\r\n","created_at":"2017-01-25T04:52:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275018846","id":275018846,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTAxODg0Ng==","updated_at":"2017-01-25T04:52:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275018846","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"I mean your suggestion can handle only a subset of inputs compared to mine and it does not address the inconsistency between the documentation and the actual implementation.\r\n```js\r\ndivisions === undefined \/\/ handle only undefined\r\ntypeof divisions !== 'number' \/\/ handle any non-numbers including undefined\r\n```\r\n\r\nIf you insist to test for only positive integers, this should satisfy your need.\r\n```js\r\ntypeof divisions !== 'number' || divisions <= 0\r\n```\r\n","created_at":"2017-01-25T05:15:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275021357","id":275021357,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTAyMTM1Nw==","updated_at":"2017-01-25T05:15:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275021357","user":{"following_url":"https:\/\/api.github.com\/users\/waitingcheung\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/waitingcheung\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2617118?v=4","url":"https:\/\/api.github.com\/users\/waitingcheung","gists_url":"https:\/\/api.github.com\/users\/waitingcheung\/gists{\/gist_id}","html_url":"https:\/\/github.com\/waitingcheung","subscriptions_url":"https:\/\/api.github.com\/users\/waitingcheung\/subscriptions","node_id":"MDQ6VXNlcjI2MTcxMTg=","repos_url":"https:\/\/api.github.com\/users\/waitingcheung\/repos","received_events_url":"https:\/\/api.github.com\/users\/waitingcheung\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/waitingcheung\/starred{\/owner}{\/repo}","site_admin":false,"login":"waitingcheung","type":"User","id":2617118,"followers_url":"https:\/\/api.github.com\/users\/waitingcheung\/followers","organizations_url":"https:\/\/api.github.com\/users\/waitingcheung\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"Feeling like it'd be helpful for contributors to add type check guideline to somewhere(Wiki?).\r\n\r\nMy understanding is, as @WestLangley mentioned,\r\nin general we don't do strict type check and just compare with `undefined` instead in Three.js\r\nunless there's any special\/reasonable reasons.\r\nI speculate it's based on JavaScript language limitation, performance, and code simplicity.\r\n\r\nConsistency between documentation and implementation wouldn't be good enough as a reason.\r\n\r\nBut if we'd think this'd be a serious issue\r\n\r\n> I  accidentally passed a string to the function and encountered a hard crash.\r\n\r\nwe could do.\r\n\r\n(This's just my opinion)\r\n","created_at":"2017-01-25T07:03:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275034443","id":275034443,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTAzNDQ0Mw==","updated_at":"2017-01-25T19:08:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275034443","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"@takahirox is correct.\r\n\r\nLook at the methods in [`Object3D.prototype`](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/core\/Object3D.js). We do not type-check arguments, or check if the arguments are in-range.\r\n\r\nOur policy is only to check if the argument is defined. If it is defined, we assume it is valid.\r\n\r\nIf we validate arguments in some places, users will expect it everywhere -- or worse, users won't know what to expect, and contributors won't know what pattern to follow.\r\n\r\nWhatever @mrdoob chooses to do, we should be consistent.","created_at":"2017-01-25T19:05:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275201483","id":275201483,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIwMTQ4Mw==","updated_at":"2017-01-25T19:05:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275201483","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":7,"author_association":"OWNER","body":"How about doing...\r\n\r\n```js\r\ngetPoints: function ( divisions ) {\r\n\r\n\tdivisions = parseInt( divisions ) || 5;\r\n\r\n\tvar points = [];\r\n\r\n\t...\r\n\r\n}\r\n```","created_at":"2017-01-29T06:07:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275896182","id":275896182,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTg5NjE4Mg==","updated_at":"2017-01-29T06:08:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275896182","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"@mrdoob It looks good to me. Simple and precise.","created_at":"2017-01-29T15:45:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275922316","id":275922316,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTkyMjMxNg==","updated_at":"2017-01-29T15:45:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275922316","user":{"following_url":"https:\/\/api.github.com\/users\/waitingcheung\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/waitingcheung\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2617118?v=4","url":"https:\/\/api.github.com\/users\/waitingcheung","gists_url":"https:\/\/api.github.com\/users\/waitingcheung\/gists{\/gist_id}","html_url":"https:\/\/github.com\/waitingcheung","subscriptions_url":"https:\/\/api.github.com\/users\/waitingcheung\/subscriptions","node_id":"MDQ6VXNlcjI2MTcxMTg=","repos_url":"https:\/\/api.github.com\/users\/waitingcheung\/repos","received_events_url":"https:\/\/api.github.com\/users\/waitingcheung\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/waitingcheung\/starred{\/owner}{\/repo}","site_admin":false,"login":"waitingcheung","type":"User","id":2617118,"followers_url":"https:\/\/api.github.com\/users\/waitingcheung\/followers","organizations_url":"https:\/\/api.github.com\/users\/waitingcheung\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":">How about doing...\r\n```javascript\r\ndivisions = parseInt( divisions ) || 5;\r\n```\r\nThat does not guarantee a valid input.\r\n\r\nI stand by what I have already said.","created_at":"2017-01-29T17:59:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275932585","id":275932585,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTkzMjU4NQ==","updated_at":"2017-01-29T17:59:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275932585","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":10,"author_association":"OWNER","body":"> That does not guarantee a valid input.\r\n\r\n> I stand by what I have already said.\r\n\r\nI know I know, and I agree. But I realised we also have this pattern:\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/geometries\/BoxGeometry.js#L58","created_at":"2017-01-29T18:02:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275932792","id":275932792,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTkzMjc5Mg==","updated_at":"2017-01-29T18:02:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275932792","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":">I know I know, and I agree. But I realised we also have this pattern:\r\n```javascript\r\nwidthSegments = Math.floor( widthSegments ) || 1;\r\n```\r\nBut that is not a valid check either.\r\n\r\nAre we allowing validity checks that do not guarantee valid input?\r\n\r\nIn this PR, we have one user that passes in a string when a positive integer is expected. So now we are expected to modify the library to accommodate the user's error?\r\n\r\n\r\n","created_at":"2017-01-29T19:03:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275937172","id":275937172,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTkzNzE3Mg==","updated_at":"2017-01-29T19:03:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275937172","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":12,"author_association":"OWNER","body":"Well put. Yeah, I think I agree. Lets go with:\r\n\r\n```js\r\nif ( divisions === undefined ) divisions = 5;\r\n```\r\n","created_at":"2017-01-29T19:05:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275937351","id":275937351,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTkzNzM1MQ==","updated_at":"2017-01-29T19:05:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275937351","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"Using ``parseInt`` is a more robust way than checking only ``undefined``. I do not see the point of going with the weaker one.\r\nAlso, one motivation of supplying a default value of 5 can be avoiding a hard crash of your library. The use of ``parseInt`` also supports such a motivation.","created_at":"2017-01-29T19:28:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275939309","id":275939309,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTkzOTMwOQ==","updated_at":"2017-01-29T19:28:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275939309","user":{"following_url":"https:\/\/api.github.com\/users\/waitingcheung\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/waitingcheung\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2617118?v=4","url":"https:\/\/api.github.com\/users\/waitingcheung","gists_url":"https:\/\/api.github.com\/users\/waitingcheung\/gists{\/gist_id}","html_url":"https:\/\/github.com\/waitingcheung","subscriptions_url":"https:\/\/api.github.com\/users\/waitingcheung\/subscriptions","node_id":"MDQ6VXNlcjI2MTcxMTg=","repos_url":"https:\/\/api.github.com\/users\/waitingcheung\/repos","received_events_url":"https:\/\/api.github.com\/users\/waitingcheung\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/waitingcheung\/starred{\/owner}{\/repo}","site_admin":false,"login":"waitingcheung","type":"User","id":2617118,"followers_url":"https:\/\/api.github.com\/users\/waitingcheung\/followers","organizations_url":"https:\/\/api.github.com\/users\/waitingcheung\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"@waitingcheung I think I answered that question in my previous comments, but thank you for bringing up the issue so we could discuss it. I know it is not a black-and-white issue, and the decision is somewhat subjective.","created_at":"2017-01-29T19:41:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275940183","id":275940183,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTk0MDE4Mw==","updated_at":"2017-01-29T19:41:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275940183","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@WestLangley I understand your concern in your previous comments. You are fine as long as the value is present. However, when you let improper values propagate along the execution paths of the library, it may be hard to debug when problems occur. Sometimes it may not be easy to track at which points of your program the improper values start to happen.","created_at":"2017-01-29T20:06:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-275941940","id":275941940,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTk0MTk0MA==","updated_at":"2017-01-29T20:06:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275941940","user":{"following_url":"https:\/\/api.github.com\/users\/waitingcheung\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/waitingcheung\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2617118?v=4","url":"https:\/\/api.github.com\/users\/waitingcheung","gists_url":"https:\/\/api.github.com\/users\/waitingcheung\/gists{\/gist_id}","html_url":"https:\/\/github.com\/waitingcheung","subscriptions_url":"https:\/\/api.github.com\/users\/waitingcheung\/subscriptions","node_id":"MDQ6VXNlcjI2MTcxMTg=","repos_url":"https:\/\/api.github.com\/users\/waitingcheung\/repos","received_events_url":"https:\/\/api.github.com\/users\/waitingcheung\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/waitingcheung\/starred{\/owner}{\/repo}","site_admin":false,"login":"waitingcheung","type":"User","id":2617118,"followers_url":"https:\/\/api.github.com\/users\/waitingcheung\/followers","organizations_url":"https:\/\/api.github.com\/users\/waitingcheung\/orgs"}},{"index":16,"author_association":"OWNER","body":"> However, when you let improper values propagate along the execution paths of the library, it may be hard to debug when problems occur. Sometimes it may not be easy to track at which points of your program the improper values start to happen.\r\n\r\nWe all agree with that but that's a problem of JavaScript itself. If we went down the route you propose every function in the library will have to have all sorts of checks.\r\n\r\nSo we basically hope the user of the library is a bit careful when programming.","created_at":"2017-01-31T20:49:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-276487448","id":276487448,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ4NzQ0OA==","updated_at":"2017-01-31T20:50:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276487448","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"I agree with you that we may not want some sorts of checks for every function, but only a small number of them may need the checks.\r\n\r\nFor most functions that do not call other functions, debugging TypeError may not be hard and we may not need the checks.\r\n\r\nFor a small number of functions that have a stack of calls to other functions, if TypeError can occur at the middle of the call stack, we probably want to check at the beginning of the call more than only ``undefined`` to help the developers and the users.","created_at":"2017-02-01T05:58:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10641#issuecomment-276579222","id":276579222,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10641","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU3OTIyMg==","updated_at":"2017-02-01T05:58:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276579222","user":{"following_url":"https:\/\/api.github.com\/users\/waitingcheung\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/waitingcheung\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/2617118?v=4","url":"https:\/\/api.github.com\/users\/waitingcheung","gists_url":"https:\/\/api.github.com\/users\/waitingcheung\/gists{\/gist_id}","html_url":"https:\/\/github.com\/waitingcheung","subscriptions_url":"https:\/\/api.github.com\/users\/waitingcheung\/subscriptions","node_id":"MDQ6VXNlcjI2MTcxMTg=","repos_url":"https:\/\/api.github.com\/users\/waitingcheung\/repos","received_events_url":"https:\/\/api.github.com\/users\/waitingcheung\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/waitingcheung\/starred{\/owner}{\/repo}","site_admin":false,"login":"waitingcheung","type":"User","id":2617118,"followers_url":"https:\/\/api.github.com\/users\/waitingcheung\/followers","organizations_url":"https:\/\/api.github.com\/users\/waitingcheung\/orgs"}}]}