{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I believe in earlier releases all `g` were ignored. If there were not `o` in the whole file, a single submesh was created and everything parsed to that. Otherwise each `o` encountered started a new submesh.\n\nI suppose most exporters like Blender let's you define if it exports as `g` or `o` or even both. Blender itself seems to parse each `g` as a new mesh when you import.\n\nTreating both as the same thing now looks like a breaking change. This is a bit worrying as code is easy to change when migrating but re-running your assets might be out of your control (e.g. distributed systems, user uploaded content). That might now break or create a lot more submeshes than earlier, which will impact rendering perf.\n\nMaybe this should be a option in the parse function that default to what the behavior has been earlier. \n\n```\n\/\/ defaults to this is options is passed\nobjLoader.parse(text, { ignoreGroups : true });\n```\n\n**Edit:** I think dropping support for `o` would be impossible (break too many things) and not wise in general. Most obj files afaik use `o`. obj file is in fact a single mesh that can have multiple \"submeshes\" with `o\/g` depending on the importers interpretation, that can have each their own material. Its still a \"single\" thing that you can move together by moving the group\/object aka \"root\".\n","created_at":"2016-03-18T11:29:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8383#issuecomment-198315449","id":198315449,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8383","node_id":"MDEyOklzc3VlQ29tbWVudDE5ODMxNTQ0OQ==","updated_at":"2016-03-18T11:35:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/198315449","user":{"following_url":"https:\/\/api.github.com\/users\/jonnenauha\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jonnenauha\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/157519?v=4","url":"https:\/\/api.github.com\/users\/jonnenauha","gists_url":"https:\/\/api.github.com\/users\/jonnenauha\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jonnenauha","subscriptions_url":"https:\/\/api.github.com\/users\/jonnenauha\/subscriptions","node_id":"MDQ6VXNlcjE1NzUxOQ==","repos_url":"https:\/\/api.github.com\/users\/jonnenauha\/repos","received_events_url":"https:\/\/api.github.com\/users\/jonnenauha\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jonnenauha\/starred{\/owner}{\/repo}","site_admin":false,"login":"jonnenauha","type":"User","id":157519,"followers_url":"https:\/\/api.github.com\/users\/jonnenauha\/followers","organizations_url":"https:\/\/api.github.com\/users\/jonnenauha\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Looking at this problem more closely in my PR work I think I understand this case a bit better.\n\nThe passing in of option to ignore `g` that I suggested above is not the best approach. The parser treats both `o\/g` as a start of a new object. The vertex\/normal\/uv lines are parsed into a global state.\n\nVertex\/normal\/uv declarations are added as the parser progresses. Faces reference either absolute (positive numbers) or relative (negative numbers) from where the parser is at that point.\n\nIf there are `g\/o` declarations that is not followed by any faces before a new `o\/g` is declared, then its geometry is empty.\n\nThe parser now attaches also these empty geometry children to the returned container (THREE.Group). This is a bug and produces WebGL errors later on when rendering the scene. I have fixed this in my PR, empty geometry children are silently ignored.\n\nIn my opinion the new logic of treating both `o\/g` should be kept (even if `g` was not handled in earlier releases). This will just increase the success rate of parsing the obj successfully as many exporters use groups or both objects and groups.\n","created_at":"2016-03-23T21:40:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8383#issuecomment-200554125","id":200554125,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8383","node_id":"MDEyOklzc3VlQ29tbWVudDIwMDU1NDEyNQ==","updated_at":"2016-03-23T21:40:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/200554125","user":{"following_url":"https:\/\/api.github.com\/users\/jonnenauha\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jonnenauha\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/157519?v=4","url":"https:\/\/api.github.com\/users\/jonnenauha","gists_url":"https:\/\/api.github.com\/users\/jonnenauha\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jonnenauha","subscriptions_url":"https:\/\/api.github.com\/users\/jonnenauha\/subscriptions","node_id":"MDQ6VXNlcjE1NzUxOQ==","repos_url":"https:\/\/api.github.com\/users\/jonnenauha\/repos","received_events_url":"https:\/\/api.github.com\/users\/jonnenauha\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jonnenauha\/starred{\/owner}{\/repo}","site_admin":false,"login":"jonnenauha","type":"User","id":157519,"followers_url":"https:\/\/api.github.com\/users\/jonnenauha\/followers","organizations_url":"https:\/\/api.github.com\/users\/jonnenauha\/orgs"}},{"index":2,"author_association":"NONE","body":"> Most obj files afaik use o. \n\nMaya (via Autodesk via Wavefront, arguably is the reference implementation of OBJ as they created it) as well as Houdini are writing out 'g'. In the default case, loading OBJ's with and re-saving in either of these packages are writing out 'g'. Mentioned above, if anything 'o', was optional.\n\nRegardless, missing support for 'g' (one or more) statements in a file is sorely missing.\n","created_at":"2016-03-24T21:34:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8383#issuecomment-201033917","id":201033917,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8383","node_id":"MDEyOklzc3VlQ29tbWVudDIwMTAzMzkxNw==","updated_at":"2016-03-24T21:40:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/201033917","user":{"following_url":"https:\/\/api.github.com\/users\/pinkwerks\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pinkwerks\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/538256?v=4","url":"https:\/\/api.github.com\/users\/pinkwerks","gists_url":"https:\/\/api.github.com\/users\/pinkwerks\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pinkwerks","subscriptions_url":"https:\/\/api.github.com\/users\/pinkwerks\/subscriptions","node_id":"MDQ6VXNlcjUzODI1Ng==","repos_url":"https:\/\/api.github.com\/users\/pinkwerks\/repos","received_events_url":"https:\/\/api.github.com\/users\/pinkwerks\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pinkwerks\/starred{\/owner}{\/repo}","site_admin":false,"login":"pinkwerks","type":"User","id":538256,"followers_url":"https:\/\/api.github.com\/users\/pinkwerks\/followers","organizations_url":"https:\/\/api.github.com\/users\/pinkwerks\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"@pinkwerks well, as I just said both o\/g are supported with the current loader. If you are on old three.js version youll need to upgrade. I'm not sure if the current loader is incompatible with older versions, but it might work just by throwing in the new ObjLoader.\n\nI think this o\/g stuff is a non issue now, both are supported. If you find bugs (in the latest version) please report them :)\n","created_at":"2016-03-25T00:54:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8383#issuecomment-201087886","id":201087886,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8383","node_id":"MDEyOklzc3VlQ29tbWVudDIwMTA4Nzg4Ng==","updated_at":"2016-03-25T00:54:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/201087886","user":{"following_url":"https:\/\/api.github.com\/users\/jonnenauha\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jonnenauha\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/157519?v=4","url":"https:\/\/api.github.com\/users\/jonnenauha","gists_url":"https:\/\/api.github.com\/users\/jonnenauha\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jonnenauha","subscriptions_url":"https:\/\/api.github.com\/users\/jonnenauha\/subscriptions","node_id":"MDQ6VXNlcjE1NzUxOQ==","repos_url":"https:\/\/api.github.com\/users\/jonnenauha\/repos","received_events_url":"https:\/\/api.github.com\/users\/jonnenauha\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jonnenauha\/starred{\/owner}{\/repo}","site_admin":false,"login":"jonnenauha","type":"User","id":157519,"followers_url":"https:\/\/api.github.com\/users\/jonnenauha\/followers","organizations_url":"https:\/\/api.github.com\/users\/jonnenauha\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"@jonnenauha I tried out your PR and it works great with my current project. After looking at several more `.obj` files, it does seem like `o` tags are used interchangeably with `g` tags. While confusing, I agree that it's best to support both. Thanks for improving the OBJLoader!\n","created_at":"2016-03-25T01:53:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8383#issuecomment-201105983","id":201105983,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8383","node_id":"MDEyOklzc3VlQ29tbWVudDIwMTEwNTk4Mw==","updated_at":"2016-03-25T01:53:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/201105983","user":{"following_url":"https:\/\/api.github.com\/users\/andreykaipov\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/andreykaipov\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/9457739?v=4","url":"https:\/\/api.github.com\/users\/andreykaipov","gists_url":"https:\/\/api.github.com\/users\/andreykaipov\/gists{\/gist_id}","html_url":"https:\/\/github.com\/andreykaipov","subscriptions_url":"https:\/\/api.github.com\/users\/andreykaipov\/subscriptions","node_id":"MDQ6VXNlcjk0NTc3Mzk=","repos_url":"https:\/\/api.github.com\/users\/andreykaipov\/repos","received_events_url":"https:\/\/api.github.com\/users\/andreykaipov\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/andreykaipov\/starred{\/owner}{\/repo}","site_admin":false,"login":"andreykaipov","type":"User","id":9457739,"followers_url":"https:\/\/api.github.com\/users\/andreykaipov\/followers","organizations_url":"https:\/\/api.github.com\/users\/andreykaipov\/orgs"}},{"index":5,"author_association":"NONE","body":"@jonnenauha Turns out I ran across this using an older version and the real problem was unnamed groups which has been fixed. Thanks.\n","created_at":"2016-03-25T21:53:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8383#issuecomment-201532596","id":201532596,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8383","node_id":"MDEyOklzc3VlQ29tbWVudDIwMTUzMjU5Ng==","updated_at":"2016-03-25T21:53:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/201532596","user":{"following_url":"https:\/\/api.github.com\/users\/pinkwerks\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pinkwerks\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/538256?v=4","url":"https:\/\/api.github.com\/users\/pinkwerks","gists_url":"https:\/\/api.github.com\/users\/pinkwerks\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pinkwerks","subscriptions_url":"https:\/\/api.github.com\/users\/pinkwerks\/subscriptions","node_id":"MDQ6VXNlcjUzODI1Ng==","repos_url":"https:\/\/api.github.com\/users\/pinkwerks\/repos","received_events_url":"https:\/\/api.github.com\/users\/pinkwerks\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pinkwerks\/starred{\/owner}{\/repo}","site_admin":false,"login":"pinkwerks","type":"User","id":538256,"followers_url":"https:\/\/api.github.com\/users\/pinkwerks\/followers","organizations_url":"https:\/\/api.github.com\/users\/pinkwerks\/orgs"}}]}