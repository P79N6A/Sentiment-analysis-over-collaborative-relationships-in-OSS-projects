{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"This is awesome!\r\n\r\nI am concerned it is slow code though, this function, wdec14, is in an inner loop and does two new calls: https:\/\/github.com\/mrdoob\/three.js\/pull\/13346\/files#diff-8c3168ce268d9c60ad2c1e022e579e3aR307\r\n\r\nRemember that you can create views into the same data set.  It may be possible to use a preallocated view and just access it repeatedly.  you can also create multiple views of the same data set.  I believe that such a strategy will speed this code up like 10x.\r\n\r\nSame with parseUint16 - use a preallocated view and then calculate offsets into it.  It should be straight forward to implement this and a huge time saving.\r\n\r\nAlso remember there is already a half conversion function here that was used for HDR half conversion: https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/examples\/js\/loaders\/HDRCubeTextureLoader.js#L27  But I guess this is the wrong way.  There was a half class a while back, but I guess it got refactored out along the way, which is too bad.","created_at":"2018-02-17T16:52:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366454342","id":366454342,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjQ1NDM0Mg==","updated_at":"2018-02-17T16:52:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366454342","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Hey @bhouston, thank you for your comments!\r\n\r\nI have taken your advice and refactored in a few places to either use a function for conversion, or preallocated a DataView in an effort to improve the performance. Using your suggestions, I have reduced the parsing time from ~2149ms to ~327ms. Even more can be done, but I think this puts us in acceptable performance bracket to start with.\r\n\r\nRegarding the shared half conversion, I definitely agree we don't want to repeat this type of code all over the place, and that we should put this into some kind of class or helper tool chain, but perhaps that can come in a follow up refactor, since it would require also touching the code in other examples?","created_at":"2018-02-19T17:11:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366753939","id":366753939,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc1MzkzOQ==","updated_at":"2018-02-19T17:11:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366753939","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"One more thought: as it stands, I am passing around ArrayBuffer\/DataView along with a separate offset. I think this could be cleaned up even more by introducing a small object to carry the buffer and offset together, which hopefully I can do in a clean up refactor follow up.","created_at":"2018-02-19T17:13:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366754384","id":366754384,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc1NDM4NA==","updated_at":"2018-02-19T17:13:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366754384","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Nice performance improvement.  I would go a little further and instead replace this pattern (Which applies to others such as parseFloat16, etc):\r\n\r\n```\r\nfunction parseFloat32( buffer, offset ) {\r\n\r\n\t\tvar float = new DataView( buffer.slice( offset.value, offset.value + 4 ) ).getFloat32( 0, true );\r\n\r\n\t\toffset.value += 4;\r\n\r\n\t\treturn float;\r\n\r\n\t}\r\n```\r\n\r\nReplace the above with the following preallocated DataView strategy.  It should remove nearly all allocations while being fairly simple code.\r\n\r\n```\r\n\r\n\/\/ this is assuming the largest data size is 4 bytes.\r\nvar dataViews = [ new DataView( buffer.slice(0) ), new DataView( buffer.slice(1) ), new DataView( buffer.slice(2) ), new DataView( buffer.slice(3) ) ];\r\n\r\nfunction getFloat32( dataViews, offset ) {\r\n  return dataViews[ offset % FLOAT_SIZE ].getFloat32( Math.floor( offset \/ FLOAT_SIZE ) );\r\n}\r\nfunction getInt16( dataViews, offset ) {\r\n  return dataViews[ offset % INT16_SIZE ].getFloat32( Math.floor( offset \/ INT16_SIZE ) );\r\n}\r\nfunction getInt8( dataViews, offset ) {\r\n  return dataViews[ offset % INT8_SIZE ].getFloat32( Math.floor( offset \/ INT8_SIZE ) );\r\n}\r\n\r\n[...]\r\n\r\nvar offset = 0;\r\n\r\nvar myInt8 = getInt8( dataViews, offset );\r\noffset += INT8_SIZE;\r\n\r\nvar myInt16 = getInt16( dataViews, offset );\r\noffset += INT16_SIZE;\r\n\r\nvar myInt8 = getInt8( dataViews, offset );\r\noffset += INT8_SIZE;\r\n\r\nvar myFloat = getFloat32( dataViews, offset );\r\noffset += FLOAT32_SIZE;\r\n``` \r\n\r\nThis will get rid of nearly all the rest of the allocations....","created_at":"2018-02-19T17:31:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366759321","id":366759321,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc1OTMyMQ==","updated_at":"2018-02-19T17:31:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366759321","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"> One more thought: as it stands, I am passing around ArrayBuffer\/DataView along with a separate offset. I think this could be cleaned up even more by introducing a small object to carry the buffer and offset together, which hopefully I can do in a clean up refactor follow up.\r\n\r\nSure, but I wouldn't worry about it.  Creating objects is the slowest thing in JavaScript by far.  In fact often destructuring temporary objects into just individual primitive types is an optimization in JavaScript.\r\n\r\nThus I would not try to clean up the code by introducing temporary JavaScript objects, even if they are created like ```{ buffer: buffer, offset: offset }```, they will often slow down the code because it touches the GC.\r\n\r\nYou basically never want to touch the GC when writing performance oriented JavaScript code -- which is what all my feedback is in regards to.","created_at":"2018-02-19T17:37:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366760828","id":366760828,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc2MDgyOA==","updated_at":"2018-02-19T17:37:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366760828","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Went back over the code again, and I've got the time down yet again to ~240ms, from ~327ms. I've got a single preallocated `DataView` in nearly every case, which did help a little bit. Using the profiler\r\n\r\n<img width=\"480\" alt=\"screen shot 2018-02-19 at 2 44 55 pm\" src=\"https:\/\/user-images.githubusercontent.com\/1041278\/36394743-9e227e3e-1583-11e8-8689-8dd21050424f.png\"> \r\n\r\n_Note the profiler seems to show things a bit slower than the actual run time._\r\n\r\nI saw the \ud83d\udd25hot path is actually around `parseUint8`. To get even faster, I've added a case where we use `Uint8Array`, instead of `DataView`, since this is a bit faster even still. This is how I got most of the speed improvement this refactor \ud83d\ude92.\r\n\r\nI also explored some variations where instead of doing `return { c: c, lc: lc };` in `getChar`, etc. I made a preallocated return object and re-used that, however that didn't yield any particular improvement in speed. My impression is that performance-wise the returns are diminishing at this point.","created_at":"2018-02-19T19:50:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366788182","id":366788182,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc4ODE4Mg==","updated_at":"2018-02-19T20:02:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366788182","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"I know I am being annoying but two more changes will basically fix the last remaining memory issues:\r\n\r\nReplace this pattern with this:\r\n```\r\nvar temp = getCode(pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset);\r\nc = temp.c;\r\nlc = temp.lc;\r\n```\r\n\r\n```\r\n\/\/ somewhere out of the inner loop, or make it a semi-global via a closure.\r\nvar tempTuple = { c: 0, l: 0 };\r\n\r\n...\r\n\/\/ later in the inner loop just reuse the tuple constantly.\r\ngetCode( tempTuple, .... );\r\nc = tempTuple.c;\r\ncl = tempTuple.cl;\r\n```\r\n\r\nThe above pattern of passing in a single allocated object to get the results of the call, instead of returning a new JAvaScript object on each innovation should be a big speed up.  This pattern can be applied to wdec15, getChar and getCode -- all of which are in your inner loops.","created_at":"2018-02-19T20:37:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366797238","id":366797238,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc5NzIzOA==","updated_at":"2018-02-19T20:37:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366797238","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"The last remaining issues for memory are these - these are just killer costly and unnecessary:\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/090ce2f6d60d66efd947f371b6ac239d6ca1dc76\/examples\/js\/loaders\/EXRLoader.js#L308\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/090ce2f6d60d66efd947f371b6ac239d6ca1dc76\/examples\/js\/loaders\/EXRLoader.js#L278\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/090ce2f6d60d66efd947f371b6ac239d6ca1dc76\/examples\/js\/loaders\/EXRLoader.js#L145\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/090ce2f6d60d66efd947f371b6ac239d6ca1dc76\/examples\/js\/loaders\/EXRLoader.js#L335","created_at":"2018-02-19T20:42:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366798165","id":366798165,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc5ODE2NQ==","updated_at":"2018-02-19T20:42:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366798165","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"I see 'em, will fix \ud83d\udc4d ","created_at":"2018-02-19T20:42:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366798275","id":366798275,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njc5ODI3NQ==","updated_at":"2018-02-19T20:42:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366798275","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"Updated!","created_at":"2018-02-19T21:10:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-366803469","id":366803469,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjgwMzQ2OQ==","updated_at":"2018-02-19T21:10:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366803469","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":10,"author_association":"OWNER","body":"@bhouston looks good?","created_at":"2018-02-20T23:43:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-367161251","id":367161251,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2NzE2MTI1MQ==","updated_at":"2018-02-20T23:43:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/367161251","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"Hoping to follow this one up using this to implement IBL with latlong\/equiangular EXR HDR light probes!","created_at":"2018-02-27T14:50:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-368902959","id":368902959,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODkwMjk1OQ==","updated_at":"2018-02-27T14:50:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368902959","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":12,"author_association":"OWNER","body":"Will merge. If @bhouston finds something we can tweak afterwards.","created_at":"2018-03-01T00:35:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-369433320","id":369433320,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2OTQzMzMyMA==","updated_at":"2018-03-01T00:35:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/369433320","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"OWNER","body":"Thanks!","created_at":"2018-03-01T00:35:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13346#issuecomment-369433363","id":369433363,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13346","node_id":"MDEyOklzc3VlQ29tbWVudDM2OTQzMzM2Mw==","updated_at":"2018-03-01T00:35:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/369433363","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}