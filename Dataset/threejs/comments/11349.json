{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"Wow, crazy sweet! Really good idea on approaching this problem. ","created_at":"2017-05-17T00:02:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-301947838","id":301947838,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTk0NzgzOA==","updated_at":"2017-05-17T00:02:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301947838","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Cool! This implementation solves some problems of the original meshline approach \ud83d\udc4d. And thanks to geometry instancing, it is definitely more performant!\r\n\r\nThe goal of the original PR was to implement the extended `linewidth` support more transparently, see https:\/\/github.com\/mrdoob\/three.js\/pull\/11040#issuecomment-288168449, so without creating new entities for the user. Instead, the renderer should automatically use the alternative `line` implementation if necessary.","created_at":"2017-05-17T09:19:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302034544","id":302034544,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjAzNDU0NA==","updated_at":"2017-05-18T20:03:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302034544","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"@WestLangley BTW: Do you found out what problem causes the wrong rendering mentioned in https:\/\/github.com\/mrdoob\/three.js\/pull\/11040#issuecomment-300576961?","created_at":"2017-05-17T09:20:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302034783","id":302034783,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjAzNDc4Mw==","updated_at":"2017-05-17T09:20:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302034783","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":">The goal of the original PR was to implement the extended linewidth support more transparently,\r\n\r\nThat is the goal here, too. The use of instancing means the three.js classes\/API may have to be refactored. That is why I created new classes in the demo as a first step toward thinking about the redesign -- if any.\r\n\r\n> Instead, the renderer should automatically use the alternative line implementation if necessary.\r\n\r\nThe demo is meant to show that `gl.LINE` support is no longer required since the quality is the same when `linewidth` is 1. But that might not be true on every device\/browser\/resolution\/DPR combination. Actually, setting `linewidth` to at least 2 seems to look the best.\r\n\r\nAlso, although it may be fun to play with large values of `linewidth`, I would expect most users to set it to some number in the single-digits.","created_at":"2017-05-17T15:44:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302132223","id":302132223,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjEzMjIyMw==","updated_at":"2017-05-17T15:44:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302132223","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":">Did you find out what problem causes the wrong rendering mentioned in #11040 (comment)?\r\n\r\nI have not. But I think the mitering approach is flawed. Line edges have to be parallel in 2D, and that means that mitered joints intersecting at very acute angles would have outside edges that intersect at near infinity. That is why I opted for the rounded end caps and avoided mitering altogether.","created_at":"2017-05-17T15:56:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302135985","id":302135985,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjEzNTk4NQ==","updated_at":"2017-05-17T15:56:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302135985","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"I see. Anyway, this PR is a huge step forward so it's better to close #11040 in favor of this one \ud83d\ude05 .","created_at":"2017-05-17T16:31:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302146193","id":302146193,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjE0NjE5Mw==","updated_at":"2017-05-19T09:27:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302146193","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"How long will this take to land? Could you make an npm module?\r\n","created_at":"2017-05-17T20:19:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302219922","id":302219922,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjIxOTkyMg==","updated_at":"2017-05-17T20:20:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302219922","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":">The demo is meant to show that gl.LINE support is no longer required since the quality is the same when linewidth is 1. \r\n\r\nWhat about performance? This can't possibly be the same as gl.LINE?\r\n\r\n>I have stubbed out several new classes. We can see if they make sense. Due to name conflicts, I added \"2\" to some of the names for now. \r\n\r\nWhy are code comments a super big no no and frowned upon in three.js? Just by looking at file names i can't tell what they do. When looking at code, you really need to read everything and understand. I think it would be helpful to have something like \r\n\r\n>class foo does bar, it's needed because baz is handled differently than how three currently handles qux (for example, why a Line extends mesh)\r\n\r\n\r\n","created_at":"2017-05-17T20:26:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302221643","id":302221643,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjIyMTY0Mw==","updated_at":"2017-05-17T20:35:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302221643","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":8,"author_association":"NONE","body":"Beautiful work!","created_at":"2017-05-17T21:53:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302242326","id":302242326,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjI0MjMyNg==","updated_at":"2017-05-17T21:53:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302242326","user":{"following_url":"https:\/\/api.github.com\/users\/kenrussell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kenrussell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1149904?v=4","url":"https:\/\/api.github.com\/users\/kenrussell","gists_url":"https:\/\/api.github.com\/users\/kenrussell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kenrussell","subscriptions_url":"https:\/\/api.github.com\/users\/kenrussell\/subscriptions","node_id":"MDQ6VXNlcjExNDk5MDQ=","repos_url":"https:\/\/api.github.com\/users\/kenrussell\/repos","received_events_url":"https:\/\/api.github.com\/users\/kenrussell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kenrussell\/starred{\/owner}{\/repo}","site_admin":false,"login":"kenrussell","type":"User","id":1149904,"followers_url":"https:\/\/api.github.com\/users\/kenrussell\/followers","organizations_url":"https:\/\/api.github.com\/users\/kenrussell\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"> Could you make an npm module?\r\n\r\nWe should prioritize this PR so it lands in the core as fast as possible.\r\n\r\n> The demo is meant to show that gl.LINE support is no longer required since the quality is the same when linewidth is 1.\r\n\r\nUm, i'm not sure anymore if having two solutions and switching if `linewidth > 1` is appropriate. Maybe it's better drop `gl.LINE` support and render all lines with this nice implementation.","created_at":"2017-05-18T07:43:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302326957","id":302326957,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjMyNjk1Nw==","updated_at":"2017-05-18T07:43:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302326957","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":10,"author_association":"NONE","body":"@Mugen87 what's the perf of `gl.LINE` compared with these screen space lines? `gl.LINE` might be good to have for wireframes, etc, even if not directly exposed via the API","created_at":"2017-05-18T13:54:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302410475","id":302410475,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQxMDQ3NQ==","updated_at":"2017-05-18T13:54:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302410475","user":{"following_url":"https:\/\/api.github.com\/users\/hccampos\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/hccampos\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3759114?v=4","url":"https:\/\/api.github.com\/users\/hccampos","gists_url":"https:\/\/api.github.com\/users\/hccampos\/gists{\/gist_id}","html_url":"https:\/\/github.com\/hccampos","subscriptions_url":"https:\/\/api.github.com\/users\/hccampos\/subscriptions","node_id":"MDQ6VXNlcjM3NTkxMTQ=","repos_url":"https:\/\/api.github.com\/users\/hccampos\/repos","received_events_url":"https:\/\/api.github.com\/users\/hccampos\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/hccampos\/starred{\/owner}{\/repo}","site_admin":false,"login":"hccampos","type":"User","id":3759114,"followers_url":"https:\/\/api.github.com\/users\/hccampos\/followers","organizations_url":"https:\/\/api.github.com\/users\/hccampos\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"^ +1 \r\n\r\nI wouldn't go too crazy about replacing gl lines with this. I havent had a chance to dig into the code but i assume it's **at least** twice as many vertices to process in order to draw the mesh, but i assume it's actually more -  if you need the dir of a line to be known from the vertex, you need to transform other vertices for each vertex.\r\n\r\n\r\n\r\nI took this for a spin, for a limited test with just an array of few verts it worked flawlessly, but integrating it into a more complex project failed, i started crashing webgl. ","created_at":"2017-05-18T16:47:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302467924","id":302467924,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQ2NzkyNA==","updated_at":"2017-05-18T16:53:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302467924","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":12,"author_association":"NONE","body":"@pailhead could you provide an example where this crashes WebGL as you say?\r\n","created_at":"2017-05-18T17:16:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302479407","id":302479407,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQ3OTQwNw==","updated_at":"2017-05-18T17:16:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302479407","user":{"following_url":"https:\/\/api.github.com\/users\/kenrussell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kenrussell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1149904?v=4","url":"https:\/\/api.github.com\/users\/kenrussell","gists_url":"https:\/\/api.github.com\/users\/kenrussell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kenrussell","subscriptions_url":"https:\/\/api.github.com\/users\/kenrussell\/subscriptions","node_id":"MDQ6VXNlcjExNDk5MDQ=","repos_url":"https:\/\/api.github.com\/users\/kenrussell\/repos","received_events_url":"https:\/\/api.github.com\/users\/kenrussell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kenrussell\/starred{\/owner}{\/repo}","site_admin":false,"login":"kenrussell","type":"User","id":1149904,"followers_url":"https:\/\/api.github.com\/users\/kenrussell\/followers","organizations_url":"https:\/\/api.github.com\/users\/kenrussell\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"@kenrussell \r\n\r\nIt was an user error i thought i was creating too many lines, but i didn't pass the right material. I accidentally passed the line geometry instead. Dunno if you can recreate it:\r\n```\r\nlet lg = new THREE.LineGeometry()\r\nlg.setPositions( positionsArray )\r\n\r\nscene.add( new THREE.Line2( lg, lg ) ) \r\n```\r\nSomething rendered, but it was really slow and i kept getting \"rats...\". \r\n\r\nThese work great, would love to post some screenshots but need to find a suitable model that i can show. Round joints are the way to go, mitering (didnt know it was called like that) is just flawed. I'm just worried that rendering all this for a very thin line is a bit overkill. Why not just make it optional? It might be worth considering how people are using three nowadays, someone may just opt to import these lines from either src or examples and use them as is. ","created_at":"2017-05-18T18:18:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302498482","id":302498482,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQ5ODQ4Mg==","updated_at":"2017-05-18T20:51:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302498482","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"@hccampos I don't have any performance comparisons so far. But replacing `gl.LINE`  with a pure screen spaced approach is something we should consider in the context of this PR.\r\n\r\nI've tested the implementation on various devices today. The visual results are consistent and really impressive! I hope i have some time for simple performance tests in the next days.","created_at":"2017-05-18T19:51:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302522427","id":302522427,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjUyMjQyNw==","updated_at":"2017-05-18T20:00:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302522427","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":15,"author_association":"NONE","body":"@Mugen87 sounds like a plan. Another to look into would be dynamically changing lines. When using ` THREE.MeshLine` (https:\/\/github.com\/spite\/THREE.MeshLine) I implemented some custom logic to reuse buffers or dynamically allocate larger buffers when necessary. It would be super cool if the implementation that makes it into the core includes something similar. From what I've seen in the code, it currently allocates buffers and rebuilds the whole geometry every time, which isn't very optimal.","created_at":"2017-05-18T19:57:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302523929","id":302523929,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjUyMzkyOQ==","updated_at":"2017-05-18T19:57:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302523929","user":{"following_url":"https:\/\/api.github.com\/users\/hccampos\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/hccampos\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3759114?v=4","url":"https:\/\/api.github.com\/users\/hccampos","gists_url":"https:\/\/api.github.com\/users\/hccampos\/gists{\/gist_id}","html_url":"https:\/\/github.com\/hccampos","subscriptions_url":"https:\/\/api.github.com\/users\/hccampos\/subscriptions","node_id":"MDQ6VXNlcjM3NTkxMTQ=","repos_url":"https:\/\/api.github.com\/users\/hccampos\/repos","received_events_url":"https:\/\/api.github.com\/users\/hccampos\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/hccampos\/starred{\/owner}{\/repo}","site_admin":false,"login":"hccampos","type":"User","id":3759114,"followers_url":"https:\/\/api.github.com\/users\/hccampos\/followers","organizations_url":"https:\/\/api.github.com\/users\/hccampos\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"If anyone is interested checking this out, i thought it would possibly squeeze a couple more frames but not a huge improvement, should probably make sure that it using the right shader.\r\n\r\nOriginal:\r\nhttp:\/\/dusanbosnjak.com\/test\/webGL\/three-fatline\/\r\n\r\nSome attempted optimizations:\r\nhttp:\/\/dusanbosnjak.com\/test\/webGL\/three-fatline\/?debug\r\n\r\nI mostly moved the resolution and aspect stuff outside the shader, and compute\/provide inverses through uniforms. I also multiplied p and mv once before multiplying the vecs. I dont think i set the test right but i think it may speed it up a tad. \r\n\r\nBut more importantly, if you hit space you should switch to gl lines, and it's much much faster. As much as i love love LOVE :heart: them, i'm pretty surprised if you really want to just straight up replace native lines with this approach. Even more so if you want to do it for lines that are 1px wide.\r\n\r\n\r\nI experimented with the resolution setter. I wanted to give and return a vec2 but i wanted to compute inverses for the uniforms as a sideffect. While failing at this, i'm not sure what the shader was getting (i did have a `vec4 uResolution` and `vec2 uAspect` declared), but my windows desktop machine went crazy. Not only did i get \"rats!..\" but the system reported the drivers crashing. So @kenrussell don't know if you're interested but i could try to recreate it in a fiddle. This was all happening with a slightly different shader, so not sure if it's relevant. \r\n\r\nI'm interested if there are better ways to test this, i'm not entirely sure what is going on, i tried to disable the frustum culling in order to have a fixed number of verts rendering all the time, but i see it gets much faster if you zoom in, slower if you zoom out. \r\n","created_at":"2017-05-19T16:16:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302746856","id":302746856,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc0Njg1Ng==","updated_at":"2017-05-19T18:47:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302746856","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":17,"author_association":"NONE","body":"@pailhead it seems likely that your changes caused crazy geometry to be produced, and that the huge slowdowns in rendering were what caused your Windows machine to hit Timeout Detection and Recovery (resetting the graphics card).\r\n\r\nBut if you make a small self-contained test case with that issue, we'll be happy to take a look. Note that there are already a bunch of tests which crash graphics drivers in https:\/\/github.com\/KhronosGroup\/WebGL\/tree\/master\/sdk\/tests\/extra , so see whether your case is covered by one of them (very expensive shader, very expensive geometry, ...).\r\n\r\n@WestLangley this is awesome work and I think it should be the default for Three.js's lines. A fallback to using native lines could be offered, but I think they'll have to be emulated on more and more platforms to provide useful features like wide lines (which has always been necessary on Windows, and is now necessary on macOS since most browsers have switched to using the Core Profile to implement WebGL).","created_at":"2017-05-19T19:40:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-302793536","id":302793536,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc5MzUzNg==","updated_at":"2017-05-19T19:40:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/302793536","user":{"following_url":"https:\/\/api.github.com\/users\/kenrussell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kenrussell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1149904?v=4","url":"https:\/\/api.github.com\/users\/kenrussell","gists_url":"https:\/\/api.github.com\/users\/kenrussell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kenrussell","subscriptions_url":"https:\/\/api.github.com\/users\/kenrussell\/subscriptions","node_id":"MDQ6VXNlcjExNDk5MDQ=","repos_url":"https:\/\/api.github.com\/users\/kenrussell\/repos","received_events_url":"https:\/\/api.github.com\/users\/kenrussell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kenrussell\/starred{\/owner}{\/repo}","site_admin":false,"login":"kenrussell","type":"User","id":1149904,"followers_url":"https:\/\/api.github.com\/users\/kenrussell\/followers","organizations_url":"https:\/\/api.github.com\/users\/kenrussell\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"@kenrussell \r\n\r\nCould you explain more what \"crazy\" means exactly in this case? The easiest way to reproduce what i think i encountered is to open the console on  the demo link and paste:\r\n\r\n`var foo = new THREE.MeshBasicMaterial()` \r\n`foo.resolution = new THREE.Vector2()` (to prevent render() from complaining)\r\n`line.material = foo`\r\n\r\nIt's the same amount of stuff, but it's being rendered on top of one another. Frame rate goes from 60 to 2 when zoomed in, 10ish when zoomed out. It's the same amount of stuff being rendered, and actually the `MeshBasicMaterial` should do less work than the line one. What causes this massive slowdown? \r\nWhat makes it \"crazy\" when it's a relatively simple shape when described in object space (pill, quad, etc)?\r\n\r\n\r\n**edit**\r\n\r\nadding a few more draw calls with this geo and wrong material will crash it:\r\n\r\n`for( var i = 0 ; i < 5 ; i++ ) scene.add(line.clone())`\r\n\r\n\r\n\r\n","created_at":"2017-05-22T18:58:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-303189850","id":303189850,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMzE4OTg1MA==","updated_at":"2017-05-22T19:44:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/303189850","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":19,"author_association":"COLLABORATOR","body":"Would this be an opportunity to add morphTargets support to lines (either as part of this PR or after it's merged?). \r\n\r\n#2875 - it's one of the longest standing open issues on three.js and something I ran into recently. ","created_at":"2017-05-23T14:46:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-303421590","id":303421590,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMzQyMTU5MA==","updated_at":"2017-05-23T14:46:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/303421590","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":20,"author_association":"NONE","body":"@pailhead something unexpected is probably going on with the shader or the geometry. It's causing the GPU to take much longer than expected to render, causing it to reset. This is an expected failure mode, especially during development. If this happens then Chrome shuts down rendering of WebGL content for safety.\r\n\r\nI'm sorry but I don't have time to debug this particular test case in depth. If you would like to reduce it and add it to the WebGL conformance suite, you can follow the pattern of other tests in e.g. https:\/\/github.com\/KhronosGroup\/WebGL\/tree\/master\/sdk\/tests\/conformance\/misc and put up a pull request. There are already some manually-run tests which cause GPU resets in https:\/\/github.com\/KhronosGroup\/WebGL\/tree\/master\/sdk\/tests\/extra .","created_at":"2017-05-23T18:13:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-303486402","id":303486402,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwMzQ4NjQwMg==","updated_at":"2017-05-23T18:13:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/303486402","user":{"following_url":"https:\/\/api.github.com\/users\/kenrussell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kenrussell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1149904?v=4","url":"https:\/\/api.github.com\/users\/kenrussell","gists_url":"https:\/\/api.github.com\/users\/kenrussell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kenrussell","subscriptions_url":"https:\/\/api.github.com\/users\/kenrussell\/subscriptions","node_id":"MDQ6VXNlcjExNDk5MDQ=","repos_url":"https:\/\/api.github.com\/users\/kenrussell\/repos","received_events_url":"https:\/\/api.github.com\/users\/kenrussell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kenrussell\/starred{\/owner}{\/repo}","site_admin":false,"login":"kenrussell","type":"User","id":1149904,"followers_url":"https:\/\/api.github.com\/users\/kenrussell\/followers","organizations_url":"https:\/\/api.github.com\/users\/kenrussell\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"I think you could reduce overhead further for scenes with multiple LineSegmentsGeometry objects, by sharing the position, uvs and index BufferAttributes between all instances? \r\n\r\nOn second thoughts, you probably need reference counting on buffer attributes for that to be safe.\r\nOh well.","created_at":"2017-05-26T10:03:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-304243124","id":304243124,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMwNDI0MzEyNA==","updated_at":"2017-05-26T12:21:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/304243124","user":{"following_url":"https:\/\/api.github.com\/users\/aardgoose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/aardgoose\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/17364910?v=4","url":"https:\/\/api.github.com\/users\/aardgoose","gists_url":"https:\/\/api.github.com\/users\/aardgoose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/aardgoose","subscriptions_url":"https:\/\/api.github.com\/users\/aardgoose\/subscriptions","node_id":"MDQ6VXNlcjE3MzY0OTEw","repos_url":"https:\/\/api.github.com\/users\/aardgoose\/repos","received_events_url":"https:\/\/api.github.com\/users\/aardgoose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/aardgoose\/starred{\/owner}{\/repo}","site_admin":false,"login":"aardgoose","type":"User","id":17364910,"followers_url":"https:\/\/api.github.com\/users\/aardgoose\/followers","organizations_url":"https:\/\/api.github.com\/users\/aardgoose\/orgs"}},{"index":22,"author_association":"NONE","body":"Hey, are there any plans to support Edges as well?","created_at":"2017-08-07T13:27:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-320663017","id":320663017,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMyMDY2MzAxNw==","updated_at":"2017-08-07T13:27:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/320663017","user":{"following_url":"https:\/\/api.github.com\/users\/Andre741\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Andre741\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/13705759?v=4","url":"https:\/\/api.github.com\/users\/Andre741","gists_url":"https:\/\/api.github.com\/users\/Andre741\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Andre741","subscriptions_url":"https:\/\/api.github.com\/users\/Andre741\/subscriptions","node_id":"MDQ6VXNlcjEzNzA1NzU5","repos_url":"https:\/\/api.github.com\/users\/Andre741\/repos","received_events_url":"https:\/\/api.github.com\/users\/Andre741\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Andre741\/starred{\/owner}{\/repo}","site_admin":false,"login":"Andre741","type":"User","id":13705759,"followers_url":"https:\/\/api.github.com\/users\/Andre741\/followers","organizations_url":"https:\/\/api.github.com\/users\/Andre741\/orgs"}},{"index":23,"author_association":"NONE","body":"I was testing with LineSegments2 and was wondering if it was possible to draw disconnected line segments from one LaneGeometry object, similar to how the existing LineSegments works. Right now I get one long line per LaneGeometry object.","created_at":"2017-09-20T16:18:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330904384","id":330904384,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkwNDM4NA==","updated_at":"2017-09-20T16:18:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330904384","user":{"following_url":"https:\/\/api.github.com\/users\/struckm\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/struckm\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/235950?v=4","url":"https:\/\/api.github.com\/users\/struckm","gists_url":"https:\/\/api.github.com\/users\/struckm\/gists{\/gist_id}","html_url":"https:\/\/github.com\/struckm","subscriptions_url":"https:\/\/api.github.com\/users\/struckm\/subscriptions","node_id":"MDQ6VXNlcjIzNTk1MA==","repos_url":"https:\/\/api.github.com\/users\/struckm\/repos","received_events_url":"https:\/\/api.github.com\/users\/struckm\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/struckm\/starred{\/owner}{\/repo}","site_admin":false,"login":"struckm","type":"User","id":235950,"followers_url":"https:\/\/api.github.com\/users\/struckm\/followers","organizations_url":"https:\/\/api.github.com\/users\/struckm\/orgs"}},{"index":24,"author_association":"CONTRIBUTOR","body":"@struckm can you post an image, one long line sounds like they might actually be segments but dont look disconnected because of the line ends?","created_at":"2017-09-20T16:52:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330913746","id":330913746,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkxMzc0Ng==","updated_at":"2017-09-20T16:52:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330913746","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":25,"author_association":"COLLABORATOR","body":">wondering if it was possible to draw disconnected line segments\r\n\r\n@struckm Using code from this PR:\r\n```javascript\r\nvar geometry = new THREE.LineSegmentsGeometry();\r\ngeometry.setPositions( positions );\r\n\r\nvar material = new THREE.LineMaterial();\r\n\r\nvar line = new THREE.LineSegments2( geometry, material );\r\n```","created_at":"2017-09-20T17:16:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330919976","id":330919976,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkxOTk3Ng==","updated_at":"2017-09-20T17:16:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330919976","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":26,"author_association":"NONE","body":"@WestLangley Thank you for a quick response. That resolved it for me. For some reason I was using the LineGeometry class.","created_at":"2017-09-20T17:23:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330922066","id":330922066,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkyMjA2Ng==","updated_at":"2017-09-20T17:23:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330922066","user":{"following_url":"https:\/\/api.github.com\/users\/struckm\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/struckm\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/235950?v=4","url":"https:\/\/api.github.com\/users\/struckm","gists_url":"https:\/\/api.github.com\/users\/struckm\/gists{\/gist_id}","html_url":"https:\/\/github.com\/struckm","subscriptions_url":"https:\/\/api.github.com\/users\/struckm\/subscriptions","node_id":"MDQ6VXNlcjIzNTk1MA==","repos_url":"https:\/\/api.github.com\/users\/struckm\/repos","received_events_url":"https:\/\/api.github.com\/users\/struckm\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/struckm\/starred{\/owner}{\/repo}","site_admin":false,"login":"struckm","type":"User","id":235950,"followers_url":"https:\/\/api.github.com\/users\/struckm\/followers","organizations_url":"https:\/\/api.github.com\/users\/struckm\/orgs"}},{"index":27,"author_association":"NONE","body":"@WestLangley Is there an eta on when this might be committed to master?","created_at":"2017-09-20T17:35:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330925206","id":330925206,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkyNTIwNg==","updated_at":"2017-09-20T17:36:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330925206","user":{"following_url":"https:\/\/api.github.com\/users\/struckm\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/struckm\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/235950?v=4","url":"https:\/\/api.github.com\/users\/struckm","gists_url":"https:\/\/api.github.com\/users\/struckm\/gists{\/gist_id}","html_url":"https:\/\/github.com\/struckm","subscriptions_url":"https:\/\/api.github.com\/users\/struckm\/subscriptions","node_id":"MDQ6VXNlcjIzNTk1MA==","repos_url":"https:\/\/api.github.com\/users\/struckm\/repos","received_events_url":"https:\/\/api.github.com\/users\/struckm\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/struckm\/starred{\/owner}{\/repo}","site_admin":false,"login":"struckm","type":"User","id":235950,"followers_url":"https:\/\/api.github.com\/users\/struckm\/followers","organizations_url":"https:\/\/api.github.com\/users\/struckm\/orgs"}},{"index":28,"author_association":"COLLABORATOR","body":">@WestLangley Is there an eta on when this might be committed to master?\r\n\r\n@struckm Sorry, I do not make that decision. You are free to use what is here, though.","created_at":"2017-09-20T18:00:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330931975","id":330931975,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkzMTk3NQ==","updated_at":"2017-09-20T18:00:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330931975","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":29,"author_association":"CONTRIBUTOR","body":"@westlangley\r\n\r\nWould you consider making this into a npm module?","created_at":"2017-09-20T18:07:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11349#issuecomment-330934049","id":330934049,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11349","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkzNDA0OQ==","updated_at":"2017-09-20T18:07:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330934049","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}