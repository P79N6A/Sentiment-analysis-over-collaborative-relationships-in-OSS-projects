{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"NONE","body":"I just found out a little bit more about the problem: GLTFLoader doesn't return camera-objects directly, but within a 'wrapper' Object3D as a child. The camera itself is the first item in its children array. That's unexpected. It's different then ObjectLoader behaviour and the gltf file doesn't have and cannot have multiple camera's inside a single camera object (see the cameras section below) as far as I know. \r\n\r\n**cameras-object inside the gltf(2) file:**\r\n```\r\n\"cameras\" : [\r\n        {\r\n            \"name\" : \"mainCam\", \r\n            \"orthographic\" : {\r\n                \"xmag\" : 46.0, \r\n                \"ymag\" : 46.0, \r\n                \"zfar\" : 200.0, \r\n                \"znear\" : 9.999999747378752e-05\r\n            }, \r\n            \"type\" : \"orthographic\"\r\n        }\r\n    ], \r\n```\r\n\r\n**Loading a scene with Objectloader (works as expected):**\r\n`this.data.mainCam = this.data.scene.getObjectByName('mainCam'); \/\/ returns OrthographicCam object`\r\n\r\n**Loading a scene with GLTFLoader (strange behaviour):**\r\n`this.data.mainCam = this.data.scene.getObjectByName('mainCam'); \/\/ returns Object3D object`\r\n`this.data.mainCam = this.data.scene.getObjectByName('mainCam').children[0]; \/\/ returns OrthographicCam object`\r\n\r\nI'm using the official GLTF2 exporter plugin with Blender.","created_at":"2017-11-15T12:45:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-344581655","id":344581655,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NDU4MTY1NQ==","updated_at":"2017-11-15T15:25:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/344581655","user":{"following_url":"https:\/\/api.github.com\/users\/Friksel\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Friksel\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/3089978?v=4","url":"https:\/\/api.github.com\/users\/Friksel","gists_url":"https:\/\/api.github.com\/users\/Friksel\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Friksel","subscriptions_url":"https:\/\/api.github.com\/users\/Friksel\/subscriptions","node_id":"MDQ6VXNlcjMwODk5Nzg=","repos_url":"https:\/\/api.github.com\/users\/Friksel\/repos","received_events_url":"https:\/\/api.github.com\/users\/Friksel\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Friksel\/starred{\/owner}{\/repo}","site_admin":false,"login":"Friksel","type":"User","id":3089978,"followers_url":"https:\/\/api.github.com\/users\/Friksel\/followers","organizations_url":"https:\/\/api.github.com\/users\/Friksel\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Could you share an example file (`.gltf`, `.blend`, or both)? You can drag-and-drop .zip files into GitHub comments. The \"Duck\" example [here](https:\/\/threejs.org\/examples\/?q=gltf#webgl_loader_gltf) uses a camera that parses correctly, without a wrapping Object3D, so I'm not sure what's happening in this case.","created_at":"2017-11-15T15:16:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-344623860","id":344623860,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NDYyMzg2MA==","updated_at":"2017-11-15T15:16:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/344623860","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"NONE","body":"Thanks for your reply @donmccurdy . Strange. On first sight the duck.gltf looks the same.\r\n\r\nI just did a test with a very simplified gltf with the same result as described above. Here's the gltf together with its .blend. For this I just used the default startup scene in blender and only changed the objectnames and the color of the cube. \r\n[gltftest.zip](https:\/\/github.com\/mrdoob\/three.js\/files\/1475327\/gltftest.zip)","created_at":"2017-11-15T15:49:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-344634914","id":344634914,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NDYzNDkxNA==","updated_at":"2017-11-15T15:49:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/344634914","user":{"following_url":"https:\/\/api.github.com\/users\/Friksel\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Friksel\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/3089978?v=4","url":"https:\/\/api.github.com\/users\/Friksel","gists_url":"https:\/\/api.github.com\/users\/Friksel\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Friksel","subscriptions_url":"https:\/\/api.github.com\/users\/Friksel\/subscriptions","node_id":"MDQ6VXNlcjMwODk5Nzg=","repos_url":"https:\/\/api.github.com\/users\/Friksel\/repos","received_events_url":"https:\/\/api.github.com\/users\/Friksel\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Friksel\/starred{\/owner}{\/repo}","site_admin":false,"login":"Friksel","type":"User","id":3089978,"followers_url":"https:\/\/api.github.com\/users\/Friksel\/followers","organizations_url":"https:\/\/api.github.com\/users\/Friksel\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Hm that extra Object3D is baked into the model. Looks like the Blender exporter is doing this.\r\n\r\nViewing the console on https:\/\/gltf-viewer.donmccurdy.com\/ you see:\r\n\r\n<img width=\"329\" alt=\"screen shot 2017-11-15 at 7 54 43 am\" src=\"https:\/\/user-images.githubusercontent.com\/1848368\/32845745-606d1a44-c9da-11e7-9c99-272f592e69b6.png\">\r\n\r\nThere are two nodes, `mainCam` and `Correction_mainCam`, in the source glTF.\r\n\r\nThe quickest workaround, rather than relying on the node name, would be:\r\n\r\n```js\r\nvar camera;\r\nmodel.traverse((node) => {\r\n  if ( node.isCamera ) camera = node;\r\n});\r\nconsole.log(camera);\r\n```\r\n\r\nbut i would also suggest filing a bug on the exporter about this.","created_at":"2017-11-15T15:57:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-344637578","id":344637578,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NDYzNzU3OA==","updated_at":"2017-11-15T15:57:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/344637578","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":4,"author_association":"NONE","body":"Thanks for your quick help. On my side I just found out the Duck.gltf is working with my code, so that's useful info too. I'm very much surprised this bug is in the exporter. I'm using the latest version of the gltf2 exporter for blender created by the KhronousGroup itself (https:\/\/github.com\/KhronosGroup\/glTF-Blender-Exporter). Don't understand the 'Correction'-part in the cameraname either, 'cause this is the most simple scene possible in blender. I'll file a bug on the exporter then.\r\n\r\nWich exporter are you using \/ was used to create the Duck gltf example?\r\n\r\nNice viewer btw!","created_at":"2017-11-15T16:07:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-344640791","id":344640791,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NDY0MDc5MQ==","updated_at":"2017-11-15T16:08:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/344640791","user":{"following_url":"https:\/\/api.github.com\/users\/Friksel\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Friksel\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/3089978?v=4","url":"https:\/\/api.github.com\/users\/Friksel","gists_url":"https:\/\/api.github.com\/users\/Friksel\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Friksel","subscriptions_url":"https:\/\/api.github.com\/users\/Friksel\/subscriptions","node_id":"MDQ6VXNlcjMwODk5Nzg=","repos_url":"https:\/\/api.github.com\/users\/Friksel\/repos","received_events_url":"https:\/\/api.github.com\/users\/Friksel\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Friksel\/starred{\/owner}{\/repo}","site_admin":false,"login":"Friksel","type":"User","id":3089978,"followers_url":"https:\/\/api.github.com\/users\/Friksel\/followers","organizations_url":"https:\/\/api.github.com\/users\/Friksel\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"The Duck example was made with [COLLADA2GLTF](https:\/\/github.com\/KhronosGroup\/COLLADA2GLTF) (there is a branch in progress that supports glTF 2.0). I suspect the blender exporter is creating that extra \"Correction_\" part to work around some issue or other, but the authors will know. Same thing happens with lights, I believe. Seems like it should be possible to flatten during export automatically.","created_at":"2017-11-15T16:13:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-344642693","id":344642693,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NDY0MjY5Mw==","updated_at":"2017-11-15T16:13:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/344642693","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":6,"author_association":"NONE","body":"@donmccurdy I think it's better to continue the talk here instead of on the exporter side for now:\r\n\r\n`Good points. @Friksel I think the summary here is that Blender's default camera orientation is somewhat different than glTF's, and correcting that requires this extra node. It will be necessary to check node.isCamera in three.js as described in the other thread, or make manual changes to the model.`\r\n\r\nI don't think this is be the way to go. In my opinion loading a scene by json with the Objectloader should have the exact same scene as loading it through gltf with the gltfLoader. On the other side Objectloader and blender to threejs exporter have problems transforming axis from Blender to threejs too. So if that is solved using the gltfexporter that would be a great improvement.\r\n\r\nI'll have to take a closer look on how to work with this. For now it seems like getting the first child of the camera works, but at the moment I don't have the time to test if that's also working on transformations and rotations. I'll take a closer look if I find some time.","created_at":"2017-11-17T10:32:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-345206656","id":345206656,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NTIwNjY1Ng==","updated_at":"2017-11-17T10:32:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/345206656","user":{"following_url":"https:\/\/api.github.com\/users\/Friksel\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Friksel\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/3089978?v=4","url":"https:\/\/api.github.com\/users\/Friksel","gists_url":"https:\/\/api.github.com\/users\/Friksel\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Friksel","subscriptions_url":"https:\/\/api.github.com\/users\/Friksel\/subscriptions","node_id":"MDQ6VXNlcjMwODk5Nzg=","repos_url":"https:\/\/api.github.com\/users\/Friksel\/repos","received_events_url":"https:\/\/api.github.com\/users\/Friksel\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Friksel\/starred{\/owner}{\/repo}","site_admin":false,"login":"Friksel","type":"User","id":3089978,"followers_url":"https:\/\/api.github.com\/users\/Friksel\/followers","organizations_url":"https:\/\/api.github.com\/users\/Friksel\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"> I don't think this is be the way to go. In my opinion loading a scene by json with the Objectloader should have the exact same scene as loading it through gltf with the gltfLoader.\r\n\r\nThat would be great, it's just hard. The Blender three.js exporter and the Blender glTF exporter are maintained by different people, and different formats have requirements that things work a certain way, so it's hard to guarantee it will be exactly the same result.\r\n\r\nI think you can always be sure that first child of the camera will have the same rotation (it's just rotating the camera to face `-Z` relative to the parent, which is the defined default direction of glTF. Changing glTF-Blender-Exporter to not have two nodes would be a lot of work.\r\n\r\nGetting the first child of the camera is fine, or you could do this if you want to be very sure it will also work for glTF models not exported from Blender:\r\n\r\n```js\r\nvar cameraWrap = model.getObjectByName('mainCam');\r\nvar camera;\r\ncameraWrap.traverse((node) => { if ( node.isCamera ) camera = node; });\r\nconsole.log(camera);\r\n```","created_at":"2017-11-17T15:46:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-345279586","id":345279586,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NTI3OTU4Ng==","updated_at":"2017-11-17T15:46:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/345279586","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":8,"author_association":"NONE","body":"Yes, seems like loading cameras this way is working fine in the project I'm working on. Not sure about rotations, but that's for later. With the nice trick you gave it's easier to convert my project from Objectloader to gltfLoader. I put it in a function:\r\n\r\n```\r\ngetCameraByName(scene, name) {\r\n        const cameraWrap = scene.getObjectByName(name);\r\n        let camera = null;\r\n        if (cameraWrap) {\r\n            if (cameraWrap.isCamera) {\r\n                camera = cameraWrap;\r\n            } else {\r\n                cameraWrap.traverse((node) => {\r\n                    if (node.isCamera) {\r\n                        camera = node;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return camera;\r\n    }\r\n```\r\n\r\nNow I'm moving on to the next step: making the lights and materials work \/ solving shader problems. And wrong axis problems. But if these are done it's a big step forward looking at the great improvement in filesize of gltf!  :)","created_at":"2017-11-17T17:34:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12656#issuecomment-345310715","id":345310715,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12656","node_id":"MDEyOklzc3VlQ29tbWVudDM0NTMxMDcxNQ==","updated_at":"2017-11-17T17:35:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/345310715","user":{"following_url":"https:\/\/api.github.com\/users\/Friksel\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Friksel\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/3089978?v=4","url":"https:\/\/api.github.com\/users\/Friksel","gists_url":"https:\/\/api.github.com\/users\/Friksel\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Friksel","subscriptions_url":"https:\/\/api.github.com\/users\/Friksel\/subscriptions","node_id":"MDQ6VXNlcjMwODk5Nzg=","repos_url":"https:\/\/api.github.com\/users\/Friksel\/repos","received_events_url":"https:\/\/api.github.com\/users\/Friksel\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Friksel\/starred{\/owner}{\/repo}","site_admin":false,"login":"Friksel","type":"User","id":3089978,"followers_url":"https:\/\/api.github.com\/users\/Friksel\/followers","organizations_url":"https:\/\/api.github.com\/users\/Friksel\/orgs"}}]}