{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I would prefer to use [ES6 Template Literals](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Template_literals) some day. As you can see [here](https:\/\/kangax.github.io\/compat-table\/es6\/#test-template_strings), they are already supported in many browsers and even in node.js environments.\n","created_at":"2016-02-28T14:14:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-189881579","id":189881579,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE4OTg4MTU3OQ==","updated_at":"2016-02-28T15:09:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/189881579","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":1,"author_association":"NONE","body":"It's similar, but not the same. Template strings (or literals) are meant for templating, which means they are not vebatim. I think it only bothers if you use `${...}` formed strings, which I don't think you would anywhere in a shader segment... but still, `varying vec2 u; \/\/${b}` won't work as intended.\nIn any case support is indeed pretty decent this days... besides the mentioned drawback I have nothing against it. As long as the text remains formatted and in one piece, I think is a cool option.\n","created_at":"2016-02-28T17:26:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-189911080","id":189911080,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE4OTkxMTA4MA==","updated_at":"2016-02-28T17:26:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/189911080","user":{"following_url":"https:\/\/api.github.com\/users\/estani\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/estani\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1331850?v=4","url":"https:\/\/api.github.com\/users\/estani","gists_url":"https:\/\/api.github.com\/users\/estani\/gists{\/gist_id}","html_url":"https:\/\/github.com\/estani","subscriptions_url":"https:\/\/api.github.com\/users\/estani\/subscriptions","node_id":"MDQ6VXNlcjEzMzE4NTA=","repos_url":"https:\/\/api.github.com\/users\/estani\/repos","received_events_url":"https:\/\/api.github.com\/users\/estani\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/estani\/starred{\/owner}{\/repo}","site_admin":false,"login":"estani","type":"User","id":1331850,"followers_url":"https:\/\/api.github.com\/users\/estani\/followers","organizations_url":"https:\/\/api.github.com\/users\/estani\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"you can always do\n\n```\n'\\\n    varying vec2 vUv;\\\n    void main() {\\\n        vUv = uv;\\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\n    }';\n```\n\nor use \\n\\ if you want shaders to be readable in e g ff shader editor\n","created_at":"2016-02-28T20:38:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-189942468","id":189942468,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE4OTk0MjQ2OA==","updated_at":"2016-02-28T20:38:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/189942468","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"From MDN docu:\n\n_Template literals are string literals allowing embedded expressions. You can use **multi-line strings** and string interpolation features with them._\n\nI just wanted to draw attention to this great feature, because it finally avoids former inconvenient approaches (e.g. string concatenation or escaping newlines). \n","created_at":"2016-02-28T22:05:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-189955294","id":189955294,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE4OTk1NTI5NA==","updated_at":"2016-02-28T22:07:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/189955294","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"@makc It seems that escaping newlines is not uncritical. See [here](http:\/\/stackoverflow.com\/a\/6247331) \n","created_at":"2016-02-28T22:10:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-189955738","id":189955738,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE4OTk1NTczOA==","updated_at":"2016-02-28T22:10:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/189955738","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"> use string concatenation instead of escaping newlines because the latter isn't a part of ECMAScript\n\n@Mugen87 oh yeah, what's [this](http:\/\/tc39.github.io\/ecma262\/#prod-LineContinuation) then?\n","created_at":"2016-02-28T22:20:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-189956710","id":189956710,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE4OTk1NjcxMA==","updated_at":"2016-02-28T22:22:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/189956710","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"@makc Um, probably the comment at stackoverflow is not up to date any more. The referred answer was from 2011. \n\nIf the `LineTerminatorSequence` is part of the standard now, it's of course a valid solution :+1: \n","created_at":"2016-02-29T09:42:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190125460","id":190125460,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDEyNTQ2MA==","updated_at":"2016-02-29T09:45:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190125460","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"Comments are removed in production code by many systems.  Thus relying on them to exist seems dangerous.\n","created_at":"2016-02-29T14:41:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190236518","id":190236518,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDIzNjUxOA==","updated_at":"2016-02-29T14:41:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190236518","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"Good point.\n","created_at":"2016-02-29T14:50:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190242944","id":190242944,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDI0Mjk0NA==","updated_at":"2016-02-29T14:50:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190242944","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"My suggestion is to use a system like ThreeJS uses.  Basically have raw *.glsl files and then have a compile time preprocessor that puts them into strings in a JS class.  I recently moved the ShaderLib glsl code into their own files as well here in this PR:\n\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/8223\n\nThe reason why this is preferred is because then you can use syntax highlighting and auto-completion and all those other nice tools on *.glsl files.\n\nMaybe there is a way to make ThreeJS's build system more re-usable if we were to convert more of it into JavaScript.\n","created_at":"2016-02-29T14:54:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190245161","id":190245161,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDI0NTE2MQ==","updated_at":"2016-02-29T15:03:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190245161","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"@bhouston  Can you recommend an editor or IDE for editing *.glsl files? Currently i'm using Atom editor with this [glsl language](https:\/\/atom.io\/packages\/language-glsl) package. It's okay, but unfortunately there is no real auto-completion...\n","created_at":"2016-02-29T16:17:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190273728","id":190273728,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDI3MzcyOA==","updated_at":"2016-02-29T17:03:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190273728","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"I am using Atom with glsl language pack as well now.  I have auto-completion, it seems to just be the standard Atom auto-completion, thus it isn't that smart.  Someone should integrate a glsl syntax checker into the glsl language package on Atom -- that would be pretty awesome.\n","created_at":"2016-02-29T16:25:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190276542","id":190276542,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDI3NjU0Mg==","updated_at":"2016-02-29T16:25:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190276542","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":12,"author_association":"COLLABORATOR","body":">  Someone should integrate a glsl syntax checker into the glsl language package on Atom -- that would be pretty awesome.\n\nI've checked out the package [linter-glsl](https:\/\/atom.io\/packages\/linter-glsl) today. It uses the [Khronos GLSL Validator](https:\/\/www.khronos.org\/opengles\/sdk\/tools\/Reference-Compiler\/) to verify the correctness of the shader code. As you can see in the screenshot, errors are shown in the respective lines as soon as they occur.\n\n![fragment](https:\/\/cloud.githubusercontent.com\/assets\/12612165\/13433061\/87834fd6-dfd0-11e5-9015-d137b3b80be0.jpg)\n\nIMO this Atom package is great! Unfortunately, it does not recognize our shader files in three.js because the GLSL reference compiler apparently expects *.vert and *.frag file extensions. With *.glsl you get the error message \"Unknown shader type\" in Atom when you open the file. Besides, the linter expects complete vertex and fragment shaders. If you open just a single chunk, it reports inappropriate errors like _\"float\" type requires declaration of default precision qualifier_.\n","created_at":"2016-03-01T16:29:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-190796244","id":190796244,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDc5NjI0NA==","updated_at":"2016-03-01T16:30:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190796244","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":13,"author_association":"NONE","body":"Just to add to the template string conversation & es6 in general:\n\nI took Ed Angel's recent Mooc and used all es6. It was great! One of several features I liked was the template strings for shaders. Reduced confusing bunches of files, just included the template strings for shaders, below.\n\nI used jspn to manage the modules and bundling, although today Rollup is a reasonable alternative.\n\nOne thing I didn't get around to was building shader modules. The idea would be to have shader fragments that the template strings could \"import\" as variables.\n\nEs6 really does change everything. Modules, and generators for building trivial async functions before they arrive in es8. And modern workflow was very useful. And eslint for JS (great in Atom editor) .. finding bugs before running the code. Is there a glsl plugin for eslint yet? That'd be sweet!\n\nI'm investigating three.js for the conversion of http:\/\/agentscript.org to es6 from coffeescript. Looks like fun! Any pointers to using three.js appreciated (docs look great, tutorials? books?) and tips on how to integrate into es6. \n\n   -- Owen\n\n```\nvar fragmentShader = `\n  precision highp float;\n  varying vec4 vColor;\n  void main() {\n    gl_FragColor = vColor;\n  }\n`\n\nvar vertexShader = `\n  attribute vec3 aPosition;\n  attribute vec3 aNormal;\n\n  uniform mat4 uIMatrix;\n  uniform mat4 uMVMatrix;\n  uniform mat4 uPMatrix;\n\n  uniform vec4 uMaterialDiffuse;\n\n  uniform vec3 uLight1Direction;\n  uniform vec4 uLight1Diffuse;\n\n  uniform vec4 uMaterialSpecular;\n  uniform float uShininess;\n  uniform vec4 uLight1Specular;\n\n  uniform vec3 uEyePosition;\n\n  varying vec4 vColor;\n  void main() {\n    vec3 E = normalize(uEyePosition);\n    vec3 N = aNormal;\n    vec3 L1 = normalize(uLight1Direction - aPosition);\n    vec3 H1 = normalize( L1 + E );\n\n    float Kd1 = max( dot(-L1, N), 0.0 ); \/\/ lambertTerm\n    vec4 Id1 = uMaterialDiffuse * uLight1Diffuse * Kd1;\n\n    float Ks1 = pow( max(dot(N, H1), 0.0), uShininess );\n    vec4 Is1 = uMaterialSpecular * uLight1Specular * Kd1;\n    if( dot(-L1, N) < 0.0 ) {\n        Is1 = vec4(1,1,0,1);\n    }\n\n    vColor = Id1; \/\/ + Is1;\n    vColor.a = 1.0;\n\n    gl_Position = uPMatrix * uMVMatrix * uIMatrix * vec4(aPosition, 1);\n  }\n`\n```\n","created_at":"2016-05-17T17:53:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-219799656","id":219799656,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDIxOTc5OTY1Ng==","updated_at":"2016-05-17T17:53:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/219799656","user":{"following_url":"https:\/\/api.github.com\/users\/backspaces\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/backspaces\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/124366?v=4","url":"https:\/\/api.github.com\/users\/backspaces","gists_url":"https:\/\/api.github.com\/users\/backspaces\/gists{\/gist_id}","html_url":"https:\/\/github.com\/backspaces","subscriptions_url":"https:\/\/api.github.com\/users\/backspaces\/subscriptions","node_id":"MDQ6VXNlcjEyNDM2Ng==","repos_url":"https:\/\/api.github.com\/users\/backspaces\/repos","received_events_url":"https:\/\/api.github.com\/users\/backspaces\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/backspaces\/starred{\/owner}{\/repo}","site_admin":false,"login":"backspaces","type":"User","id":124366,"followers_url":"https:\/\/api.github.com\/users\/backspaces\/followers","organizations_url":"https:\/\/api.github.com\/users\/backspaces\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"@bhouston This PR might help recovering syntax highlighting for glsl.js files: https:\/\/github.com\/mrdoob\/three.js\/pull\/15473","created_at":"2018-12-25T00:26:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8243#issuecomment-449780442","id":449780442,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8243","node_id":"MDEyOklzc3VlQ29tbWVudDQ0OTc4MDQ0Mg==","updated_at":"2018-12-25T00:26:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/449780442","user":{"following_url":"https:\/\/api.github.com\/users\/dmnsgn\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/dmnsgn\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1636460?v=4","url":"https:\/\/api.github.com\/users\/dmnsgn","gists_url":"https:\/\/api.github.com\/users\/dmnsgn\/gists{\/gist_id}","html_url":"https:\/\/github.com\/dmnsgn","subscriptions_url":"https:\/\/api.github.com\/users\/dmnsgn\/subscriptions","node_id":"MDQ6VXNlcjE2MzY0NjA=","repos_url":"https:\/\/api.github.com\/users\/dmnsgn\/repos","received_events_url":"https:\/\/api.github.com\/users\/dmnsgn\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/dmnsgn\/starred{\/owner}{\/repo}","site_admin":false,"login":"dmnsgn","type":"User","id":1636460,"followers_url":"https:\/\/api.github.com\/users\/dmnsgn\/followers","organizations_url":"https:\/\/api.github.com\/users\/dmnsgn\/orgs"}}]}