{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I'm trying to test this, but getting an error:\r\n\r\n```js\r\n>> node .\\examples\\js\\build.js\r\nrollup:\r\nevents.js:193\r\n      throw er; \/\/ Unhandled 'error' event\r\n      ^\r\n\r\nError: spawn rollup ENOENT\r\n\r\n...\r\n```\r\n\r\nIt seems like `spawn` is pretty hard to get working in a windows environment, in the end I installed [cross-spawn](https:\/\/www.npmjs.com\/package\/cross-spawn) and changed the spawn require to: \r\n\r\n```const spawn = require( 'cross-spawn' );```\r\n\r\nand it seems to be working. ","created_at":"2018-03-12T08:28:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-372228088","id":372228088,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDM3MjIyODA4OA==","updated_at":"2018-03-12T08:28:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/372228088","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Hm I just looked through https:\/\/github.com\/nodejs\/node-v0.x-archive\/issues\/2318. \ud83d\ude10 Using `spawn('cmd', ['args'], {shell: true})` might also be a fix... \r\n\r\nIn any case I suppose the first question would be where (or if) we'd use a script like this. Ideas:\r\n\r\n1. Build UMD files in `build\/examples\/*` on `dev` branch with each release.\r\n2. Build UMD files in a branch like `three-umd`, perhaps with a bot.\r\n3. Use a separate repo, maintained by interested parties.\r\n4. ?\r\n\r\nWe use a bot to maintain A-Frame's `dist\/`  folder, but it does clutter [commit history](https:\/\/github.com\/aframevr\/aframe\/commits\/master) a bit.\r\n","created_at":"2018-03-12T16:42:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-372377726","id":372377726,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDM3MjM3NzcyNg==","updated_at":"2018-03-12T16:42:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/372377726","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"OWNER","body":"What do you think about this approach?\r\nhttps:\/\/github.com\/mrdoob\/three.js\/issues\/9562#issuecomment-372913488","created_at":"2018-03-14T06:03:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-372914186","id":372914186,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDM3MjkxNDE4Ng==","updated_at":"2018-03-14T06:03:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/372914186","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Are you thinking of generating a single `three.extras.module.js` ES6 module containing all examples, while leaving the examples themselves as they are now? If there's a clean implementation I would be fine with that, but I worry it will need a fairly complex script to do properly. What happens with inter-dependent examples, like nodes?\r\n\r\n```js\r\nimport { NodeMaterial, RawNode, ... } from 'three\/build\/three.extras.module.js';\r\n```\r\n\r\nAs one depends on the other using global `THREE.*` syntax, I'm not sure how an ES6 build is going to handle that. If that's the goal, we can solicit a proof of concept from the other thread.\r\n\r\nI think these issues are easier to solve if the maintained copies of files are themselves ES6 modules, and we generate the UMD versions. I assume the problem there is that the live examples on the site will no longer work with normal `<script\/>` tags? Perhaps there is a workaround allowing examples to keep working without a build step if we drop an [ES6 module polyfill](https:\/\/github.com\/tbranyen\/es6-module-loader) into each example page.","created_at":"2018-05-26T00:01:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-392217028","id":392217028,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjIxNzAyOA==","updated_at":"2018-05-26T00:01:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392217028","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"> I think these issues are easier to solve if the maintained copies of files are themselves ES6 modules, and we generate the UMD versions. \r\n\r\nThis is exactly the approach that we should be taking. There exists extensive 3rd party tooling for this process in the form of Babel, Bubl\u00e9 etc. \r\nWorking in the other direction, we're going against the grain, and not future proofing the codebase - and also, we'll need to create and maintain the converter script ourselves, which will be fairly complex. \r\n\r\n>  I assume the problem there is that the live examples on the site will no longer work with normal <script\/> tags?\r\n\r\nThis is a bit of a sticking point - the examples are the main testing ground for development, and they do need to stay in sync with any work done on the dev branch so that we can catch errors quickly. However,  if we have a build script that converts the examples ES6 -> UMD, we could just use these generated files in the examples. Then we can create a script to watch the `examples\/js\/es6` directory (or whatever we call it), and regenerate the UMD files on the fly. ","created_at":"2018-05-26T04:12:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-392235077","id":392235077,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjIzNTA3Nw==","updated_at":"2018-05-26T04:12:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392235077","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"> threejs.org\/examples\/*.html must point at build\/examples\/js\/*.js, and won't \"just work\" for testing PRs with RawGit.\r\nExamples must be rebuilt with each release, or on some other cycle.\r\n\r\nAs I explained [here](https:\/\/github.com\/mrdoob\/three.js\/issues\/9562#issuecomment-393921841) we could use ES2015+ module syntax polyfill for old browser.\r\n\r\nI made a POC here, using ES2015+ module syntax:\r\n\r\nLive: https:\/\/rawgit.com\/moroine\/three.js\/poc-example-es6\/examples\/misc_controls_orbit.html\r\n\r\nI have tested on IE11 and it works. It requires some time to load because of babel transpilation but IMO that's ok considering the support of the module import in browser: https:\/\/caniuse.com\/#feat=es6-module","created_at":"2018-06-05T00:49:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-394545122","id":394545122,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDU0NTEyMg==","updated_at":"2018-06-05T00:49:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394545122","user":{"following_url":"https:\/\/api.github.com\/users\/moroine\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/moroine\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4658821?v=4","url":"https:\/\/api.github.com\/users\/moroine","gists_url":"https:\/\/api.github.com\/users\/moroine\/gists{\/gist_id}","html_url":"https:\/\/github.com\/moroine","subscriptions_url":"https:\/\/api.github.com\/users\/moroine\/subscriptions","node_id":"MDQ6VXNlcjQ2NTg4MjE=","repos_url":"https:\/\/api.github.com\/users\/moroine\/repos","received_events_url":"https:\/\/api.github.com\/users\/moroine\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/moroine\/starred{\/owner}{\/repo}","site_admin":false,"login":"moroine","type":"User","id":4658821,"followers_url":"https:\/\/api.github.com\/users\/moroine\/followers","organizations_url":"https:\/\/api.github.com\/users\/moroine\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"Closing to focus on https:\/\/github.com\/mrdoob\/three.js\/pull\/14803. :)","created_at":"2018-08-30T23:19:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13544#issuecomment-417498524","id":417498524,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13544","node_id":"MDEyOklzc3VlQ29tbWVudDQxNzQ5ODUyNA==","updated_at":"2018-08-30T23:19:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/417498524","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}