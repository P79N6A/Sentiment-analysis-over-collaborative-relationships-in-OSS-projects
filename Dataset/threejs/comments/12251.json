{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I think the `BufferGeometry.MaxIndex` related code can be removed. The only thing that bothers me is the handling of `OES_element_index_uint`.\r\n\r\nSo when `Uint16BufferAttribute` is used in `BufferGeometry .setIndex()`, `gl.UNSIGNED_SHORT` represents the type of the values in the element array buffer (see [here](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/renderers\/webgl\/WebGLAttributes.js#L31-L33)).\r\n\r\nIn the case of an `Uint32BufferAttribute`, `gl.UNSIGNED_INT` is used. But this approach is actually only valid if the extension `OES_element_index_uint` is available (see https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/OES_element_index_uint). \r\n\r\nAnyway, i think we don't really need this check because the support of `OES_element_index_uint` is close by 100% (https:\/\/webglstats.com\/webgl\/extension\/OES_element_index_uint).","created_at":"2017-09-22T09:27:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12251#issuecomment-331398371","id":331398371,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12251","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTM5ODM3MQ==","updated_at":"2017-09-22T09:36:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331398371","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}