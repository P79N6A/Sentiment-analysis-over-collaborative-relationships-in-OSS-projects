{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I looked into fixing this, but i'm not sure what to do. There is no way of knowing what's in the `onBeforeCompile`, other than it does it's own \"compile\". Since this only makes sense on materials, and not `ShaderMaterials` one could compile the `onBeforeCompile` and use that to hash, but seems a bit too hacky. \r\n\r\n","created_at":"2018-01-31T05:50:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-361831315","id":361831315,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDM2MTgzMTMxNQ==","updated_at":"2018-01-31T05:50:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/361831315","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"I've looked into this today and i wouldn't say it's a bug. More a feature request. The implementation of `material.onBeforeCompile()` is currently not designed to support dynamic scenarios like your `if` statement in the callback function. As you mentioned correctly, the renderer can't distinct between both materials since the program code is identical.\r\n\r\nWorkaround: It's easy to avoid the problem if you apply for each material a unique callback function. \r\n\r\nFix: https:\/\/codepen.io\/anon\/pen\/xYyKjX?editors=0010","created_at":"2018-02-25T17:45:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-368328732","id":368328732,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODMyODczMg==","updated_at":"2018-02-25T17:48:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368328732","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"True, but it\u2019s suuuuuuupeer hacky. I use this feature a lot and it\u2019s very cumbersome to work with. Is there any chance you could take a look at my PR and give some feedback? \r\n\r\nWith a couple more lines of code I think that this can become much more powerful and user friendly.\r\n\r\nAs is:\r\n\r\n- can\u2019t have logic in the callback \r\n- have to know the each specific shader in order to know where to inject uniforms varyings and functions ( why can\u2019t it be just uniform: { type, name } and then three knows what to do with it)\r\n- very verbose \r\n- I think one can\u2019t use this to inject extension directives (they show up in the middle of the shader with a warning)\r\n\r\n\r\n\r\n\r\n","created_at":"2018-02-26T03:06:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-368377501","id":368377501,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODM3NzUwMQ==","updated_at":"2018-02-26T03:10:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368377501","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":">  is currently not designed to support dynamic scenarios like your if statement in the callback function. \r\n\r\nI\u2019d argue the semantics here :)\r\n\r\nIt was not designed to begin with, I think it was literally \u201chey this works with 3 lines of code\u201d \ud83e\udd23 \r\nAlso, It does actually kinda work with my dynamic scenario - I\u2019m getting multiple materials to use the same chunks  and their subsets, it just requires a pretty inconvenient work around.\r\n\r\nIf I do however make a feature request do you think that this can be redesigned to be more friendly? ","created_at":"2018-02-26T03:15:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-368378572","id":368378572,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODM3ODU3Mg==","updated_at":"2018-02-26T03:16:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368378572","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"> If I do however make a feature request do you think that this can be redesigned to be more friendly?\r\n\r\nMaking a feature request is a good idea. You should note your requirements\/suggestions in short\/summarised form. Besides, link to your PR that illustrates your idea of a concrete implementation.\r\n\r\nI guess i would close this issue and create a new one with the mentioned content.","created_at":"2018-02-26T20:04:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-368631771","id":368631771,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODYzMTc3MQ==","updated_at":"2018-02-26T20:04:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368631771","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":5,"author_association":"OWNER","body":"I'm having a hard time to figure out an approach that is not a hack to implement this over the current material system. The #11475 hack was included instead.\r\n\r\nAs I proposed in a previous meetup, I think we should study how to implement this on top of MeshNodeMaterial instead.\r\n\r\nhttps:\/\/threejs.org\/examples\/?q=nodes#webgl_materials_nodes","created_at":"2018-02-27T03:18:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-368733741","id":368733741,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODczMzc0MQ==","updated_at":"2018-02-27T03:18:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368733741","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"This might be a solution for this feature:\r\n\r\n```\r\nconst _obc = shader => {...}\r\nconst obc = `\r\nfunction (shader){\r\n  const _${ hash() }\r\n  ${ _obc.toString() }\r\n  _obc(shader)\r\n}\r\n`\r\nmaterial.onBeforeCompile = eval(obc)\r\n```","created_at":"2019-01-06T19:45:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-451768910","id":451768910,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTc2ODkxMA==","updated_at":"2019-01-06T19:45:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451768910","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"It works\r\n\r\nhttps:\/\/codepen.io\/pailhead\/pen\/EGLNzJ","created_at":"2019-01-06T22:19:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13192#issuecomment-451780375","id":451780375,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13192","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTc4MDM3NQ==","updated_at":"2019-01-06T22:19:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451780375","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}