{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"Oh, and extending my thoughts on my original mental model of animations:\n\nWhat if skeletons (poses) could be manipulated similar to vectors? I know it'd be really memory-inefficient, but it's just for conceptualization. Imagine an animation system like this:\n\n``` coffeescript\nwalk = new THREE.Skeleton()\nwave = new THREE.Skeleton()\nwalkAnimation = THREE.Animation(...)\nwaveAnimation = THREE.Animation(...)\n\nwalk.setFromAnimation(walkAnimation, 5) #5 is the time\nwave.setFromAnimation(waveAnimation, 10)\nwave.multiplyScalar(0.5)\n\nmesh.skeleton.copy(walk).add(wave)\n```\n\nAlso, these may spawn more issues if deemed worthy:\n- Callbacks upon completing animations?\n- A built-in configurable blend\/transition from the end of one animation to the beginning of another?\n- Events that can fire during an animation (e.g. a footstep that can be used to play a sound)\n- Showing\/hiding\/dynamic parenting of a bone to another mesh (a similar concept already exists in an existing three.js issue)\n","created_at":"2015-03-05T04:22:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-77304231","id":77304231,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc3MzA0MjMx","updated_at":"2015-03-05T04:22:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/77304231","user":{"following_url":"https:\/\/api.github.com\/users\/willy-vvu\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/willy-vvu\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3529065?v=4","url":"https:\/\/api.github.com\/users\/willy-vvu","gists_url":"https:\/\/api.github.com\/users\/willy-vvu\/gists{\/gist_id}","html_url":"https:\/\/github.com\/willy-vvu","subscriptions_url":"https:\/\/api.github.com\/users\/willy-vvu\/subscriptions","node_id":"MDQ6VXNlcjM1MjkwNjU=","repos_url":"https:\/\/api.github.com\/users\/willy-vvu\/repos","received_events_url":"https:\/\/api.github.com\/users\/willy-vvu\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/willy-vvu\/starred{\/owner}{\/repo}","site_admin":false,"login":"willy-vvu","type":"User","id":3529065,"followers_url":"https:\/\/api.github.com\/users\/willy-vvu\/followers","organizations_url":"https:\/\/api.github.com\/users\/willy-vvu\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I read up a bit on [Unity's animation system](http:\/\/docs.unity3d.com\/Manual\/AnimationOverview.html). Unity uses a state machine to keep track of currently playing animations and to trigger+blend between other animations. It turns out, I wrote some Three.js animation code that acted like a state machine without knowing that Unity also used a state machine! This is definitely a higher-level feature, though my original premise for posting this issue was on the somewhat lower-level weight system. It also may be more specialized for games, and I believe that three.js is designed to be less specialized. I digress.\n","created_at":"2015-03-05T04:32:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-77304910","id":77304910,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc3MzA0OTEw","updated_at":"2015-03-05T04:32:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/77304910","user":{"following_url":"https:\/\/api.github.com\/users\/willy-vvu\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/willy-vvu\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3529065?v=4","url":"https:\/\/api.github.com\/users\/willy-vvu","gists_url":"https:\/\/api.github.com\/users\/willy-vvu\/gists{\/gist_id}","html_url":"https:\/\/github.com\/willy-vvu","subscriptions_url":"https:\/\/api.github.com\/users\/willy-vvu\/subscriptions","node_id":"MDQ6VXNlcjM1MjkwNjU=","repos_url":"https:\/\/api.github.com\/users\/willy-vvu\/repos","received_events_url":"https:\/\/api.github.com\/users\/willy-vvu\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/willy-vvu\/starred{\/owner}{\/repo}","site_admin":false,"login":"willy-vvu","type":"User","id":3529065,"followers_url":"https:\/\/api.github.com\/users\/willy-vvu\/followers","organizations_url":"https:\/\/api.github.com\/users\/willy-vvu\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"IMO, Unity has a nice system for animations. It uses two systems for controlling animations: [blend trees](http:\/\/docs.unity3d.com\/Manual\/class-BlendTree.html) and an [animation state machine](http:\/\/docs.unity3d.com\/Manual\/AnimationStateMachines.html). The state machine controls the transition between unrelated animations (e.g, when and how to switch from _running_ to _jumping_), the blend tree is used to blend animations (e.g, a smooth blend between _walking_ and _running_). \n\nThe systems are independent of each other and should be equally complex to implement. AFAIK, three.js currently has nothing like the animation state machine. The way animations are blended using `THREE.Animation.weight` can be thought of as a simple kind of a blend tree.\n\n> lower-level weight system\n\nGame engines often use blend trees for this:\n- The leaves of the blend tree are usually animation clips and produce a single pose for a given time.\n- Interior nodes are used to combine (blend) two poses. There's many types of ways to blend two poses, see for example the [Unreal Engine docs](https:\/\/docs.unrealengine.com\/latest\/INT\/Engine\/Animation\/NodeReference\/Blend\/index.html).\n- The root of the blend tree is then the final pose of your animated object\n- You could also combine inverse kinematics with a blend tree, but that is a really advanced feature.\n\nFor one of my projects, I have written a complete replacement of the three.js animation system. It's in an experimental state, but it has blend trees and should perform much better than the three.js system - on the other hand, it's meant to be used by a game engine and is probably not as flexible as the three.js system. Let me know if you're interested in the code.\n\n> [...] allow for greater flexibility by allowing two complete animations to play on top of each other\n\nThis could also be solved by a blend tree: each blend tree node can use a different way to combine two poses. In [Unreal Engine](https:\/\/docs.unrealengine.com\/latest\/INT\/Engine\/Animation\/NodeReference\/Blend\/index.html#applyadditive), there's a node for adding an animation on top of another one.\n\n> The poses that come from the animations are then mixed together as weighted averages.\n\nJust a minor note: three.js uses `slerp` for rotation interpolation. This is a more complex operation than a simple weighted average, and is [not commutative](http:\/\/number-none.com\/product\/Understanding%20Slerp,%20Then%20Not%20Using%20It\/). So if you interpolate 3 or more animations, the final result will depend on the order in which you add them. \n\n> An animation's currentTime only works when increasing over time\n\nYes, I've had problems as well when doing arbitrary changes to `currentTime`. At that time (not sure if the code changed since then), one of the issues was that animation keyframes are not uniformly sampled and the animation has to find the two nearest keyframes every time `currentTime` changes. This is an expensive operation (O(log N)), so the code was optimized to perform well only if `currentTime` is always increasing, and only by small amounts (see `THREE.Animation.prototype.getPrevKeyWith` and `THREE.Animation.animationCache`).\n","created_at":"2015-03-05T15:34:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-77385134","id":77385134,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc3Mzg1MTM0","updated_at":"2015-03-05T15:34:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/77385134","user":{"following_url":"https:\/\/api.github.com\/users\/crobi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/crobi\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/577871?v=4","url":"https:\/\/api.github.com\/users\/crobi","gists_url":"https:\/\/api.github.com\/users\/crobi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/crobi","subscriptions_url":"https:\/\/api.github.com\/users\/crobi\/subscriptions","node_id":"MDQ6VXNlcjU3Nzg3MQ==","repos_url":"https:\/\/api.github.com\/users\/crobi\/repos","received_events_url":"https:\/\/api.github.com\/users\/crobi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/crobi\/starred{\/owner}{\/repo}","site_admin":false,"login":"crobi","type":"User","id":577871,"followers_url":"https:\/\/api.github.com\/users\/crobi\/followers","organizations_url":"https:\/\/api.github.com\/users\/crobi\/orgs"}},{"index":3,"author_association":"NONE","body":"Good,although i did not understood.\n","created_at":"2015-03-09T06:14:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-77805220","id":77805220,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA1MjIw","updated_at":"2015-03-09T06:14:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/77805220","user":{"following_url":"https:\/\/api.github.com\/users\/shibing624\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/shibing624\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/10249622?v=4","url":"https:\/\/api.github.com\/users\/shibing624","gists_url":"https:\/\/api.github.com\/users\/shibing624\/gists{\/gist_id}","html_url":"https:\/\/github.com\/shibing624","subscriptions_url":"https:\/\/api.github.com\/users\/shibing624\/subscriptions","node_id":"MDQ6VXNlcjEwMjQ5NjIy","repos_url":"https:\/\/api.github.com\/users\/shibing624\/repos","received_events_url":"https:\/\/api.github.com\/users\/shibing624\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/shibing624\/starred{\/owner}{\/repo}","site_admin":false,"login":"shibing624","type":"User","id":10249622,"followers_url":"https:\/\/api.github.com\/users\/shibing624\/followers","organizations_url":"https:\/\/api.github.com\/users\/shibing624\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"> At that time (not sure if the code changed since then), one of the issues was that animation keyframes are not uniformly sampled and the animation has to find the two nearest keyframes every time currentTime changes. This is an expensive operation (O(log N)), so the code was optimized to perform well only if currentTime is always increasing, and only by small amounts (see THREE.Animation.prototype.getPrevKeyWith and THREE.Animation.animationCache).\n\n@crobi I would agree it's expensive if we were talking about millions of key frames. As things stand, it's possible to track delta from previous frame and get efficiency of original solution, while also being able to run animation in reverse and jump to arbitrary position. ln(1 000 000) is about 14, so that's not really an issue, i think, especially considering you'd only pay that when random seek happens.\n","created_at":"2015-03-10T13:48:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78055572","id":78055572,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4MDU1NTcy","updated_at":"2015-03-10T13:48:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78055572","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"> Let me know if you're interested in the code.\n\nAbsolutely.\n\n I modified BlendCharacter.js but still sometimes I get snapping on some animation transitions. Super frustrating.\n","created_at":"2015-03-10T14:46:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78068218","id":78068218,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4MDY4MjE4","updated_at":"2015-03-10T14:46:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78068218","user":{"following_url":"https:\/\/api.github.com\/users\/titansoftime\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/titansoftime\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/6549763?v=4","url":"https:\/\/api.github.com\/users\/titansoftime","gists_url":"https:\/\/api.github.com\/users\/titansoftime\/gists{\/gist_id}","html_url":"https:\/\/github.com\/titansoftime","subscriptions_url":"https:\/\/api.github.com\/users\/titansoftime\/subscriptions","node_id":"MDQ6VXNlcjY1NDk3NjM=","repos_url":"https:\/\/api.github.com\/users\/titansoftime\/repos","received_events_url":"https:\/\/api.github.com\/users\/titansoftime\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/titansoftime\/starred{\/owner}{\/repo}","site_admin":false,"login":"titansoftime","type":"User","id":6549763,"followers_url":"https:\/\/api.github.com\/users\/titansoftime\/followers","organizations_url":"https:\/\/api.github.com\/users\/titansoftime\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@usnul I wasn't trying to say that using non-uniformely sampled keyframes is bad. I was pointing out that because finding the current keyframe requires _some_ work, three.js uses an optimization (caching of the previous keyframe) which unfortunately breaks down if you start messing with the value of `currentTime`.\n\nOne problem might be that `currentTime` and `timeScale` are public members, so users can perform arbitrary changes on those values. If a user decreases `currentTime` while `timeScale` is positive, code that expects `currentTime` to increase (such as [here](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/extras\/animation\/Animation.js#L219)) won't work correctly.\n\nSpeaking of which, I am having trouble understanding the code that searches for the next keyframe. [Here](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/extras\/animation\/Animation.js#L219), the code seems to check whether the cached keyframes can still be used for the current time. This check should not depend on `timeScale`. Also, once the code decides that it needs new keyframes, it discards the keyframe cache and [starts searching from the beginning](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/extras\/animation\/Animation.js#L222) of the list, using a [linear search](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/extras\/animation\/Animation.js#L225). Doesn't this defeat the purpose of the keyframe cache?\n\nBy the way, the O(log N) from my previous post is the theoretical optimum if you use binary search, three.js performs a linear search, which is O(N). If implemented correctly, the linear search could still be good because most of the time you start from the cached keyframe and perform at most 1-2 iterations of the linear search.\n","created_at":"2015-03-10T15:51:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78082779","id":78082779,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4MDgyNzc5","updated_at":"2015-03-10T15:52:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78082779","user":{"following_url":"https:\/\/api.github.com\/users\/crobi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/crobi\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/577871?v=4","url":"https:\/\/api.github.com\/users\/crobi","gists_url":"https:\/\/api.github.com\/users\/crobi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/crobi","subscriptions_url":"https:\/\/api.github.com\/users\/crobi\/subscriptions","node_id":"MDQ6VXNlcjU3Nzg3MQ==","repos_url":"https:\/\/api.github.com\/users\/crobi\/repos","received_events_url":"https:\/\/api.github.com\/users\/crobi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/crobi\/starred{\/owner}{\/repo}","site_admin":false,"login":"crobi","type":"User","id":577871,"followers_url":"https:\/\/api.github.com\/users\/crobi\/followers","organizations_url":"https:\/\/api.github.com\/users\/crobi\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"@crobi I concur about linear search, from my experiments in the past linear search on arrays in JS beats binary on small arrays (<10k say). I think this has something to do with optimizations of sequential iteration scenarios. \n\nedit:\nchecked my old code, number was actually 10k and not 100k\n","created_at":"2015-03-10T16:05:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78086002","id":78086002,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4MDg2MDAy","updated_at":"2015-03-13T12:57:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78086002","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"> linear search on arrays in JS beats binary on small arrays (<100k say)\n\nI'm pretty sure that's not true - you might want to support your statements with some data or references, otherwise it looks like you're selling speculations and rumors as facts. A simple google search reveals several benchmarks ([here](http:\/\/jsperf.com\/javascript-array-search) or [here](http:\/\/jsperf.com\/searching-javascript-arrays-with-a-binary-search\/13)) showing that binary search is faster even on very small arrays.\n\nAnyway, I don't think this is the point of this issue. @willy-vvu was discussing the overall design of the animation framework, and bugs and limitations associated with the current design.\n","created_at":"2015-03-10T21:37:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78153872","id":78153872,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4MTUzODcy","updated_at":"2015-03-10T21:37:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78153872","user":{"following_url":"https:\/\/api.github.com\/users\/crobi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/crobi\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/577871?v=4","url":"https:\/\/api.github.com\/users\/crobi","gists_url":"https:\/\/api.github.com\/users\/crobi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/crobi","subscriptions_url":"https:\/\/api.github.com\/users\/crobi\/subscriptions","node_id":"MDQ6VXNlcjU3Nzg3MQ==","repos_url":"https:\/\/api.github.com\/users\/crobi\/repos","received_events_url":"https:\/\/api.github.com\/users\/crobi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/crobi\/starred{\/owner}{\/repo}","site_admin":false,"login":"crobi","type":"User","id":577871,"followers_url":"https:\/\/api.github.com\/users\/crobi\/followers","organizations_url":"https:\/\/api.github.com\/users\/crobi\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"@crobi \nMy experience has been so. I apologize if my expressed opinion was perceived as fact. There are several factors that artificial benchmarks fail to take into account, lets assume they are irrelevant, just like my personal experience on my personal hardware with my specific problems. I can try to give you a refund if you believe i have sold you something.\n","created_at":"2015-03-11T09:20:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78228883","id":78228883,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4MjI4ODgz","updated_at":"2015-03-11T09:20:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78228883","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"Umm... so any ideas on how to remedy this issue?\n","created_at":"2015-03-12T14:41:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78492690","id":78492690,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4NDkyNjkw","updated_at":"2015-03-12T14:41:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78492690","user":{"following_url":"https:\/\/api.github.com\/users\/titansoftime\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/titansoftime\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/6549763?v=4","url":"https:\/\/api.github.com\/users\/titansoftime","gists_url":"https:\/\/api.github.com\/users\/titansoftime\/gists{\/gist_id}","html_url":"https:\/\/github.com\/titansoftime","subscriptions_url":"https:\/\/api.github.com\/users\/titansoftime\/subscriptions","node_id":"MDQ6VXNlcjY1NDk3NjM=","repos_url":"https:\/\/api.github.com\/users\/titansoftime\/repos","received_events_url":"https:\/\/api.github.com\/users\/titansoftime\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/titansoftime\/starred{\/owner}{\/repo}","site_admin":false,"login":"titansoftime","type":"User","id":6549763,"followers_url":"https:\/\/api.github.com\/users\/titansoftime\/followers","organizations_url":"https:\/\/api.github.com\/users\/titansoftime\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"@titansoftime \nIn fear of being called captain obvious. I think a functional interface described earlier\n\n> An animation's currentTime only works when increasing over time. \n> with underlying layer doing search optimization to make it work as efficiently as before. I.e. caching previous and maybe next frame.\n\nA good starting point would probably be inefficient implementation of such functional interfaces just to make a starting point. Blend trees and other magic seems to map to this quite nicely unless I'm misunderstanding something.\n","created_at":"2015-03-13T12:56:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-78959196","id":78959196,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDc4OTU5MTk2","updated_at":"2015-03-13T12:56:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/78959196","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"I'm back from a long period of inactivity.\n\nI may as well move off the topic of animation weights for now and instead more broadly (high-level) onto how to make Three.js's animation system more friendly\/coherent to use. I feel:\n- Skeletal animations perhaps should be tied to a SkinnedMesh. It's hard to forsee using animations without one.\n- Perhaps a simple API for playing a single animation and being able to specify (in the play method) how long to blend from the currently playing animation would be a straightforward way to start off. For most projects, this simple model would do the trick.\n- Being able to play multiple animations at once and perhaps transforming animations (think about a player turning around) would be available with blend trees. Of course, this would be abstracted away with the simpler API described above, but it would be nice to be able to use the tree in advanced projects. The tree would also give control over the non-commutative slerps.\n","created_at":"2015-03-22T02:02:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-84493610","id":84493610,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDg0NDkzNjEw","updated_at":"2015-03-22T02:02:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/84493610","user":{"following_url":"https:\/\/api.github.com\/users\/willy-vvu\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/willy-vvu\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3529065?v=4","url":"https:\/\/api.github.com\/users\/willy-vvu","gists_url":"https:\/\/api.github.com\/users\/willy-vvu\/gists{\/gist_id}","html_url":"https:\/\/github.com\/willy-vvu","subscriptions_url":"https:\/\/api.github.com\/users\/willy-vvu\/subscriptions","node_id":"MDQ6VXNlcjM1MjkwNjU=","repos_url":"https:\/\/api.github.com\/users\/willy-vvu\/repos","received_events_url":"https:\/\/api.github.com\/users\/willy-vvu\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/willy-vvu\/starred{\/owner}{\/repo}","site_admin":false,"login":"willy-vvu","type":"User","id":3529065,"followers_url":"https:\/\/api.github.com\/users\/willy-vvu\/followers","organizations_url":"https:\/\/api.github.com\/users\/willy-vvu\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"`THREE.Animation` is deprecated.","created_at":"2017-04-07T19:20:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/6178#issuecomment-292628544","id":292628544,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6178","node_id":"MDEyOklzc3VlQ29tbWVudDI5MjYyODU0NA==","updated_at":"2017-04-07T19:20:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/292628544","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}