{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I've changed the strategy and I think the design became much more straightforward.\n\nNew strategy\n- serialization\n  - store bones in `THREE.Skeleton`\n- deserialization\n  - `THREE.SkinnedMesh` constructor generates bones from `geometry.bones` and builds bone graph as ever\n  - after that update bones with serialized bones\n  - let `THREE.ObjectLoader.parseObject()` skip `THREE.Bone` instances creation\n\nThe major detail changes\n- add `toJSON()` to `THREE.Skeleton` and `THREE.SkinnedMesh`\n- add `fromJSON()` to `THREE.Skeleton`\n- add `geometry.bones` and skinning info into serialization codes\n\nIn this code, I assume\n- each bone in `THREE.Skeleton` has a unique name\n\n\/ping @mrdoob\n","created_at":"2016-06-05T05:25:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-223793985","id":223793985,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIyMzc5Mzk4NQ==","updated_at":"2016-06-06T03:32:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/223793985","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"\/ping @mrdoob \n\nLMK if there're any problems in this PR to merge.\n","created_at":"2016-06-09T00:19:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-224769632","id":224769632,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIyNDc2OTYzMg==","updated_at":"2016-06-09T00:19:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/224769632","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"OWNER","body":"Hmm, you're going to hate me...\n\nI think one of the problems at the moment is that `MMDLoader` generates `Geometry` instead of `BufferGeometry`. Would it be possible to first change `MMDLoader` so it outputs a `BufferGeometry`? I think it would be easier to see how this should be implemented when what we are serialising is a `BufferGeometry` and not a `Geometry`.\n\nIf you type `scene.children[ 2 ].geometry._bufferGeometry` in the console in http:\/\/threejs.org\/examples\/webgl_loader_mmd.html, you'll see how the `BufferGeometry` looks like for the `Geometry` you're generating. If you can generate that directly, serialising will be easier I think.\n","created_at":"2016-06-12T02:48:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-225406568","id":225406568,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIyNTQwNjU2OA==","updated_at":"2016-06-12T02:48:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/225406568","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Thanks for the comment. I'll try what you suggested.\nI knew `THREE.MMDLoader` should generate `THREE.BufferGeometry` for the performance\nand was gonna do. Just the time has come.\n\nBTW, does it mean that `THREE.SkinnedMesh` should generally uses `THREE.BufferGeometry`?\nFor example, the knight guy in this example currently has `THREE.Geometry` but \nalso he should have `THREE.BufferGeometry`?\n(If so we need to update `THREE.JSONLoader`)\n\nhttp:\/\/threejs.org\/examples\/webgl_animation_skinning_morph.html\n\nAnd about what you mentioned in #8422\n\n> I don't think we should be storing bones in `THREE.Geometry`.\n\nYou meant,  we should store bones in `THREE.BufferGeometry`, not `THREE.Geometry`?\n","created_at":"2016-06-12T04:55:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-225410247","id":225410247,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIyNTQxMDI0Nw==","updated_at":"2016-06-12T05:01:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/225410247","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"OWNER","body":"> BTW, does it mean that `THREE.SkinnedMesh` should generally uses `THREE.BufferGeometry`?\n> For example, the knight guy in this example currently has `THREE.Geometry` but \n> also he should have `THREE.BufferGeometry`?\n> (If so we need to update `THREE.JSONLoader`)\n\nYes, `JSONLoader` and `Geometry` are slowly being deprecated. Better to focus on `BufferGeometry` first before duplicating things.\n\n> And about what you mentioned in #8422\n> \n> > I don't think we should be storing bones in `THREE.Geometry`.\n> \n> You meant,  we should store bones in `THREE.BufferGeometry`, not `THREE.Geometry`?\n\nI liked the idea of storing the bones in `Skeleton` and serialising that. I don't know if that solves the whole issue though. Again, it would be easier to see when using `BufferGeometry`.\n","created_at":"2016-06-12T06:23:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-225412590","id":225412590,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIyNTQxMjU5MA==","updated_at":"2016-06-12T06:23:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/225412590","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"Gotcha. That makes sense.\nI'll try the bone serialization with `BufferGeometry`.\n","created_at":"2016-06-12T06:42:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-225413233","id":225413233,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIyNTQxMzIzMw==","updated_at":"2016-06-12T06:42:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/225413233","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"I've made `BufferGeometry` version.\nI stored `bones`, `boneInverses`, and `skeleton.useVertexTexture` in `BufferGeometry`.\nWe need less change now.\n\nYou can see this change works by running the following code\non the console of this example page with the change.\n\nhttp:\/\/threejs.org\/examples\/webgl_animation_skinning_morph.html\n\n```\nmesh.geometry._bufferGeometry.bones = mesh.geometry.bones;\nmesh.geometry._bufferGeometry.animations = mesh.geometry.animations;\n\n\/\/ create SkinnedMesh object with BufferGeometry\nvar m = new THREE.SkinnedMesh( mesh.geometry._bufferGeometry, mesh.material.clone() );\nm.position.copy( mesh.position );\nm.quaternion.copy( mesh.quaternion );\nm.scale.copy( mesh.scale );\nm.position.x += -500;\nm.updateMatrix();\nscene.add( m );\n\nvar mixer2 = new THREE.AnimationMixer( m );\nmixer2.clipAction( m.geometry.animations[ 0 ] ).play();\nmixer2.update( 1.0 );\n\n\/\/ serialization\/deserialization\nvar loader = new THREE.ObjectLoader();\nloader.parse( JSON.parse( JSON.stringify( m.toJSON() ) ), function( object ) {\n\n    object.position.x += 1000;\n    scene.add( object );\n\n} );\n```\n","created_at":"2016-07-03T09:46:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-230144776","id":230144776,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzMDE0NDc3Ng==","updated_at":"2016-07-03T11:26:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/230144776","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":7,"author_association":"OWNER","body":"Looking better!\n\nHowever, how about adding serialisation to `Skeleton`?\n\nThe resulting json could be like this...\n\n``` json\n{\n    \"skeletons\": [\n        {\n            \"uuid\": \"7D59EAF5-09E5-4087-8D0C-037D5ADB52B8\",\n            \"bones\": [],\n        }\n    ],\n    \"object\": {\n        \"uuid\": \"956AAF77-2FFA-4312-BBC9-E2F2289B6BAA\",\n        \"type\": \"SkinnedMesh\",\n        \"matrix\": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],\n        \"geometry\": \"915AF256-F919-44A2-BC45-7235862C3828\",\n        \"material\": \"D5AF1E72-92D8-48C4-B104-1C8646D0B3BF\",\n        \"skeleton\": \"7D59EAF5-09E5-4087-8D0C-037D5ADB52B8\"\n    }\n}\n```\n\nSo bones would get stored in `Skeleton` instead of `Geometry` or `BufferGeometry`.\n\nHow does this sound?\n","created_at":"2016-07-03T20:13:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-230172839","id":230172839,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzMDE3MjgzOQ==","updated_at":"2016-07-03T20:13:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/230172839","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"You're considering `Skeleton` reusability for the future, aren't you?\nIf so, what you suggested should be better, I think.\n\nI've updated the changes to move bones from `BufferGeometry` to `Skeleton`.\nBasically it became better I think.\nBut I'm just feeling like trying remove duplicated lines in `SkinnedMesh.toJSON()` which also appear in `Object3D.toJSON()`...\n","created_at":"2016-07-06T03:23:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-230662051","id":230662051,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzMDY2MjA1MQ==","updated_at":"2016-07-10T14:22:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/230662051","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"@mrdoob \nHow does this change look to you now?\n","created_at":"2016-07-10T14:26:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-231591718","id":231591718,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTU5MTcxOA==","updated_at":"2016-07-10T14:26:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231591718","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"There are still some problems with loading skinned meshes. Even with these changes it is still not possoble to load `SkinnedMesh` types using `BufferGeometry` as the `SkinnedMesh` loading code is conditional on the geometry having a `.bones` property, which `BufferGeometry` does not have.\n\nhttps:\/\/github.com\/takahirox\/three.js\/blob\/1a7c98169b4619f27a4258e9783493476a2d86cb\/src\/loaders\/ObjectLoader.js#L598-L608\n\nI don't think there is any real need for that logic, when the type is explicitly set anyway. `SkinnedMesh` types should be parsed according to their json type property only. And so should `Bone` types.\n\nThe `geometry.bones` check is really a legacy thing for the old-style `Geometry` format anyway. It should remain for that purpose, but it makes no sense when using `SkinnedMesh`\/`BufferGeometry` (which should be the way of the future?).\n\nI recently tried loading `SkinnedMesh`\/`BufferGeometry` and went with a simple approach;\n\nhttps:\/\/github.com\/satori99\/three.js\/blob\/load-skinnedmesh\/src\/loaders\/ObjectLoader.js#L553-L583\n\nI then define a skeleton with `Bone` types in the normal scene graph. The benefit of this is that my skeleton doesn't even have to be a child of a `SkinnedMesh` type, which means it is possible to have multiple `SkinnedMesh` types using a shared `Skeleton` etc.\n\nThe only manual step I then had to do after loading the scene graph with an `ObjectLoader` is something like this;\n\n```\nvar skinnedMesh = scene.getObjectByName('Knight'), bones = [];\nskinnedMesh.traverse( function ( object ) { if ( object.type === 'Bone' ) bones.push( object ); } );\nskinnedMesh.bind( new THREE.Skeleton( bones ), skinnedMesh.matrixWorld );\n```\n\n[this is a working example](https:\/\/rawgit.com\/satori99\/three.js\/load-skinnedmesh\/examples\/webgl_animation_skinning_morph.html) of a pure- `ObjectLoader`\/`BufferGeometry`\/`SkinnedMesh` approach\n","created_at":"2016-08-05T04:10:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-237750782","id":237750782,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc1MDc4Mg==","updated_at":"2016-08-05T04:54:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/237750782","user":{"following_url":"https:\/\/api.github.com\/users\/satori99\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/satori99\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1762580?v=4","url":"https:\/\/api.github.com\/users\/satori99","gists_url":"https:\/\/api.github.com\/users\/satori99\/gists{\/gist_id}","html_url":"https:\/\/github.com\/satori99","subscriptions_url":"https:\/\/api.github.com\/users\/satori99\/subscriptions","node_id":"MDQ6VXNlcjE3NjI1ODA=","repos_url":"https:\/\/api.github.com\/users\/satori99\/repos","received_events_url":"https:\/\/api.github.com\/users\/satori99\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/satori99\/starred{\/owner}{\/repo}","site_admin":false,"login":"satori99","type":"User","id":1762580,"followers_url":"https:\/\/api.github.com\/users\/satori99\/followers","organizations_url":"https:\/\/api.github.com\/users\/satori99\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"What do you think who should have `.bones` property for `SkinnedMesh`\/`BufferGeometry`?\n(Or how `Bone` instances should be generated for `SkinnedMesh`\/`BufferGeometry` ?)\n","created_at":"2016-08-05T04:55:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-237755011","id":237755011,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc1NTAxMQ==","updated_at":"2016-08-05T04:55:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/237755011","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"I asked in another issue (which I closed) about this. \n\nBut I recall that both `SkinnedMesh` and `Bone` types used to be parsed directly many version ago. I do not know why they were removed as first class objects parsed by the `ObjectLoader`, but if they were re-instated, there would be no need for a `.bones` property on `BufferGeometry`.\n\nThe system animation doesn't care what object types it acts apon when animating. They could be be `Bone`, `Object3D`, or and other graph type, so why make bones special when serializing or loading? \n\nTreating them as a regular graph object makes everything simpler I think. But we still need a way to automate the last step of creating `Skeleton` instances and binding them to the right `SkinnedMesh` types when loading.\n","created_at":"2016-08-05T05:02:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-237755702","id":237755702,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc1NTcwMg==","updated_at":"2016-08-05T05:14:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/237755702","user":{"following_url":"https:\/\/api.github.com\/users\/satori99\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/satori99\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1762580?v=4","url":"https:\/\/api.github.com\/users\/satori99","gists_url":"https:\/\/api.github.com\/users\/satori99\/gists{\/gist_id}","html_url":"https:\/\/github.com\/satori99","subscriptions_url":"https:\/\/api.github.com\/users\/satori99\/subscriptions","node_id":"MDQ6VXNlcjE3NjI1ODA=","repos_url":"https:\/\/api.github.com\/users\/satori99\/repos","received_events_url":"https:\/\/api.github.com\/users\/satori99\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/satori99\/starred{\/owner}{\/repo}","site_admin":false,"login":"satori99","type":"User","id":1762580,"followers_url":"https:\/\/api.github.com\/users\/satori99\/followers","organizations_url":"https:\/\/api.github.com\/users\/satori99\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"Refer to #8422 for the two different bone representations in Three.js.\n","created_at":"2016-08-05T05:25:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-237758304","id":237758304,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc1ODMwNA==","updated_at":"2016-08-05T05:25:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/237758304","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"Thanks for that. Makes more sense to me now :)\n\nI have created another demo that animates two skinned meshes using a single Skeleton using my technique above. This could be useful for having multi-mesh characters with changeable clothing etc, and I can't see how that would be possible if the skeletons were defined as a property of BufferGeometry directly with a bones property. Am i wrong about this?\n","created_at":"2016-08-05T05:40:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-237760268","id":237760268,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzNzc2MDI2OA==","updated_at":"2016-08-05T05:40:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/237760268","user":{"following_url":"https:\/\/api.github.com\/users\/satori99\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/satori99\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1762580?v=4","url":"https:\/\/api.github.com\/users\/satori99","gists_url":"https:\/\/api.github.com\/users\/satori99\/gists{\/gist_id}","html_url":"https:\/\/github.com\/satori99","subscriptions_url":"https:\/\/api.github.com\/users\/satori99\/subscriptions","node_id":"MDQ6VXNlcjE3NjI1ODA=","repos_url":"https:\/\/api.github.com\/users\/satori99\/repos","received_events_url":"https:\/\/api.github.com\/users\/satori99\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/satori99\/starred{\/owner}{\/repo}","site_admin":false,"login":"satori99","type":"User","id":1762580,"followers_url":"https:\/\/api.github.com\/users\/satori99\/followers","organizations_url":"https:\/\/api.github.com\/users\/satori99\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"What you want is reusable `Skeleton`, correct?\n\nWe're planning reusable `Skeleton` (Refer to #8422) and so\nI store `bones` in `Skeleton` not `*Geometry` on serialization.\nBut the reusability is the future plan and this PR doesn't support yet.\n","created_at":"2016-08-07T08:59:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-238071510","id":238071510,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzODA3MTUxMA==","updated_at":"2016-08-07T08:59:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/238071510","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"I can do the re-usable skeleton part manually now in any case, but I can't load SkinnedMesh types without .bones from JSON files atm. This is my primary concern.\n","created_at":"2016-08-07T09:01:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-238071583","id":238071583,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDIzODA3MTU4Mw==","updated_at":"2016-08-07T09:01:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/238071583","user":{"following_url":"https:\/\/api.github.com\/users\/satori99\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/satori99\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1762580?v=4","url":"https:\/\/api.github.com\/users\/satori99","gists_url":"https:\/\/api.github.com\/users\/satori99\/gists{\/gist_id}","html_url":"https:\/\/github.com\/satori99","subscriptions_url":"https:\/\/api.github.com\/users\/satori99\/subscriptions","node_id":"MDQ6VXNlcjE3NjI1ODA=","repos_url":"https:\/\/api.github.com\/users\/satori99\/repos","received_events_url":"https:\/\/api.github.com\/users\/satori99\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/satori99\/starred{\/owner}{\/repo}","site_admin":false,"login":"satori99","type":"User","id":1762580,"followers_url":"https:\/\/api.github.com\/users\/satori99\/followers","organizations_url":"https:\/\/api.github.com\/users\/satori99\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":"Closing in favor for #11603","created_at":"2017-07-31T15:07:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8978#issuecomment-319095916","id":319095916,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8978","node_id":"MDEyOklzc3VlQ29tbWVudDMxOTA5NTkxNg==","updated_at":"2017-07-31T15:07:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/319095916","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}