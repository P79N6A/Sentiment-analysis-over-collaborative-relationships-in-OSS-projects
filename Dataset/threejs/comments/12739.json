{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"Similarly to a previous PR. I remember adding these for loops to avoid instantiation of new functions. For loops tend to perform much faster than forEach. The main goal at the time was to speed up parsing and avoid garbage collection.\r\n\r\nHave you had a look at Chrome Dev Tools' performance tab to see how these changes affect?","created_at":"2017-11-26T05:06:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346984837","id":346984837,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk4NDgzNw==","updated_at":"2017-11-26T05:07:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346984837","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Have you read Code style?\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/wiki\/Mr.doob%27s-Code-Style%E2%84%A2#cycles","created_at":"2017-11-26T05:15:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346985130","id":346985130,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk4NTEzMA==","updated_at":"2017-11-26T05:15:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346985130","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Yes, I did quite a bit of performance testing as I was making this PR - at first I was making sure to just replace small loops (max 10 - 100 loops), but even testing against large loops (the geometry creation function and the text parser) I didn't see any evidence of slowing down, at least in Chrome. \r\n\r\nIf you prefer, I can undo the changes to large loops. For smaller loops (let's say, likely to be less than 100 loops), the performance difference is negligible and forEach is much more readable. \r\n\r\nI'll do some more testing with and without this PR and report on performance differences. ","created_at":"2017-11-26T05:57:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346986453","id":346986453,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk4NjQ1Mw==","updated_at":"2017-11-26T05:57:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346986453","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"I prefer keeping the current `for` loop because of not only performance but also code consistency among  files. I want you to add comment like \"\/\/ Using forEach here because this loop is always small enough\" if you would like to use `forEach` because the size of loop you edited is very dependent on model and readers can't know the size from the code.","created_at":"2017-11-26T06:46:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346988442","id":346988442,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk4ODQ0Mg==","updated_at":"2017-11-26T06:53:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346988442","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"> \/\/ Using forEach because this loop is always small enough\" if you would like to use forEach\r\n\r\nThat seems redundant to me. I'd rather it be the other way - `forEach` loops should be the default and `for` loops should only be used when performance is likely to be an issue. \r\n\r\nIn any case, I'll test when I have time later today - it's possible that the performance differences between `for` and `forEach` have dropped a lot since the code style guide was written, this is a good opportunity to test that at least. ","created_at":"2017-11-26T07:10:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346989318","id":346989318,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk4OTMxOA==","updated_at":"2017-11-26T07:10:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346989318","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"> I'd rather it be the other way - forEach loops should be the default and for loops should only be used when performance is likely to be an issue.\r\n\r\nI think you should've first made an issue to discuss if we should make `forEach` the default loop rather than `for` before making this PR because it's entire Three.js topic.","created_at":"2017-11-26T07:16:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346989535","id":346989535,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk4OTUzNQ==","updated_at":"2017-11-26T07:38:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346989535","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":6,"author_association":"OWNER","body":"> In any case, I'll test when I have time later today - it's possible that the performance differences between for and forEach have dropped a lot since the code style guide was written, this is a good opportunity to test that at least.\r\n\r\nSounds good! Curious to see the results \ud83d\udc4c","created_at":"2017-11-26T08:34:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346992767","id":346992767,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk5Mjc2Nw==","updated_at":"2017-11-26T08:34:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346992767","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"OK, here's the results of some initial testing on my laptop.\r\n\r\n## Models\r\nTested with three models:\r\n* wafp.bin.fbx ( mixamo model with motion capture anims, binary, compressed, 4088kb)\r\n* wafp.fbx ( same model reexported in ASCII format, 13124kb )\r\n* xsi_man_skinning.fbx (binary, uncompressed, 3004kb)\r\n\r\n## Methodology: \r\nTesting parsing  time wrapping the the `parse` method inside a `console.time` in the loader and taking an average of ten runs:\r\n\r\n```js\r\nconsole.time( 'Parsing took: ' );\r\nvar scene = self.parse( buffer, resourceDirectory );\r\nconsole.timeEnd( 'Parsing took:' );\r\n```\r\n\r\nTested memory use in Chrome using the dev tool performance tab and reloading the page.\r\nTested memory in Edge using the dev tools memory tab and watching the graph of memory use while reloading the page\r\nNo memory tests in Firefox\r\n\r\n## Browsers: \r\n\r\n All files loaded from local file system on Windows 10, caching disabled. \r\n\r\n* Chrome 63.0.3239.59 (Official Build) beta (64-bit)\r\n* Firefox 57.0 (64-bit)\r\n* Microsoft Edge 41.17025.1000.0\r\n\r\nFirefox updated to the \"quantum\" version half way through testing so I had to redo those \ud83d\ude15 \r\nIt is really fast though!\r\n\r\n## Results:\r\n\r\nFor reach pair of numbers below, the first is running the `dev` branch of FBXLoader, and the second with this PR applied.\r\n\r\n### wafp.bin.fbx (binary, compressed)\r\n**Chrome**, `for`, `forEach`: \r\nParsing time: 573ms, 514ms\r\nMemory:  82.2mb, 84.9mb\r\n\r\n**FireFox** ,`for`, `forEach`: \r\nParsing Time: 386ms, 402ms\r\n\r\n**Edge** , `for`, `forEach`: \r\nParsing Time:  3450ms, 3124ms\r\nMemory: 548mb, 571mb\r\n\r\n### wafp.fbx (ASCII)\r\n**Chrome**,`for`, `forEach`: \r\nParsing time: 1108ms, 1074ms\r\nMemory: 92.5mb, 89mb\r\n\r\n**FireFox** , `for`, `forEach`: \r\nParsing Time: 802ms, 663ms\r\n\r\n**Edge** ,`for`, `forEach`: \r\nParsing Time: 6209ms, 5876ms\r\nMemory: 687mb, 670mb\r\n\r\n### xsi_man_skinning.fbx (binary, uncompressed)\r\n**Chrome**, `for`, `forEach`: \r\nParsing time: 1156ms, 1335ms\r\nMemory: 64.5mb, 66mb\r\n\r\n**FireFox** , `for`, `forEach`: \r\nParsing Time: 324mb, 280ms\r\n\r\n**Edge** , `for`, `forEach`: \r\nParsing Time: 1417ms, 1367ms\r\nMemory: 421mb, 241mb\r\n\r\n## Thoughts:\r\n\r\nThere seems to be very little difference  between `for` and `forEach`, at least while using the latest browsers on desktop. \r\n\r\nDeviation in results on FireFox and Chrome was very small (except for a couple of outliers, most of the runs I used to get the average were within 100ms of each other) - and it seems like using `forEach` is actually a little _faster and more memory efficient_. This is actually the same as what I found while making this PR, although I didn't want to make the claim without more rigorous testing! EDIT: not that I'm claiming that these tests are in any way rigorous \ud83d\ude06  \r\n\r\nDeviation in Edge was large (up a  second difference between tuns on the ASCII file) so the results there are not so conclusive. Except that they show how slow Edge is compared to the other two. ","created_at":"2017-11-26T10:30:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-346998285","id":346998285,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0Njk5ODI4NQ==","updated_at":"2017-11-26T11:11:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346998285","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"## Update: Brave Browser( Chromium based ) on Android\r\n\r\nDid some testing on my old Moto G3 Android phone using the Brave browser which is based on Chromium v62.03. \r\n\r\nAgain, the results show very little difference. I would say these are a bit less accurate though as I kept getting \"context lost\" errors and deviation was up to a couple of seconds between runs. \r\n\r\n### wafp.bin.fbx (binary, compressed)\r\n**Brave**, `for`, `forEach`: \r\nParsing time: 5234ms, 5536ms\r\n\r\n### wafp.fbx (ASCII)\r\n**Brave**,`for`, `forEach`: \r\nParsing time: 13150ms, 13873ms\r\n\r\n### xsi_man_skinning.fbx (binary, uncompressed)\r\n**Brave**, `for`, `forEach`: \r\nParsing time: 9599ms, 9251ms\r\n\r\n","created_at":"2017-11-26T11:03:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347000277","id":347000277,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzAwMDI3Nw==","updated_at":"2017-11-26T11:03:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347000277","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"This result is very surprising and interesting to me...\r\n\r\nI tried \"Male Dynamic Pose.fbx\" from mixamo on my Windows10 + Chrome, I realized the parsing time becomes 100ms faster (from 600ms to 500ms) by just changing few lines in `genGeometry()` of current  `FBXLoader`.\r\n\r\nReplacing \r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/b0e95ebe07d70aed0ad39b6c7079874eccc09a0d\/examples\/js\/loaders\/FBXLoader.js#L844-L846\r\n\r\nwith \r\n\r\n    vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\r\n\r\nand replacing\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/b0e95ebe07d70aed0ad39b6c7079874eccc09a0d\/examples\/js\/loaders\/FBXLoader.js#L1114\r\n\r\nwith\r\n\r\n    } );\r\n\r\nSeems like this part is the major (or almost all) performance gain from this PR.\r\n    \r\nIf this result is true, we may should recommend to use `forEach` in many places for performance...\r\nI'll take a look closer later...\r\n","created_at":"2017-11-26T12:53:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347006642","id":347006642,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzAwNjY0Mg==","updated_at":"2017-11-26T13:35:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347006642","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"> This result is very surprising and interesting to me...\r\n\r\nYeah, so much that I don't totally trust the results \ud83d\ude06 \r\n\r\nI guess the takeaway here is that recent JIT compilers are basically black boxes and assuming things like \"for loops are faster than forEach loops\" is premature optimisation these days, even though it was once a sound assumption. \r\n","created_at":"2017-11-26T13:30:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347008815","id":347008815,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzAwODgxNQ==","updated_at":"2017-11-26T13:30:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347008815","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":11,"author_association":"OWNER","body":"Alright! Lets give it a try! \ud83d\ude0a","created_at":"2017-11-27T07:15:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347097202","id":347097202,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzA5NzIwMg==","updated_at":"2017-11-27T07:15:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347097202","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"OWNER","body":"Thanks!","created_at":"2017-11-27T07:15:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347097229","id":347097229,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzA5NzIyOQ==","updated_at":"2017-11-27T07:15:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347097229","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"Sweet! If it ends up being an issue I'll change it back later \ud83d\ude0a ","created_at":"2017-11-27T08:33:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347111475","id":347111475,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzExMTQ3NQ==","updated_at":"2017-11-27T08:33:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347111475","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"I tried further `for` vs `forEach` evaluation on my Windows10 + latest Chrome and let me share the result.\r\n\r\nEven with `for`, performance improved by exporting the code in `genGeometry()` loop to `function`, like\r\n\r\n    function handleVertex( polygonVertexIndex, vertexIndex ) {\r\n\r\n        ...\r\n\r\n    }\r\n\r\n    for ( var polygonVertexIndex = 0; polygonVertexIndex < vertexIndices.length; polygonVertexIndex ++ ) {\r\n\r\n        handleVertex( polygonVertexIndex, vertexIndex );\r\n\r\n    }\r\n\r\nIn `geoGeometry()` case, the key thing seems like smaller scope rather than `for` or `forEach`. Smaller scope would generate more optimized code perhaps. (Yeah, smaller scope is one of the benefits from `forEach` \r\n tho)\r\n\r\nBut I couldn't reproduce any cases where `forEach` is faster than `for` with other codes. I tried some benchmarks from very simple\/small microbenchmark to benchmark as complex\/large as `genGeometry()` but `for` is faster in all them. I'm very wondering what the actual factor in `genGeometry()` loop which makes `forEach` faster is...\r\n\r\nSo I think it's a bit too early to switch the default loop from `for` to `forEach` now. It'd better to keep current loop code style for now, we use `for` in general and use `forEach` (or other type loop) only when it's reasonable.\r\n\r\nLet me know if you folks find the key factors which make `forEach` faster than `for` or any other cases where `forEach` is faster than `for`.","created_at":"2017-11-28T07:06:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347432996","id":347432996,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzQzMjk5Ng==","updated_at":"2017-11-28T15:25:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347432996","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"I tend to agree with @takahirox on this.\r\n\r\nRegardless, we should have a well-defined policy. What is it?","created_at":"2017-11-28T14:54:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347548259","id":347548259,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU0ODI1OQ==","updated_at":"2017-11-28T14:54:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347548259","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"Personally I'm in favour of `forEach`, except for in cases where performance is very important, since the code is more readable. \r\n\r\nThese test have at least shown that performance difference is likely to be just a few milliseconds on modern browsers, even with very large arrays (the `wafp.fbx` model I was testing has ~100,000 vertices). \r\n\r\n","created_at":"2017-11-28T15:24:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347558036","id":347558036,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU1ODAzNg==","updated_at":"2017-11-28T15:24:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347558036","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":"I vote for ordinary `for` loops. Although `forEach` might be easier to read, we should generally tend to use language features that are focused on performance. From a pure technical point of view, simple `for` loops are much more efficient and produce less overhead.\r\n\r\nSo i clearly promote `for` as the default loop for `three.js`.","created_at":"2017-11-28T15:35:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347561790","id":347561790,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU2MTc5MA==","updated_at":"2017-11-28T15:35:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347561790","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":18,"author_association":"COLLABORATOR","body":"> Let me know if you folks find the key factors which make forEach faster than for or any other cases where forEach is faster than for.\r\n\r\nIndeed, that would be interesting to know.","created_at":"2017-11-28T15:36:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-347562216","id":347562216,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU2MjIxNg==","updated_at":"2017-11-28T15:36:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347562216","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":19,"author_association":"OWNER","body":"> Regardless, we should have a well-defined policy. What is it?\r\n\r\nI vote for whatever is more performant. With a good balance on readability.","created_at":"2017-11-30T06:40:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-348096615","id":348096615,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODA5NjYxNQ==","updated_at":"2017-11-30T06:40:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348096615","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":20,"author_association":"COLLABORATOR","body":">Regardless, we should have a well-defined policy. What is it?\r\n>\r\n>>I vote for whatever is more performant. With a good balance on readability.\r\n\r\nThat is a policy, but it is not well-defined.   :-)\r\n","created_at":"2017-11-30T16:59:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-348252115","id":348252115,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODI1MjExNQ==","updated_at":"2017-12-01T06:43:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348252115","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":21,"author_association":"COLLABORATOR","body":"I've done a quick search through the codebase for `forEach`, `map` and `reduce`, excluding docs and included libs\r\n\r\n`forEach` is used 111 times:\r\n38 times in \/test\r\n71 times in\/examples\r\n1 time in \/src (ShapeUtils)\r\n\r\n`map` is used 53 times:\r\n28 times in \/test\r\n25 times in \/examples\r\n\r\n`reduce` is used  3 time, in \/examples\r\n\r\nAlso for good measure `new Map` is used 9 times, in the FBXLoader (it's also likely to be less supported and lower performance, so we should have a policy on this too). \r\n\r\nMy suggestion would be that we keep the strict policy for the \/src folder, but relax it for other parts of the repo (so these methods can be used for files in the \/test and \/examples folder). \r\n","created_at":"2017-12-01T04:41:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-348399626","id":348399626,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODM5OTYyNg==","updated_at":"2017-12-01T04:41:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348399626","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":22,"author_association":"OWNER","body":"> My suggestion would be that we keep the strict policy for the \/src folder, but relax it for other parts of the repo (so these methods can be used for files in the \/test and \/examples folder).\r\n\r\nSounds good to me.\r\n\r\nAlso, right now is more important the awesome work you're doing on making the loader have excellent support. We can optimise things later.","created_at":"2017-12-01T06:45:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-348415228","id":348415228,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODQxNTIyOA==","updated_at":"2017-12-01T06:45:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348415228","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":23,"author_association":"COLLABORATOR","body":"> We can optimise things later \r\n\r\nWell, testing against the loader from r87, the wafp.bin.fbx file (compressed, binary) model I've been testing took 1158ms, now loads in 514ms in dev.\r\n\r\nASCII and uncompressed binary are about the same (maybe 100-200ms faster on larger models I'm testing), but since most people are using compressed binary FBX files, we can say that we have reduced loading times for FBX models by >50%  in most cases. \r\n\r\n...just in case you need to write some advertising blurb somewhere \ud83d\ude05 ","created_at":"2017-12-01T17:03:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-348550189","id":348550189,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODU1MDE4OQ==","updated_at":"2017-12-01T17:03:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348550189","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":24,"author_association":"OWNER","body":"\ud83c\udf89\ud83c\udf89\ud83c\udf89","created_at":"2017-12-02T18:46:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12739#issuecomment-348711690","id":348711690,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12739","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODcxMTY5MA==","updated_at":"2017-12-02T18:46:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348711690","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}