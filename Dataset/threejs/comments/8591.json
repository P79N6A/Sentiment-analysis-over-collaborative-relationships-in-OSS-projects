{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"NONE","body":"this.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\/\/this is not a good method.\n","created_at":"2016-04-11T03:44:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-208148793","id":208148793,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDIwODE0ODc5Mw==","updated_at":"2016-04-11T03:44:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/208148793","user":{"following_url":"https:\/\/api.github.com\/users\/Hcely\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Hcely\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6130171?v=4","url":"https:\/\/api.github.com\/users\/Hcely","gists_url":"https:\/\/api.github.com\/users\/Hcely\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Hcely","subscriptions_url":"https:\/\/api.github.com\/users\/Hcely\/subscriptions","node_id":"MDQ6VXNlcjYxMzAxNzE=","repos_url":"https:\/\/api.github.com\/users\/Hcely\/repos","received_events_url":"https:\/\/api.github.com\/users\/Hcely\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Hcely\/starred{\/owner}{\/repo}","site_admin":false,"login":"Hcely","type":"User","id":6130171,"followers_url":"https:\/\/api.github.com\/users\/Hcely\/followers","organizations_url":"https:\/\/api.github.com\/users\/Hcely\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Can you provide a test case, along with the information requested in \"How to report a bug\" in the [guidelines](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/.github\/CONTRIBUTING.md)?\n","created_at":"2016-04-11T03:50:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-208150227","id":208150227,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDIwODE1MDIyNw==","updated_at":"2016-04-11T03:51:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/208150227","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"NONE","body":"I edit fromGeometry method.it is working now.\n\n``` js\nfromGeometry : function(geometry) {\n        var faces = geometry.faces;\n        this.vertices = geometry.vertices;\n        var faceVertexUvs = geometry.faceVertexUvs;\n        var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n        var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0;\n        \/\/ morphs\n        var morphTargets = geometry.morphTargets;\n        var morphTargetsLength = morphTargets.length;\n        var morphTargetsPosition;\n        if (morphTargetsLength > 0) {\n            morphTargetsPosition = [];\n            for (var i = 0; i < morphTargetsLength; i++) {\n                morphTargetsPosition[i] = [];\n            }\n            this.morphTargets.position = morphTargetsPosition;\n        }\n        var morphNormals = geometry.morphNormals;\n        var morphNormalsLength = morphNormals.length;\n        var morphTargetsNormal;\n        if (morphNormalsLength > 0) {\n            morphTargetsNormal = [];\n            for (var i = 0; i < morphNormalsLength; i++) {\n                morphTargetsNormal[i] = [];\n            }\n            this.morphTargets.normal = morphTargetsNormal;\n        }\n        \/\/ skins\n        this.skinIndices = geometry.skinIndices;\n        this.skinWeights = geometry.skinWeights;\n        \/\/\n        for (var i = 0; i < faces.length; i++) {\n            var face = faces[i];\n            this.indices.push(face);\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                this.normals[face.a] = vertexNormals[0];\n                this.normals[face.b] = vertexNormals[1];\n                this.normals[face.c] = vertexNormals[2];\n            } else {\n                this.normals[face.a] = face.normal;\n                this.normals[face.b] = face.normal;\n                this.normals[face.c] = face.normal;\n            }\n            var vertexColors = face.vertexColors;\n            if (vertexColors.length === 3) {\n                this.colors[face.a] = vertexColors[0];\n                this.colors[face.b] = vertexColors[1];\n                this.colors[face.c] = vertexColors[2];\n            } else {\n                this.colors[face.a] = face.color;\n                this.colors[face.b] = face.color;\n                this.colors[face.c] = face.color;\n            }\n\n            if (hasFaceVertexUv === true) {\n                var vertexUvs = faceVertexUvs[0][i];\n                if (vertexUvs !== undefined) {\n                    this.uvs[face.a] = vertexUvs[0];\n                    this.uvs[face.b] = vertexUvs[1];\n                    this.uvs[face.c] = vertexUvs[2];\n                } else {\n                    console\n                            .warn(\n                                    'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',\n                                    i);\n                    this.uvs[face.a] = new THREE.Vector2();\n                    this.uvs[face.b] = new THREE.Vector2();\n                    this.uvs[face.c] = new THREE.Vector2();\n                }\n            }\n\n            if (hasFaceVertexUv2 === true) {\n                var vertexUvs = faceVertexUvs[1][i];\n                if (vertexUvs !== undefined) {\n                    this.uvs2[face.a] = vertexUvs[0];\n                    this.uvs2[face.b] = vertexUvs[1];\n                    this.uvs2[face.c] = vertexUvs[2];\n                } else {\n                    console\n                            .warn(\n                                    'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',\n                                    i);\n                    this.uvs2[face.a] = new THREE.Vector2();\n                    this.uvs2[face.b] = new THREE.Vector2();\n                    this.uvs2[face.c] = new THREE.Vector2();\n                }\n\n            }\n            \/\/ morphs\n            for (var j = 0; j < morphTargetsLength; j++) {\n                var morphTarget = morphTargets[j].vertices;\n                morphTargetsPosition[j].push(morphTarget[face.a],\n                        morphTarget[face.b], morphTarget[face.c]);\n            }\n            for (var j = 0; j < morphNormalsLength; j++) {\n                var morphNormal = morphNormals[j].vertexNormals[i];\n                morphTargetsNormal[j].push(morphNormal.a, morphNormal.b,\n                        morphNormal.c);\n            }\n        }\n\n        this.computeGroups(geometry);\n        this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        return this;\n    }\n```\n","created_at":"2016-04-11T14:16:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-208368238","id":208368238,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDIwODM2ODIzOA==","updated_at":"2016-04-11T14:20:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/208368238","user":{"following_url":"https:\/\/api.github.com\/users\/Hcely\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Hcely\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6130171?v=4","url":"https:\/\/api.github.com\/users\/Hcely","gists_url":"https:\/\/api.github.com\/users\/Hcely\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Hcely","subscriptions_url":"https:\/\/api.github.com\/users\/Hcely\/subscriptions","node_id":"MDQ6VXNlcjYxMzAxNzE=","repos_url":"https:\/\/api.github.com\/users\/Hcely\/repos","received_events_url":"https:\/\/api.github.com\/users\/Hcely\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Hcely\/starred{\/owner}{\/repo}","site_admin":false,"login":"Hcely","type":"User","id":6130171,"followers_url":"https:\/\/api.github.com\/users\/Hcely\/followers","organizations_url":"https:\/\/api.github.com\/users\/Hcely\/orgs"}},{"index":3,"author_association":"NONE","body":"The bug was not reported properly, but the issue exists.\r\n\r\n##### Description of the problem \r\n\r\n`DirectGeometry.fromGeometry()` duplicates vertices instead of using indices.\r\n\r\nHere is a fiddle showing a BoxGeometry (8 vertices, 12 faces) and a BufferGeometry created using `.fromGeometry` and passing the same box (108 positions, index null).\r\nhttps:\/\/jsfiddle.net\/brunoimbrizi\/3opvf7rd\/4\/\r\n\r\nThe expected result would be 24 positions (8 * 3) and 36 indices (12 * 3).\r\n\r\n##### Three.js version\r\n\r\n- [x] Dev\r\n- [x] r84\r\n\r\n##### Browser\r\n\r\n- [x] All of them\r\n\r\n##### OS\r\n\r\n- [x] All of them\r\n","created_at":"2017-02-13T14:16:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279403610","id":279403610,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQwMzYxMA==","updated_at":"2017-02-13T14:19:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279403610","user":{"following_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/880280?v=4","url":"https:\/\/api.github.com\/users\/brunoimbrizi","gists_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/brunoimbrizi","subscriptions_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/subscriptions","node_id":"MDQ6VXNlcjg4MDI4MA==","repos_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/repos","received_events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/starred{\/owner}{\/repo}","site_admin":false,"login":"brunoimbrizi","type":"User","id":880280,"followers_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/followers","organizations_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"@brunoimbrizi `BufferGeometry.fromGeometry()` produces non-indexed `BufferGeometry` by design. Two vertices cannot be shared with `BufferGeometry` unless the position and all attributes are identical. Creating non-indexed `BufferGeometry` is easier.","created_at":"2017-02-13T14:44:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279411346","id":279411346,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQxMTM0Ng==","updated_at":"2017-02-13T14:44:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279411346","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"NONE","body":"@WestLangley Sorry to insist, but I don't understand the advantage of not using the index information from an existing `Geometry` when calling `BufferGeometry.fromGeometry()`.\r\n\r\nIn other words, if the vertices are shared in a `Geometry` why wouldn't they be in their `BufferGeometry` equivalent?\r\n\r\nHere is an update to the fiddle showing where positions and indices are manually set based on the vertices and faces of the original `BoxGeometry`.\r\nhttps:\/\/jsfiddle.net\/brunoimbrizi\/3opvf7rd\/5\/\r\n\r\n---\r\n\r\nThe issue is particularly evident when importing a complex model. I found it when importing a model with 774 positions and seeing the number go up to 4095 positions after `.fromGeometry()`. This had a huge impact in performance (4-5 fps on iOS Safari 9). After adding the positions and indices manually - as in the fiddle above - the numbers went down to exactly as they were in the original geometry and the performance improved immensely (60 fps on iOS Safari 9).\r\n","created_at":"2017-02-13T15:20:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279421887","id":279421887,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQyMTg4Nw==","updated_at":"2017-02-13T15:20:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279421887","user":{"following_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/880280?v=4","url":"https:\/\/api.github.com\/users\/brunoimbrizi","gists_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/brunoimbrizi","subscriptions_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/subscriptions","node_id":"MDQ6VXNlcjg4MDI4MA==","repos_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/repos","received_events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/starred{\/owner}{\/repo}","site_admin":false,"login":"brunoimbrizi","type":"User","id":880280,"followers_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/followers","organizations_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":">In other words, if the vertices are shared in a Geometry why wouldn't they be in their BufferGeometry equivalent?\r\n\r\n@brunoimbrizi Re-read what I wrote above. Your example uses position-only data, which is a trivial case.\r\n\r\nI am surprised you are seeing such a performance impact. Most loaders return `BufferGeometry` now. Which loader are you using? ","created_at":"2017-02-13T16:41:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279447372","id":279447372,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ0NzM3Mg==","updated_at":"2017-02-13T16:41:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279447372","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":7,"author_association":"NONE","body":"@WestLangley I understand that position-only examples might be too simple. What I would like to understand is which other attributes could 'break' a `BufferGeometry` if its indices are set from a valid `Geometry`.\r\n\r\nTo answer your question, in the example I mentioned earlier I used `JSONLoader`, but I don't think the loader is the point.\r\n\r\nI worked on another example to show you what I mean.\r\nI searched for examples using `fromGeometry` in the three.js repository and thought that `webgl_interactive_instances_gpu` was a good fit. I forked the repo, created a new build with modified `DirectGeometry` and `BufferGeometry` and updated the example accordingly.\r\n\r\nIt uses `fromGeometry()` in the methods [makeMerged](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/examples\/webgl_interactive_instances_gpu.html#L710) and [makeInstanced](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/examples\/webgl_interactive_instances_gpu.html#L811).\r\n\r\nThe original geometry of `Suzanne.js` has 507 vertices. The `BufferGeometry` created in the `makeInstanced` method has 8712 positions. Roughly 6 times more.\r\n\r\nUsing my modified code - which doesn't duplicate positions and use indices instead - the same method outputs 1521 positions (507 * 3).\r\n\r\nThe difference in performance is huge. We are lucky that this example already has all the tools to run performance tests.\r\n\r\nHave a look at my build:\r\nhttps:\/\/brunoimbrizi.github.io\/three.js\/examples\/webgl_interactive_instances_gpu.html\r\n\r\nAnd compare it with the current r84:\r\nhttps:\/\/threejs.org\/examples\/webgl_interactive_instances_gpu.html\r\n\r\n---\r\n\r\nMy results (Mac OS Chrome 55):\r\nWith 'render continuously' checked, 'number of geometry instances' set to 3000 and testing both  instanced and merged as 'method of construction'.\r\n\r\n- my build: 45 fps (rotating) \/ 60 fps (still)\r\n- current r84: 20 fps (rotating) \/ 35 fps (still)\r\n\r\n\r\n\r\n\r\n","created_at":"2017-02-13T18:52:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279485390","id":279485390,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ4NTM5MA==","updated_at":"2017-02-13T20:42:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279485390","user":{"following_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/880280?v=4","url":"https:\/\/api.github.com\/users\/brunoimbrizi","gists_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/brunoimbrizi","subscriptions_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/subscriptions","node_id":"MDQ6VXNlcjg4MDI4MA==","repos_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/repos","received_events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/starred{\/owner}{\/repo}","site_admin":false,"login":"brunoimbrizi","type":"User","id":880280,"followers_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/followers","organizations_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/orgs"}},{"index":8,"author_association":"NONE","body":"@WestLangley To your point: maybe there are some non-trivial cases where `BufferGeometry.fromGeometry()` needs to return non-indexed results for stuff to work properly. I don't know. However, other trivial cases may pay the price with an unnecessary high vertex count.\r\n\r\nWould it be the case of giving the user an option? Maybe a second parameter `.fromGeometry( geometry, indexed )` where `indexed` is a boolean.","created_at":"2017-02-13T19:07:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279489790","id":279489790,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ4OTc5MA==","updated_at":"2017-02-13T19:07:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279489790","user":{"following_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/880280?v=4","url":"https:\/\/api.github.com\/users\/brunoimbrizi","gists_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/brunoimbrizi","subscriptions_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/subscriptions","node_id":"MDQ6VXNlcjg4MDI4MA==","repos_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/repos","received_events_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/starred{\/owner}{\/repo}","site_admin":false,"login":"brunoimbrizi","type":"User","id":880280,"followers_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/followers","organizations_url":"https:\/\/api.github.com\/users\/brunoimbrizi\/orgs"}},{"index":9,"author_association":"OWNER","body":"Basically, it's very hard to convert a \"indexed\" `Geometry` into a indexed `BufferGeometry` and still support the `needsUpdate` stuff. This was the only sane way I could commit to maintain.\r\n\r\nMaybe you may want to consider using gltf? I think https:\/\/github.com\/Kupoman\/blendergltf produces indexed `BufferGeometry`. ","created_at":"2017-02-13T21:43:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8591#issuecomment-279532005","id":279532005,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8591","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUzMjAwNQ==","updated_at":"2017-02-13T21:44:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279532005","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}