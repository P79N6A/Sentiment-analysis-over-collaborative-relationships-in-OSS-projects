{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"How can we change this without breaking code (in cases users rely on object creation)? Besides, do we still need a return statement?\r\n\r\nIt's just a code style issue but using ES6 default parameters makes the code also nicer:\r\n\r\n```javascript\r\ngetWorldPosition ( result = new Vector3() ) {\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\r\n\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n}\r\n```\r\n> On a related note are the getPoint() methods in the Curve classes. They, too, instantiate an instance and return it. But that is for another thread.\r\n\r\nI'm glad you are mentioning this! But yeah, let's tackle this separately.\r\n\r\n","created_at":"2017-09-20T11:25:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-330823042","id":330823042,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDgyMzA0Mg==","updated_at":"2017-09-20T11:25:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330823042","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":">How can we change this without breaking code\r\n\r\nWe will have to figure out something reasonable...\r\n\r\n>do we still need a return statement?\r\n\r\nI think that is an unrelated issue. The return statement is for chaining.","created_at":"2017-09-20T16:48:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-330912577","id":330912577,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMDkxMjU3Nw==","updated_at":"2017-09-20T16:48:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/330912577","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"I agree wholeheartedly to this proposal; random object allocations are something to be avoided for real-time applications. \r\nAs such I see this change as both reducing complexity of the three.js own code as well as enforcing a good practice for its users.","created_at":"2017-09-21T17:43:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-331229974","id":331229974,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTIyOTk3NA==","updated_at":"2017-09-21T17:43:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331229974","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"> How can we change this without breaking code\r\n\r\nIsn't the whole point to break the code here? Not breaking code would mean still allocating memory somewhere.","created_at":"2017-09-22T13:38:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-331449078","id":331449078,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTQ0OTA3OA==","updated_at":"2017-09-22T13:38:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331449078","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":4,"author_association":"OWNER","body":"> ```javascript\r\n> getWorldPosition ( result = new Vector3() ) {\r\n> \r\n> \tthis.updateMatrixWorld( true );\r\n>\r\n> \treturn result.setFromMatrixPosition( this.matrixWorld );\r\n> \r\n> }\r\n> ```\r\n\r\nThat sure is much nicer...  \ud83e\udd14","created_at":"2017-09-22T23:51:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-331584822","id":331584822,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTU4NDgyMg==","updated_at":"2017-09-22T23:51:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331584822","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":">That sure is much nicer...\r\n\r\nThat coding pattern completely defeats the purpose of the proposal.","created_at":"2017-09-23T00:10:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-331586659","id":331586659,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTU4NjY1OQ==","updated_at":"2017-09-23T00:10:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331586659","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"using default values for parameters is really neat in principle, as a language feature, it makes writing some code a lot easier. Under the hood it results in 2 problems (not really novel, \"arg = arg || default\" is much the same):\r\n- conditional check, at best argument count on the stack\r\n- polymorphic method signature\r\n\r\nboth of these have performance costs. Tiny costs, but it is something to consider.","created_at":"2017-09-23T02:37:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-331605172","id":331605172,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTYwNTE3Mg==","updated_at":"2017-09-23T02:37:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331605172","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"This could be the most sound test for one's application. If it breaks, you're not doing it right anyways. \r\n\r\nAgree with this:\r\n>That coding pattern completely defeats the purpose of the proposal.\r\n","created_at":"2017-09-25T05:12:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-331778821","id":331778821,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTc3ODgyMQ==","updated_at":"2017-09-25T05:12:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331778821","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":8,"author_association":"OWNER","body":">>That sure is much nicer...\r\n>\r\n> That coding pattern completely defeats the purpose of the proposal.\r\n\r\nI see I see. I wasn't sure if you were aiming for code clarity or otherwise.\r\n\r\nThe (obvious) problem I see is backwards compatibility.","created_at":"2017-09-25T20:52:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332009037","id":332009037,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAwOTAzNw==","updated_at":"2017-09-25T20:53:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332009037","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":9,"author_association":"OWNER","body":"May be the issue is that these functions should be in a different place.\r\n\r\nIf we moved the function to `Vector3` it would look like this:\r\n\r\n```js\r\nvector.setFromObjectWorldPosition( object );\r\n```\r\n\r\n```js\r\nsetFromObjectWorldPosition: function ( object ) {\r\n\r\n\tobject.updateMatrixWorld( true );\r\n\treturn this.setFromMatrixPosition( object.matrixWorld );\r\n\r\n}\r\n```\r\n\r\nAnd, at this point, the function is *almost* irrelevant...","created_at":"2017-09-25T20:58:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332010727","id":332010727,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAxMDcyNw==","updated_at":"2017-09-25T21:00:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332010727","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"@mrdoob You suggested that [previously](https:\/\/github.com\/mrdoob\/three.js\/issues\/2752#issuecomment-11057985), but @bhouston had a convincing reply.\r\n\r\n>I am concerned this isn't a scalable because if we were to follow this paradigm religiously, any function that would return a Vector3, say the Curve class, now would have to have its function on Vector3, so Vector3.getCurvePointAt( curve, t ). But so many operations in 3D return a Vector3 which means that Vector3 will get polluted by various relatively unrelated functions (such as other curve types, the Triangle.barycoordinate function, scale and Euler angles from both Matrix3 and Matrix4,... the list is incredibly long.)\r\n","created_at":"2017-09-25T21:26:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332018550","id":332018550,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAxODU1MA==","updated_at":"2017-09-25T21:26:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332018550","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":11,"author_association":"OWNER","body":"I guess is good that I'm consistent \ud83d\ude05","created_at":"2017-09-25T22:12:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332029024","id":332029024,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAyOTAyNA==","updated_at":"2017-09-25T22:12:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332029024","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"OWNER","body":"But yeah... the backwards compatibility problem still stands I think.\r\n\r\nI guess we'll have to do this...?\r\n\r\n```js\r\ngetWorldPosition: function ( target ) {\r\n\r\n\tif ( target === undefined ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: Blah' );\r\n\t\ttarget = new Vector3();\r\n\t}\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\r\n\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n},\r\n```","created_at":"2017-09-25T22:17:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332030000","id":332030000,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMDAwMA==","updated_at":"2017-09-25T22:17:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332030000","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"OWNER","body":"Out of curiosity... What prompted you to suggest this?","created_at":"2017-09-25T22:17:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332030091","id":332030091,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMDA5MQ==","updated_at":"2017-09-25T22:17:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332030091","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"Just to see what that means in numbers I created a jsperf-test for the three possible scenarios (i.e. using es6 default-values, old-school default-values and without them alltogehter). See and run it here: https:\/\/jsperf.com\/default-parameters-performance-cost \u2013 the difference isn't that big in most cases and the versions with and without default-value will both turn out as winner from time to time (at least in chrome 60 and FF55 on osx). \r\n\r\nHowever, I agree that a policy like \"three.js methods do not instantiate objects except in constructors and in methods such as clone()\" would have its benefits in terms of clarity.\r\n\r\nAs for deprecating, it might be nice not to write every single instance of such a call to the console, as that would render most applications unusable until fixed. Alternative could be a helper that just outputs the first instance for each deprecation-warning. Something like\r\n\r\n```javascript\r\nvar printedWarnings = {};\r\nfunction deprecationWarning(id, message) {\r\n\r\n  if ( !printedWarnings[id] ) {\r\n    console.warn(message);\r\n    printedWarnings[id] = true;\r\n  }\r\n\r\n}\r\n```","created_at":"2017-09-25T22:27:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332031903","id":332031903,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMTkwMw==","updated_at":"2017-09-25T22:27:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332031903","user":{"following_url":"https:\/\/api.github.com\/users\/usefulthink\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/usefulthink\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/158792?v=4","url":"https:\/\/api.github.com\/users\/usefulthink","gists_url":"https:\/\/api.github.com\/users\/usefulthink\/gists{\/gist_id}","html_url":"https:\/\/github.com\/usefulthink","subscriptions_url":"https:\/\/api.github.com\/users\/usefulthink\/subscriptions","node_id":"MDQ6VXNlcjE1ODc5Mg==","repos_url":"https:\/\/api.github.com\/users\/usefulthink\/repos","received_events_url":"https:\/\/api.github.com\/users\/usefulthink\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/usefulthink\/starred{\/owner}{\/repo}","site_admin":false,"login":"usefulthink","type":"User","id":158792,"followers_url":"https:\/\/api.github.com\/users\/usefulthink\/followers","organizations_url":"https:\/\/api.github.com\/users\/usefulthink\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@usefulthink array.push() is not fast.  As it does allocations and is fairly complex itself.  You should try a simpler function body to get a better result.","created_at":"2017-09-25T22:30:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332032622","id":332032622,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMjYyMg==","updated_at":"2017-09-25T22:30:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332032622","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":">I guess is good that I'm consistent\r\n\r\n@mrdoob Well, I decided to have a look at your suggestion anyway -- just to see...\r\n\r\n```javascript\r\n\/\/ Camera\r\n\r\nCamera.getWorldDirection( result ) -> Vector3.setFromWorldDirection( camera ) \/\/ or setWorldDirectionFromCamera() or setFromCameraWorldDirection()\r\n\r\n\/\/ Object3D\r\n\r\nObject3D.getWorldPosition( result ) -> Vector3.setFromWorldPosition( object ) \/\/ or setWorldPositionFromObject()\r\n\r\nObject3D.getWorldQuaternion( result ) -> Quaternion.setFromWorldQuaternion( object )\r\n\r\nObject3D.getWorldRotation( result ) -> Euler.setFromWorldRotation( object )\r\n\r\nObject3D.getWorldScale( result ) -> Vector3.setFromWorldScale( object )\r\n\r\nObject3D.getWorldDirection( result ) -> Vector3.setFromWorldDirection( object ) \/\/ this would have to be merged with the camera method\r\n\r\n\/\/ Color\r\n\r\nColor.getHSL( result ) -> this is a special case...\r\n\r\n\/\/ Box2\r\nBox2.getCenter( result ) -> Vector2.setFromBox2Center( box2 ); \/\/ or setCenterFromBox2()\r\n\r\nBox2.getSize( result ) -> Vector2.setFromBox2Size( box2 ); \/\/ or setSizeFromBox2();\r\n\r\nBox2.getParameter( point, result ) -> Vector2.setParameterFromBox2( point );\r\n\r\nBox2.clampPoint( point, result ) -> Vector2.clampPointFromBox2( point );\r\n```\r\n\r\nI would prefer the \"set-what-from-whom\" pattern if we were to do this.\r\n```javascript\r\nsetWorldPositionFromObject( object )\r\n```\r\n","created_at":"2017-09-25T22:32:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332032958","id":332032958,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMjk1OA==","updated_at":"2017-09-25T22:36:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332032958","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":">Out of curiosity... What prompted you to suggest this?\r\n\r\nCoding patterns from users on SO.","created_at":"2017-09-25T22:34:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332033218","id":332033218,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMzIxOA==","updated_at":"2017-09-25T22:34:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332033218","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"@bhouston thanks for pointing that out. Updated the test, and unsurprisingly the results are more stable now, still not that much of a difference.","created_at":"2017-09-25T22:35:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332033474","id":332033474,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzMzQ3NA==","updated_at":"2017-09-25T22:35:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332033474","user":{"following_url":"https:\/\/api.github.com\/users\/usefulthink\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/usefulthink\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/158792?v=4","url":"https:\/\/api.github.com\/users\/usefulthink","gists_url":"https:\/\/api.github.com\/users\/usefulthink\/gists{\/gist_id}","html_url":"https:\/\/github.com\/usefulthink","subscriptions_url":"https:\/\/api.github.com\/users\/usefulthink\/subscriptions","node_id":"MDQ6VXNlcjE1ODc5Mg==","repos_url":"https:\/\/api.github.com\/users\/usefulthink\/repos","received_events_url":"https:\/\/api.github.com\/users\/usefulthink\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/usefulthink\/starred{\/owner}{\/repo}","site_admin":false,"login":"usefulthink","type":"User","id":158792,"followers_url":"https:\/\/api.github.com\/users\/usefulthink\/followers","organizations_url":"https:\/\/api.github.com\/users\/usefulthink\/orgs"}},{"index":19,"author_association":"CONTRIBUTOR","body":"@usefulthink I have no clue how aggressive these optimizers are on simplistic test cases (does everything get inlined and presolved) or whether it can achieve this type of performance on the complexity in production code.","created_at":"2017-09-25T22:57:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332037365","id":332037365,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjAzNzM2NQ==","updated_at":"2017-09-25T22:57:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332037365","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":20,"author_association":"COLLABORATOR","body":"When we talk about backward compatibility, i always have to think at a certain lecturer :laughing:\r\nhttps:\/\/www.youtube.com\/watch?v=DQ8XB7SjfRQ&t=2104s","created_at":"2017-09-27T18:26:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332613141","id":332613141,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjYxMzE0MQ==","updated_at":"2017-10-08T12:52:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332613141","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"> just kids who are smart\r\n\r\n![true](http:\/\/i.imgur.com\/ZTOO13M.jpg)","created_at":"2017-09-27T19:19:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-332627563","id":332627563,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjYyNzU2Mw==","updated_at":"2017-09-27T19:19:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332627563","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":22,"author_association":"OWNER","body":"> @mrdoob Well, I decided to have a look at your suggestion anyway -- just to see...\r\n\r\nThese changes look good to me \ud83d\udc4d","created_at":"2017-10-10T07:34:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-335386923","id":335386923,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzNTM4NjkyMw==","updated_at":"2017-10-10T07:34:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/335386923","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":23,"author_association":"COLLABORATOR","body":"@mrdoob's suggestion is a significant API change... I think we should give this serious thought before heading down this path... (The alternate would be to do what I suggested in my original post above.)\r\n\r\n```javascript\r\n\/\/ Camera\r\n\r\nCamera.getWorldDirection( result ) -> Vector3.getWorldDirectionFromCamera( camera )\r\n\r\n\/\/ Object3D\r\n\r\nObject3D.getWorldPosition( result ) -> Vector3.getWorldPositionFromObject( object )\r\n\r\nObject3D.getWorldQuaternion( result ) -> Quaternion.getWorldQuaternionFromObject( object )\r\n\r\nObject3D.getWorldRotation( result ) Euler.getWorldRotationFromObject( object )\r\n\r\nObject3D.getWorldScale( result ) -> Vector3.getWorldScaleFromObject( object )\r\n\r\nObject3D.getWorldDirection( result ) -> Vector3.getWorldDirectionFromObject( object ) \/\/ this would have to be merged with the camera method\r\n\r\n\/\/ Color\r\n\r\nColor.getHSL( result ) -> this is a special case...\r\n\r\n\/\/ Box2\r\n\r\nBox2.getCenter( result ) -> Vector2.getCenterFromBox2( box2 )\r\n\r\nBox2.getSize( result ) -> Vector2.getSizeFromBox2( box2 )\r\n\r\nBox2.getParameter( point, result ) -> Vector2.getParameterFromBox2( box2, point )\r\n\r\nBox2.clampPoint( point, result ) -> Vector2.clampPointInsideBox2( box2, point )\r\n\r\n\/\/ Box3\r\n\r\nBox3.getCenter( result ) -> Vector3.getCenterFromBox3( box3 )\r\n\r\nBox3.getSize( result ) -> Vector3.getSizeFromBox3( box3 )\r\n\r\nBox3.getParameter( point, result ) -> Vector3.getParameterFromBox3( box3, point )\r\n\r\nBox3.clampPoint( point, result ) -> Vector3.clampPointInsideBox3( box3, point )\r\n\r\n\/\/ Plane\r\n\r\nPlane.projectPoint( point, result ) -> Vector3.projectPointOnToPlane( point, plane )\r\n\r\nPlane.intersectLine( line, result ) -> Vector3.intersectLineWithPlane( line, plane )\r\n\r\nPlane.coplanarPoint( result ) -> Vector3.getCoplanarPointFromPlane( plane )\r\n\r\n\/\/ Line3\r\n\r\nLine3.getCenter( result ) -> Vector3.getCenterFromLine3( line3 )\r\n\r\nLine3.delta( result ) -> Vector3.getDeltaFromLine3( line3 )\r\n\r\nLine3.at( t, result ) -> Vector3.getPointOnLine3( line3, t )\r\n\r\nLine3.closestPointToPoint( point, clampToLine, result ) -> Vector3.getClosestPointOnLineToPoint( line3, point, clampToLine )\r\n \r\n\/\/ Ray\r\n\r\nRay.at( t, result ) -> Vector3.getPointOnRay( ray, t )\r\n\r\nRay.closestPointToPoint( point, clampToLine, result ) -> Vector3.getClosestPointOnRayToPoint( ray, point, clampToLine )\r\n\r\nRay.intersectPlane( plane, result ) -> Vector3.getRayIntersectionWithPlane( ray, plane )\r\n\r\nRay.intersectBox( box, result ) -> Vector3.getRayIntersectionWithBox( ray, box ) \/\/ what if it does not intersect ? <====\r\n\r\n\r\n\/\/ Sphere\r\n\r\nSphere.clampPoint( point, result ) -> Vector3.clampPointInsideSphere( sphere, point )\r\n\r\nSphere.getBoundingBox( result ) -> Box3.setFromSphere( sphere )\r\n\r\n\r\n\/\/ Triangle\r\n\r\ntodo...\r\n\r\n\r\n\/\/ All the curves\r\n\r\ntodo...\r\n```\r\n","created_at":"2017-10-26T00:55:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-339517430","id":339517430,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUxNzQzMA==","updated_at":"2017-10-26T01:04:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/339517430","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":24,"author_association":"CONTRIBUTOR","body":"I think the following are bad form and it would make the library worse to make these changes:\r\n\r\n```\r\nCamera.getWorldDirection( result ) -> Vector3.getWorldDirectionFromCamera( camera )\r\nObject3D.getWorldPosition( result ) -> Vector3.getWorldPositionFromObject( object )\r\nObject3D.getWorldQuaternion( result ) -> Quaternion.getWorldQuaternionFromObject( object )\r\nObject3D.getWorldRotation( result ) Euler.getWorldRotationFromObject( object )\r\nObject3D.getWorldScale( result ) -> Vector3.getWorldScaleFromObject( object )\r\nObject3D.getWorldDirection( result ) -> Vector3.getWorldDirectionFromObject( object ) \/\/ this would have to be merged with the camera method\r\nBox2.getCenter( result ) -> Vector2.getCenterFromBox2( box2 )\r\nBox2.getSize( result ) -> Vector2.getSizeFromBox2( box2 )\r\nBox2.getParameter( point, result ) -> Vector2.getParameterFromBox2( box2, point )\r\nBox2.clampPoint( point, result ) -> Vector2.clampPointInsideBox2( box2, point )\r\nBox3.getCenter( result ) -> Vector3.getCenterFromBox3( box3 )\r\nBox3.getSize( result ) -> Vector3.getSizeFromBox3( box3 )\r\nBox3.getParameter( point, result ) -> Vector3.getParameterFromBox3( box3, point )\r\nBox3.clampPoint( point, result ) -> Vector3.clampPointInsideBox3( box3, point )\r\nPlane.projectPoint( point, result ) -> Vector3.projectPointOnToPlane( point, plane )\r\nPlane.intersectLine( line, result ) -> Vector3.intersectLineWithPlane( line, plane )\r\nPlane.coplanarPoint( result ) -> Vector3.getCoplanarPointFromPlane( plane )\r\nLine3.getCenter( result ) -> Vector3.getCenterFromLine3( line3 )\r\nLine3.delta( result ) -> Vector3.getDeltaFromLine3( line3 )\r\nLine3.at( t, result ) -> Vector3.getPointOnLine3( line3, t )\r\nLine3.closestPointToPoint( point, clampToLine, result ) -> Vector3.getClosestPointOnLineToPoint( line3, point, clampToLine )\r\nRay.at( t, result ) -> Vector3.getPointOnRay( ray, t )\r\nRay.closestPointToPoint( point, clampToLine, result ) -> Vector3.getClosestPointOnRayToPoint( ray, point, clampToLine )\r\nRay.intersectPlane( plane, result ) -> Vector3.getRayIntersectionWithPlane( ray, plane )\r\nRay.intersectBox( box, result ) -> Vector3.getRayIntersectionWithBox( ray, box ) \/\/ what if it does not\r\n```\r\n\r\nIf this was being seriously considered I would likely want to speak up forcefully against it.  I think it pollutes Vector3 with all these other classes.  It encourages Vector3 to know about every other possible class that could create a Vector3.   This is really the opposite of well designed code -- well designed code should discourage coupling as much as possible.  The only coupling one should allow is complex classes (Camera, Object3D, etc.) can depend on simple classes (Vector3, Box3, etc.), ,but not the other way around.  This proposed change would make Vector3 dependent on nearly everything, which sort of the opposite of what you want.\r\n\r\nTo put it in another way, you want a software library's dependencies organized like a series of layers. \r\n The first layer is very basic classes,like the Vector3, Box3, Ray classes in the \/math directory.  These have no dependences except for themselves.  The next set of classes is those that are moderately more complex like Camera, Mesh, AttributeBuffer, Geometry, and Object3D.  These are dependent on each other and the simple classes.  Then you have more complex types of WebGLRenderer, etc.  These are dependent on the other layers.\r\n\r\nThe whole idea is that you reduce cyclic dependences that simple types have on complex types as much as possible to decouple the system -- to untangle the knot of everything dependent on everything.\r\n\r\nThis is also going to make Vector3 huge and less focused.  It will have algorithms related to cameras, meshes, etc in it.\r\n\r\nIt will not be possible to just import the ThreeJS math library into other projeccts, because Vector3 will be dependent on everything else in ThreeJS because Vector3 will reference nearly everything.\r\n\r\nSo I do feel this is not a good way to go.  It is also very untypical in 3D libraries.","created_at":"2017-10-26T01:21:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-339521419","id":339521419,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUyMTQxOQ==","updated_at":"2017-10-26T01:21:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/339521419","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":25,"author_association":"COLLABORATOR","body":"@bhouston Well, there is my original proposal at the top of this thread. I prefer the original proposal, of course. What is your opinion?","created_at":"2017-10-26T02:01:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-339527505","id":339527505,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUyNzUwNQ==","updated_at":"2017-10-26T02:03:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/339527505","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":26,"author_association":"CONTRIBUTOR","body":"@WestLangley I do like your original proposal, I think it is the right way to go.","created_at":"2017-11-02T01:14:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-341289473","id":341289473,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDM0MTI4OTQ3Mw==","updated_at":"2017-11-02T01:14:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/341289473","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":27,"author_association":"COLLABORATOR","body":"@mrdoob My proposal is to file a PR that makes the optional target non-optional, eliminating the use of the following pattern from the library:\r\n```javascript\r\nvar result = optionalTarget || new Vector3();\r\n```\r\nThe policy would be that three.js methods do not instantiate objects, except in constructors and in methods such as clone().\r\n\r\nWould that be something you would support?","created_at":"2017-11-02T02:54:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-341303323","id":341303323,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDM0MTMwMzMyMw==","updated_at":"2017-11-02T03:15:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/341303323","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":28,"author_association":"CONTRIBUTOR","body":"I totally agreed with @bhouston about the polluting against Vector3, which will become unmaintainable with this way.\r\n\r\nAnd \r\n\r\n> the policy being that three.js methods do not instantiate objects except in constructors \r\n\r\n> well designed code should discourage coupling as much as possible.\r\n\r\nShould be a lead coding pattern in the lib !\r\n\r\n\r\nAbout @Mugen87 \r\n\r\n> How can we change this without breaking code (in cases users rely on object creation)?\r\n\r\n```javascript\r\ngetWorldPosition ( result = new Vector3() ) {\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\r\n\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n}\r\n```\r\nIt's look good but is in conflict with the first proposal, so to avoid breaking change and allow user to make their port we should use, like @mrdoob said:\r\n\r\n```javascript\r\ngetWorldPosition: function ( target ) {\r\n\r\n\tif ( target === undefined ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: Blah' );\r\n\t\ttarget = new Vector3();\r\n\t}\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\r\n\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n},\r\n```\r\n\r\nFinally, just a suggest about parameters usage in threejs. I never see ( or in rare case ) check against wrong parameters in the lib, that's make really difficult to debug in certain case ( I will make a proposal about this topic ).\r\n\r\nFor example this example \"should\"\/could become after R89:\r\n\r\n```javascript\r\ngetWorldPosition: function ( target ) {\r\n\r\n\tif ( target === undefined ) {\r\n\t\tthrow new Error('THREE.Matrix4: Invalid target argument !')\r\n\t}\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\r\n\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n},\r\n```\r\n\r\nSo... ok this pattern must not be apply in core or in class\/methods called in render pipeline to avoid big performance regression. But this could help a lot developers to catch error as soon as possible in their code !","created_at":"2017-11-02T11:58:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-341399606","id":341399606,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDM0MTM5OTYwNg==","updated_at":"2017-11-02T11:58:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/341399606","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":29,"author_association":"CONTRIBUTOR","body":"I would even drop the checks for === undefined.\r\n\r\nsimilarly, i would soon drop return parameter also, as long as it's the target that's being returned. It saves some cpu cycles and removes something that no longer serves a purpose.","created_at":"2017-11-03T14:43:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12231#issuecomment-341723229","id":341723229,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12231","node_id":"MDEyOklzc3VlQ29tbWVudDM0MTcyMzIyOQ==","updated_at":"2017-11-03T14:43:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/341723229","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}}]}