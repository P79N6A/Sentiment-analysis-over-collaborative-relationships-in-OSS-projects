{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Although this change is convenient in certain situations, I'm not happy with the new signature of `Object3D.updateMatrixWorld()`. TBH, it feels a bit...hacky. Especially since the actual implementation of `Object3D.updateMatrixWorld()` does not use the camera at all. I think it would be better if your helper has a method `.setCamera()` that allows to inject the camera on app level.","created_at":"2018-09-12T13:40:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-420652029","id":420652029,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMDY1MjAyOQ==","updated_at":"2018-09-12T13:42:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/420652029","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I agree it does feel hacky but in my particular case it's one of the least hacky options. Looping through objects and assigning camera properties on every viewport\/camera change is quite ugly and there should be a better way. Anyway, I'm happy with this approach since it removed a bunch of unnecessary code from my application.\r\n\r\nAnother approach worth considering is what [BabylonJS is doing](https:\/\/github.com\/BabylonJS\/Babylon.js\/blob\/master\/src\/Mesh\/babylon.transformNode.ts#L782) It appears they have getScene() method on transforms and Scene has activeCamera property. I think this is actually a much better solution and easy to implement in threejs at no performance cost.","created_at":"2018-09-12T23:20:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-420830019","id":420830019,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMDgzMDAxOQ==","updated_at":"2018-09-12T23:20:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/420830019","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"For example `Object3D` already has `scene` reference. It would be possible to set `scene.activeCamera = camera;` every time `render(scene, camera)` is called. This would provide activeCamera reference to all Object3D instances and feels much less hacky than doing it in `updateMatrixWorld` path. What do you think? ","created_at":"2018-09-12T23:31:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-420832212","id":420832212,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMDgzMjIxMg==","updated_at":"2018-09-12T23:31:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/420832212","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"> For example Object3D already has scene reference.\r\n\r\nUm, can you please explain what you mean? Something like `Object3D.scene` does not exist.\r\n\r\n> It would be possible to set scene.activeCamera = camera; every time render(scene, camera) is called. This would provide activeCamera reference to all Object3D instances and feels much less hacky than doing it in updateMatrixWorld path. \r\n\r\nIndeed, this approach sounds better than changing the signature of `updateMatrixWorld()`.\r\n\r\n","created_at":"2018-09-13T09:31:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-420944718","id":420944718,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMDk0NDcxOA==","updated_at":"2018-09-13T09:31:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/420944718","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"> Um, can you please explain what you mean? Something like Object3D.scene does not exist.\r\n\r\nBasically, you can walk down the scenegraph tree with `Object3D.parent` until you find `isScene === true`.  It's not optimal but it is there.\r\n\r\nIdeally, there should be a `.scene` property which gets set\/unset inside `add\/remove()` methods exactly like `.parent` property, except it would have to be applied to all descendants of added object.","created_at":"2018-09-13T10:34:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-420961815","id":420961815,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMDk2MTgxNQ==","updated_at":"2018-09-13T10:34:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/420961815","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"I welcome this change as it removes a lot of traversal though the scene graph.\r\n\r\nBeing able to just do `obj.scene.activeCamera` can have quite a positive impact on performance :+1:\r\n\r\nI have no opinion on the `updateMatrixWorld` part though. I would suggest to simply let the renderer set the properties before actually rendering an object. ","created_at":"2018-09-19T07:10:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-422683000","id":422683000,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMjY4MzAwMA==","updated_at":"2018-09-19T07:11:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/422683000","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@haroldiedema I think `updateMatrixWorld` approach was too hacky and this approach is more elegant and pretty much free.\r\n\r\nI changed the property name to `currentCamera` since the same nomenclature is used in WebGLRenderer internally but I do have slight preference for `activeCamera`","created_at":"2018-09-19T10:49:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-422753813","id":422753813,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMjc1MzgxMw==","updated_at":"2018-09-19T10:49:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/422753813","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"@arodic Can you please also update the docs for [Object3D](https:\/\/threejs.org\/docs\/index.html#api\/en\/core\/Object3D) and [Scene](https:\/\/threejs.org\/docs\/index.html#api\/en\/scenes\/Scene)?\r\n\r\nIn any event, I think this change is a useful addition to the library and should be merged.\r\n\r\n> I changed the property name to currentCamera since the same nomenclature is used in WebGLRenderer internally but I do have slight preference for activeCamera\r\n\r\n`currentCamera` is a nomenclature which is also used in other engines like Unity. I think it's okay to stay with it.\r\n\r\nhttps:\/\/docs.unity3d.com\/ScriptReference\/Camera-current.html","created_at":"2018-09-19T12:52:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-422790844","id":422790844,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMjc5MDg0NA==","updated_at":"2018-09-19T12:52:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/422790844","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"I have two concerns of memory leak.\r\n\r\n1. `scene` has a reference to `camera`. Even if user throws away `camera` it won't be released until next `renderer.render()` call. \r\n\r\n2. `scene` and underlying `Object3D`s form a circular reference. To release a scene graph, user needs to remove all the `Object3D`s from the scene graph.","created_at":"2018-09-19T14:52:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-422834457","id":422834457,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMjgzNDQ1Nw==","updated_at":"2018-09-19T14:55:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/422834457","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"> Can you please also update the docs for Object3D and Scene?\r\n\r\n@Mugen87 will do. I can also add relevant tests.\r\n\r\nRegarding memory leak concerns by @takahirox\r\n\r\n> scene has a reference to camera. Even if user throws away camera it won't be released until next renderer.render() call.\r\n\r\nI wouldn't be concerned about this one since (as you said it yourself) the camera reference will be cleared as soon as you render the scene with another camera.\r\n\r\n> scene and underlying Object3Ds form a circular reference. To release a scene graph, user needs to remove all the Object3Ds from the scene graph.\r\n\r\nThis is already the case with `parent` property. The way `scene` property is implemented right now will remove scene reference from all ancestors of removed object. I'll make sure this is covered by the test.","created_at":"2018-09-20T05:05:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423041316","id":423041316,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzA0MTMxNg==","updated_at":"2018-09-20T05:05:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423041316","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"@Mugen87 I added documentation and unit tests for both `.parent` and `.scene` property.\r\n\r\nI noticed that there are no unit tests for `WebGLRenderer` where test for `scene.currentCamera` should be so I wasn't sure if I should add it there. Let me know.\r\n\r\nI also realized that in current implementation scenes have `.scene` property pointing to themselves - which makes the implementation super simple. However, it also assumes that users never add scenes as children to other objects or scenes, which is technically possible. If that happens, the `.scene` property would corrupt on the scene itself (being null or reference to another scene). How should this hypothetical situation be handled?\r\n\r\n1. Do nothing since no sane person should ever add scene as a child. (no fix)\r\n\r\n2. Define `.scene` property on scene as a getter which **always** returns itself and throws a warning if something tries to set it. (partial fix and a warning)\r\n\r\n3. Improve current implementation to support nested scenes and other edge cases. (fully fixed but slightly more complex implementation)","created_at":"2018-09-20T09:15:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423106744","id":423106744,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzEwNjc0NA==","updated_at":"2018-09-20T09:16:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423106744","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"TBH, I've never seen that somebody is doing this:\r\n```js\r\nobject.add( scene );\r\n```\r\nHence, I personally tend to option one.","created_at":"2018-09-20T09:47:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423117519","id":423117519,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzExNzUxOQ==","updated_at":"2018-09-20T09:47:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423117519","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"The only reason I can think of to do `scene.add( scene1 )` would be multi-scene rendering. For example in Unity editor you can load multiple scenes at once and each scene is managed separately while objects are sorted and rendered collectively in the editor. With three.js this can be achieved by adding scenes as children to master(editor) scene. I know scenes are not intended to be used like that, but since `Scene` is also `Object3D` it actually works just fine. However, there are probably other ways to sort and render multiple scenes simultaneously.","created_at":"2018-09-20T15:40:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423231313","id":423231313,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzIzMTMxMw==","updated_at":"2018-09-20T15:40:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423231313","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"> I wouldn't be concerned about this one since (as you said it yourself) the camera reference will be cleared as soon as you render the scene with another camera.\r\n\r\nI don't wanna say it's ok. I've seen similar behaviors, that is a reference to certain objects is made in `.render()` and the reference won't be cleared until next `.render()`. They ended up being fixed because they caused memory leak issues in some cases. \r\n\r\n> This is already the case with parent property. The way scene property is implemented right now will remove scene reference from all ancestors of removed object. I'll make sure this is covered by the test.\r\n\r\nAh, I've missed `parent` property... Off topic but it means scene graph won't be released unless all underlying objects are removed from the graph even without this PR? I've never tested, I think I need to check...\r\n\r\nBTW can't this be done in app level because added `scene` and `camera` references seem to be used only by user code? (I haven't caught on the discussion but just read through the diff.) These properties in core remind me of `Bone`'s `.skin` property referencing to `SkinnedMesh`. It has been removed because it wasn't used in core, no user seemed to use, and it just made references complex.\r\n\r\n    parent.add( child );\r\n    child.userData.scene = parent.userData.scene;\r\n\r\n    scene.userData.currentCamera = camera;\r\n    renderer.render( scene, camera );\r\n","created_at":"2018-09-20T19:31:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423305248","id":423305248,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzMwNTI0OA==","updated_at":"2018-09-20T19:33:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423305248","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"Note that a few loaders may return a model's content as a `Scene`:\r\n\r\n- BabylonLoader\r\n- ColladaLoader\r\n- GLTFLoader\r\n- VRMLLoader\r\n- LegacyGLTFLoader\r\n\r\nWe could change that, of course, but as-is it would be a common source of nested Scene objects.","created_at":"2018-09-20T20:03:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423314638","id":423314638,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzMxNDYzOA==","updated_at":"2018-09-20T20:03:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423314638","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@takahirox as you probably noticed in #14946 currentCamera is used in the core by the renderer itself.\r\n\r\nMaking it available through scene would have positive effect on app complexity. This might not be very obvious if you use threejs mostly for nuclear single scene\/camera sketches like most of the examples and demos out there in the wild. However, if you attempt to build a more complex application, such as a game engine editor, 3D modeling tool or such, the benefits of currentCamera reference becomes quite obvious and imho justifies it's place in the memory.","created_at":"2018-09-20T23:58:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423371359","id":423371359,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzM3MTM1OQ==","updated_at":"2018-09-20T23:58:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423371359","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"Closing this pull request in favor of #14953 and another pull request which will follow up shortly.","created_at":"2018-09-22T08:43:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14888#issuecomment-423728047","id":423728047,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14888","node_id":"MDEyOklzc3VlQ29tbWVudDQyMzcyODA0Nw==","updated_at":"2018-09-22T08:43:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/423728047","user":{"following_url":"https:\/\/api.github.com\/users\/arodic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arodic\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/708984?v=4","url":"https:\/\/api.github.com\/users\/arodic","gists_url":"https:\/\/api.github.com\/users\/arodic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arodic","subscriptions_url":"https:\/\/api.github.com\/users\/arodic\/subscriptions","node_id":"MDQ6VXNlcjcwODk4NA==","repos_url":"https:\/\/api.github.com\/users\/arodic\/repos","received_events_url":"https:\/\/api.github.com\/users\/arodic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arodic\/starred{\/owner}{\/repo}","site_admin":false,"login":"arodic","type":"User","id":708984,"followers_url":"https:\/\/api.github.com\/users\/arodic\/followers","organizations_url":"https:\/\/api.github.com\/users\/arodic\/orgs"}}]}