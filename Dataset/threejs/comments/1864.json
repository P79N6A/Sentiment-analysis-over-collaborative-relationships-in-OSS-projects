{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I think this may be caused by black RGB part of RGBA for pixels with alpha < 1. \n\nYou can try setting these semi and fully transparent pixels to white.\n\nOr you may try to experiment with alpha premultiplication for texture \/ different material blending options:\n\nhttp:\/\/mrdoob.github.com\/three.js\/examples\/webgl_materials_blending_custom.html\n","created_at":"2012-05-04T01:01:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5502305","id":5502305,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDIzMDU=","updated_at":"2012-05-04T01:01:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5502305","user":{"following_url":"https:\/\/api.github.com\/users\/alteredq\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/alteredq\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/438022?v=4","url":"https:\/\/api.github.com\/users\/alteredq","gists_url":"https:\/\/api.github.com\/users\/alteredq\/gists{\/gist_id}","html_url":"https:\/\/github.com\/alteredq","subscriptions_url":"https:\/\/api.github.com\/users\/alteredq\/subscriptions","node_id":"MDQ6VXNlcjQzODAyMg==","repos_url":"https:\/\/api.github.com\/users\/alteredq\/repos","received_events_url":"https:\/\/api.github.com\/users\/alteredq\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/alteredq\/starred{\/owner}{\/repo}","site_admin":false,"login":"alteredq","type":"User","id":438022,"followers_url":"https:\/\/api.github.com\/users\/alteredq\/followers","organizations_url":"https:\/\/api.github.com\/users\/alteredq\/orgs"}},{"index":1,"author_association":"OWNER","body":"Maybe is the same as #1625?\n","created_at":"2012-05-04T01:14:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5502441","id":5502441,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDI0NDE=","updated_at":"2012-05-04T01:14:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5502441","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Hmm. Definitely seems related to that issue, mrdoob.\n\nI'm not sure I can use your solution of adding kind of buffer pixels, though, since in some cases I'm using drawImage to add a png directly (as with the speech bubble).\n\nalteredq, I checked out the blending example and did some experiments.\n\npremultiplyAlpha seems to have no effect and I get really crazy effects when I use THREE.CustomBlending. I can see through the alpha to the web page body behind the canvas:\n\nhttp:\/\/tweetopia.net\/r10\/test\/blendTest.png\n\nI'm probably doing something wrong. Here is my code:\n\n``` javascript\nvar panelTexture = new THREE.Texture( $(tweetCanvas)[0] );\n\npanelTexture.premultiplyAlpha = false;\npanelTexture.needsUpdate = true;\n\nvar panelMaterial = new THREE.MeshBasicMaterial( { map: panelTexture } );\npanelMaterial.transparent =  true;\npanelMaterial.doubleSided = true;\n\npanelMaterial.blending = THREE.CustomBlending;\npanelMaterial.blendSrc = THREE.SrcAlphaFactor;\npanelMaterial.blendDst = THREE.SrcColorFactor;\npanelMaterial.blendEquation = THREE.AddEquation;\n\nvar panelMesh = new THREE.Mesh( panelGeometry,  panelMaterial); \n```\n\nIt seems like one of those blending options may help if I can get it right, but the problem seems deeper. You can see the original bubble image here:\n\nhttp:\/\/tweetopia.net\/r10\/textures\/bubble.png\n\nIf I use that directly as a texture with loadImage, there are no artifacts.\n\nAnd here is the bubble image drawn to the canvas and then saved from there as a png with toDataURL:\n\nhttp:\/\/tweetopia.net\/r10\/test\/bubbleTest.png\n\nThere's no weird alpha channel or anything as far as I can tell. So it seems like it must be something about the way the texture is created from the canvas?\n","created_at":"2012-05-04T01:54:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5502824","id":5502824,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDI4MjQ=","updated_at":"2012-05-04T02:34:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5502824","user":{"following_url":"https:\/\/api.github.com\/users\/scottgarner\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/scottgarner\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/786436?v=4","url":"https:\/\/api.github.com\/users\/scottgarner","gists_url":"https:\/\/api.github.com\/users\/scottgarner\/gists{\/gist_id}","html_url":"https:\/\/github.com\/scottgarner","subscriptions_url":"https:\/\/api.github.com\/users\/scottgarner\/subscriptions","node_id":"MDQ6VXNlcjc4NjQzNg==","repos_url":"https:\/\/api.github.com\/users\/scottgarner\/repos","received_events_url":"https:\/\/api.github.com\/users\/scottgarner\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/scottgarner\/starred{\/owner}{\/repo}","site_admin":false,"login":"scottgarner","type":"User","id":786436,"followers_url":"https:\/\/api.github.com\/users\/scottgarner\/followers","organizations_url":"https:\/\/api.github.com\/users\/scottgarner\/orgs"}},{"index":3,"author_association":"OWNER","body":"`bubble.png` is fine. If I remove the alpha channel I get a white image.\nHowever, `bubbleTest.png` shows the issue I'm talking about. If I remove the alpha channel in gimp I get this:\n\nhttp:\/\/twitpic.com\/9h00hs\/full\n\nTry doing this:\n1. Create a new canvas.\n2. Do a `fillRect()` of full white.\n3. Do the `drawImage()` of the text (or however you're adding the text).\n4. Set `context.globalCompositeMode` to `'destination-in'`. ([cheat sheet](http:\/\/www.nihilogic.dk\/labs\/canvas_sheet\/HTML5_Canvas_Cheat_Sheet.png))\n5. Do the `drawImage()` of the bubble image.\n","created_at":"2012-05-04T03:49:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5503724","id":5503724,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDM3MjQ=","updated_at":"2012-05-04T03:50:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5503724","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":4,"author_association":"OWNER","body":"By default the pixels of a canvas are 0,0,0,0 and, in your case, you need them to be 255,255,255,0. Either you do it by hand modifying the imagedata.data, or you do it with the approach I posted above.\n","created_at":"2012-05-04T03:53:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5503759","id":5503759,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDM3NTk=","updated_at":"2012-05-04T03:53:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5503759","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Ah, you are absolutely right about the default value and your approach to get white alpha totally makes sense, but unfortunately it doesn't seem to work for me. Even with \"destination-in\", which crops as expected, I still get black values in the alpha:\n\nhttp:\/\/tweetopia.net\/r10\/test\/bubbleTestWhite.png\n\nI found a handy way to check with ImageMagick:\n\n`convert bubbleTestWhite.png -crop 1x1+0+0 txt:-`\n\nI also double checked with:\n\n```\nconsole.log(tweetContext.getImageData(0, 0, 1, 1)); \ntweetContext.globalCompositeOperation = \"destination-in\";\ntweetContext.drawImage(tweetopia.bubbleImage,0,0);      \nconsole.log(tweetContext.getImageData(0, 0, 1, 1)); \n```\n\nAnd got:\n\n```\nImageData\n    data: CanvasPixelArray\n        0: 255\n        1: 255\n        2: 255\n        3: 255\n        length: 4\n```\n\nThen:\n\n```\nImageData\n    data: CanvasPixelArray\n        0: 0\n        1: 0\n        2: 0\n        3: 0\n        length: 4\n```\n\nIt looks like no matter what you do, the canvas ends up with black alpha. I even tried filling with various opacities of white, but as soon as I hit zero alpha, everything went black. It's like for the canvas, if alpha is zero, so are RGB.\n\nAs a solve for this particular case, I've made a shader that sets anything with alpha < 1.0 to white and that seems to work, but it would be problematic for something that was another color. I think for that stuff I'll just build everything with materials and geometry instead of using the canvas, I just didn't want to have to mess with text that way.\n\nAs always, you're incredibly awesome for taking so much time to help people with these issues.\n","created_at":"2012-05-04T04:31:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5504095","id":5504095,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDQwOTU=","updated_at":"2012-05-04T04:37:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5504095","user":{"following_url":"https:\/\/api.github.com\/users\/scottgarner\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/scottgarner\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/786436?v=4","url":"https:\/\/api.github.com\/users\/scottgarner","gists_url":"https:\/\/api.github.com\/users\/scottgarner\/gists{\/gist_id}","html_url":"https:\/\/github.com\/scottgarner","subscriptions_url":"https:\/\/api.github.com\/users\/scottgarner\/subscriptions","node_id":"MDQ6VXNlcjc4NjQzNg==","repos_url":"https:\/\/api.github.com\/users\/scottgarner\/repos","received_events_url":"https:\/\/api.github.com\/users\/scottgarner\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/scottgarner\/starred{\/owner}{\/repo}","site_admin":false,"login":"scottgarner","type":"User","id":786436,"followers_url":"https:\/\/api.github.com\/users\/scottgarner\/followers","organizations_url":"https:\/\/api.github.com\/users\/scottgarner\/orgs"}},{"index":6,"author_association":"OWNER","body":"Ah! Shame... Did you tried changing the pixels with imagedata.data? It's basically doing what you're doing in the shader.\n","created_at":"2012-05-04T11:05:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5508242","id":5508242,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDgyNDI=","updated_at":"2012-05-04T11:05:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5508242","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"Hmmm, so it seems like canvas always premultiplies alpha.\n\nDid you try setting `premultiplyAlpha` to true? False is default so snippet you posted actually did no change.\n\nAlso did you already try to use `material.alphaTest`?\n\nAnd I still think that there may be some blending combination that may work - try to make a copy of the blending example I posted, replacing one of the foreground images with yours canvas generated one and see how it looks against various backgrounds with different options.\n","created_at":"2012-05-04T11:05:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5508243","id":5508243,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MDgyNDM=","updated_at":"2012-05-04T11:05:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5508243","user":{"following_url":"https:\/\/api.github.com\/users\/alteredq\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/alteredq\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/438022?v=4","url":"https:\/\/api.github.com\/users\/alteredq","gists_url":"https:\/\/api.github.com\/users\/alteredq\/gists{\/gist_id}","html_url":"https:\/\/github.com\/alteredq","subscriptions_url":"https:\/\/api.github.com\/users\/alteredq\/subscriptions","node_id":"MDQ6VXNlcjQzODAyMg==","repos_url":"https:\/\/api.github.com\/users\/alteredq\/repos","received_events_url":"https:\/\/api.github.com\/users\/alteredq\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/alteredq\/starred{\/owner}{\/repo}","site_admin":false,"login":"alteredq","type":"User","id":438022,"followers_url":"https:\/\/api.github.com\/users\/alteredq\/followers","organizations_url":"https:\/\/api.github.com\/users\/alteredq\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Same results with `getImageData`, changing pixels and then `putImageData`. \n\n`premultiplyAlpha` seemed to have no effect and `material.alphaTest` dropped some of the black, but made things more jagged.\n\nI did some more experimenting with webgl_materials_blending_custom.html by dropping in my own image, and it actually looks like both One\/SrcColor DstAlpha\/SrcColor lose the black border, which is great, but for some reason I'm having a hard time porting the effect to my scene.\n\nWhen I use:\n\n```\n    bubbleMaterial.blending = THREE.CustomBlending;\n    bubbleMaterial.blendSrc = THREE.OneFactor;\n    bubbleMaterial.blendDst = THREE.SrcColorFactor;\n    bubbleMaterial.blendEquation = THREE.AddEquation;   \n```\n\nI get:\n\nhttp:\/\/tweetopia.net\/r10\/test\/blendTest.png\n\n(Those stripes are on the body, not in the render).\n\nI'm probably missing something, but I don't know what.\n","created_at":"2012-05-04T22:02:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5521284","id":5521284,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MjEyODQ=","updated_at":"2012-05-04T22:02:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5521284","user":{"following_url":"https:\/\/api.github.com\/users\/scottgarner\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/scottgarner\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/786436?v=4","url":"https:\/\/api.github.com\/users\/scottgarner","gists_url":"https:\/\/api.github.com\/users\/scottgarner\/gists{\/gist_id}","html_url":"https:\/\/github.com\/scottgarner","subscriptions_url":"https:\/\/api.github.com\/users\/scottgarner\/subscriptions","node_id":"MDQ6VXNlcjc4NjQzNg==","repos_url":"https:\/\/api.github.com\/users\/scottgarner\/repos","received_events_url":"https:\/\/api.github.com\/users\/scottgarner\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/scottgarner\/starred{\/owner}{\/repo}","site_admin":false,"login":"scottgarner","type":"User","id":786436,"followers_url":"https:\/\/api.github.com\/users\/scottgarner\/followers","organizations_url":"https:\/\/api.github.com\/users\/scottgarner\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"Oh! I think I was confused by the labels in the example and had `blendSrc` and `blendDst` reversed.\n\nIt works now as expected as far as the edges are concerned, but the text colors get blown out with both `THREE.OneFactor` and `THREE.DstAlphaFactor`.\n\nLooks like my best bet is the shader solution that makes alpha white. Thanks again for all of the help!\n","created_at":"2012-05-04T22:08:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5521371","id":5521371,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MjEzNzE=","updated_at":"2012-05-04T22:08:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5521371","user":{"following_url":"https:\/\/api.github.com\/users\/scottgarner\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/scottgarner\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/786436?v=4","url":"https:\/\/api.github.com\/users\/scottgarner","gists_url":"https:\/\/api.github.com\/users\/scottgarner\/gists{\/gist_id}","html_url":"https:\/\/github.com\/scottgarner","subscriptions_url":"https:\/\/api.github.com\/users\/scottgarner\/subscriptions","node_id":"MDQ6VXNlcjc4NjQzNg==","repos_url":"https:\/\/api.github.com\/users\/scottgarner\/repos","received_events_url":"https:\/\/api.github.com\/users\/scottgarner\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/scottgarner\/starred{\/owner}{\/repo}","site_admin":false,"login":"scottgarner","type":"User","id":786436,"followers_url":"https:\/\/api.github.com\/users\/scottgarner\/followers","organizations_url":"https:\/\/api.github.com\/users\/scottgarner\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"I managed to get quite ok looking results by turning on alpha premultiplication and just using custom blending, leaving everything else on default (`SrcAlphaFactor` + `OneMinusSrcAlphaFactor`):\n\n``` javascript\ntexture.premultiplyAlpha = true;\nbubbleMaterial.blending = THREE.CustomBlending;\n```\n\nhttp:\/\/alteredqualia.com\/tmp\/tests\/blending\/webgl_canvas_alpha_test.html\n\nThis btw differs from default `NormalBlending` which uses separate blending functions.\n","created_at":"2012-05-04T23:03:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-5522168","id":5522168,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDU1MjIxNjg=","updated_at":"2012-05-04T23:03:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/5522168","user":{"following_url":"https:\/\/api.github.com\/users\/alteredq\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/alteredq\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/438022?v=4","url":"https:\/\/api.github.com\/users\/alteredq","gists_url":"https:\/\/api.github.com\/users\/alteredq\/gists{\/gist_id}","html_url":"https:\/\/github.com\/alteredq","subscriptions_url":"https:\/\/api.github.com\/users\/alteredq\/subscriptions","node_id":"MDQ6VXNlcjQzODAyMg==","repos_url":"https:\/\/api.github.com\/users\/alteredq\/repos","received_events_url":"https:\/\/api.github.com\/users\/alteredq\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/alteredq\/starred{\/owner}{\/repo}","site_admin":false,"login":"alteredq","type":"User","id":438022,"followers_url":"https:\/\/api.github.com\/users\/alteredq\/followers","organizations_url":"https:\/\/api.github.com\/users\/alteredq\/orgs"}},{"index":11,"author_association":"NONE","body":"I had similar issues and this is key to working with a canvas texture I think:\r\n> texture.premultiplyAlpha = true;\r\n\r\nI think it would make for a good default for CanvasTexture, since it is always pre-multiplied colors.\r\n\r\nPS: Using `blendSrc=THREE.SrcAlphaFactor` kind of hides the issues (since it multiplies it back to straight colors), but using `blendSrc=THREE.OneFactor` really shows the issue (that's how I found out)","created_at":"2018-08-06T11:58:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-410684128","id":410684128,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMDY4NDEyOA==","updated_at":"2018-08-06T11:58:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/410684128","user":{"following_url":"https:\/\/api.github.com\/users\/maartenbreddels\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/maartenbreddels\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1765949?v=4","url":"https:\/\/api.github.com\/users\/maartenbreddels","gists_url":"https:\/\/api.github.com\/users\/maartenbreddels\/gists{\/gist_id}","html_url":"https:\/\/github.com\/maartenbreddels","subscriptions_url":"https:\/\/api.github.com\/users\/maartenbreddels\/subscriptions","node_id":"MDQ6VXNlcjE3NjU5NDk=","repos_url":"https:\/\/api.github.com\/users\/maartenbreddels\/repos","received_events_url":"https:\/\/api.github.com\/users\/maartenbreddels\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/maartenbreddels\/starred{\/owner}{\/repo}","site_admin":false,"login":"maartenbreddels","type":"User","id":1765949,"followers_url":"https:\/\/api.github.com\/users\/maartenbreddels\/followers","organizations_url":"https:\/\/api.github.com\/users\/maartenbreddels\/orgs"}},{"index":12,"author_association":"OWNER","body":"Oh! Interesting...\r\n@Mugen87 would you like to take a look?","created_at":"2018-08-06T19:10:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-410820205","id":410820205,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMDgyMDIwNQ==","updated_at":"2018-08-06T19:10:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/410820205","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"I'll try to make a fiddle so we can see the difference in a live example.","created_at":"2018-08-07T14:04:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-411067932","id":411067932,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMTA2NzkzMg==","updated_at":"2018-08-07T14:53:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/411067932","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":14,"author_association":"NONE","body":"Would be great since it is difficult to isolate from my project and I'm no threejs expert. My guess is that edges will look much better by default (with premultiplyAlpha=true), and should look the same if `blendSrc=THREE.OneFactor` is used.\r\nTo get a clear overview of premultiplied and straight color if found https:\/\/limnu.com\/webgl-blending-youre-probably-wrong\/ a good resource to clear up the confusion I had.","created_at":"2018-08-07T14:21:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-411073844","id":411073844,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMTA3Mzg0NA==","updated_at":"2018-08-07T14:21:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/411073844","user":{"following_url":"https:\/\/api.github.com\/users\/maartenbreddels\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/maartenbreddels\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1765949?v=4","url":"https:\/\/api.github.com\/users\/maartenbreddels","gists_url":"https:\/\/api.github.com\/users\/maartenbreddels\/gists{\/gist_id}","html_url":"https:\/\/github.com\/maartenbreddels","subscriptions_url":"https:\/\/api.github.com\/users\/maartenbreddels\/subscriptions","node_id":"MDQ6VXNlcjE3NjU5NDk=","repos_url":"https:\/\/api.github.com\/users\/maartenbreddels\/repos","received_events_url":"https:\/\/api.github.com\/users\/maartenbreddels\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/maartenbreddels\/starred{\/owner}{\/repo}","site_admin":false,"login":"maartenbreddels","type":"User","id":1765949,"followers_url":"https:\/\/api.github.com\/users\/maartenbreddels\/followers","organizations_url":"https:\/\/api.github.com\/users\/maartenbreddels\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"I've created a little test case but I'm not sure the used sprite texture is good to demonstrate the issue:\r\n\r\nhttps:\/\/jsfiddle.net\/f2Lommf5\/11045\/\r\n\r\nAs far as I can see, setting `premultiplyAlpha` to `true` does not produce a different visual result.\r\n\r\n@maartenbreddels Any tips to improve the demo?","created_at":"2018-08-07T14:53:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-411085131","id":411085131,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMTA4NTEzMQ==","updated_at":"2018-08-07T14:53:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/411085131","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":16,"author_association":"NONE","body":"Yes, I created a new version here:\r\nhttps:\/\/jsfiddle.net\/f2Lommf5\/11064\/\r\n\r\nAs you can see, the red circle (101 overlapped and blended) shows a dark edge (this is why i chased this). This is caused, because the colors will be 'un-multiplied', and later on in the opengl pipeline multiplied again (SrcAlphaFactor). For low alphas this will cause the artifacts (loss of precision I guess). \r\nIf you run the demo with premultiplyAlpha=true, and OneFactor, you will see a much better red circle.\r\n\r\nSo the defaults now (`premultiplyAlpha=false`, and `SrcAlphaFactor`) give a nice results most of the time, but I think it is wrong, and can lead to artifacts.","created_at":"2018-08-07T15:24:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-411096365","id":411096365,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMTA5NjM2NQ==","updated_at":"2018-08-07T15:24:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/411096365","user":{"following_url":"https:\/\/api.github.com\/users\/maartenbreddels\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/maartenbreddels\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1765949?v=4","url":"https:\/\/api.github.com\/users\/maartenbreddels","gists_url":"https:\/\/api.github.com\/users\/maartenbreddels\/gists{\/gist_id}","html_url":"https:\/\/github.com\/maartenbreddels","subscriptions_url":"https:\/\/api.github.com\/users\/maartenbreddels\/subscriptions","node_id":"MDQ6VXNlcjE3NjU5NDk=","repos_url":"https:\/\/api.github.com\/users\/maartenbreddels\/repos","received_events_url":"https:\/\/api.github.com\/users\/maartenbreddels\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/maartenbreddels\/starred{\/owner}{\/repo}","site_admin":false,"login":"maartenbreddels","type":"User","id":1765949,"followers_url":"https:\/\/api.github.com\/users\/maartenbreddels\/followers","organizations_url":"https:\/\/api.github.com\/users\/maartenbreddels\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":"Thanks for the chances! The dark edges are now nicely to see^^\r\n\r\n@mrdoob Still, changing the default values of normal blending (in this case the `srcRGB` parameter for `blendFuncSeparate()`) and `CanvasTexture.premultiplyAlpha` is a breaking change. How should we proceed with this issue?","created_at":"2018-08-07T15:47:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/1864#issuecomment-411104710","id":411104710,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/1864","node_id":"MDEyOklzc3VlQ29tbWVudDQxMTEwNDcxMA==","updated_at":"2018-08-07T15:47:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/411104710","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}