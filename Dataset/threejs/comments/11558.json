{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"There's an ongoing discussion as to whether to adopt ES6 features: #6419\r\n\r\nAlso, while native support for 'const' is [good](http:\/\/caniuse.com\/#search=const) (>97%), `let` support is [not so good](http:\/\/caniuse.com\/#search=let) (~80%). Although the numbers on the 'let' page don't seem to add up, maybe there is somewhere to get a second opinion?","created_at":"2017-06-19T13:05:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-309433581","id":309433581,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQzMzU4MQ==","updated_at":"2017-06-19T13:05:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/309433581","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":1,"author_association":"NONE","body":"I've only used let & const because I saw that you already use Object.assign().\r\n\r\nI've also read the entire discussion you pointed out, that started in 2015.\r\nAs far as I can see, all perf benchmarks seem to point out that let is indeed a bit slower than var.\r\n\r\nIf perf is the primary goal, than maybe you should stick with ES5 for now.","created_at":"2017-06-19T14:00:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-309448314","id":309448314,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ0ODMxNA==","updated_at":"2017-06-19T14:00:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/309448314","user":{"following_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/2570562?v=4","url":"https:\/\/api.github.com\/users\/andreipfeiffer","gists_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/gists{\/gist_id}","html_url":"https:\/\/github.com\/andreipfeiffer","subscriptions_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/subscriptions","node_id":"MDQ6VXNlcjI1NzA1NjI=","repos_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/repos","received_events_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/starred{\/owner}{\/repo}","site_admin":false,"login":"andreipfeiffer","type":"User","id":2570562,"followers_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/followers","organizations_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"There's a polyfill for Object.assign [here](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/polyfills.js#L53). ","created_at":"2017-06-19T14:03:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-309449260","id":309449260,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ0OTI2MA==","updated_at":"2017-06-19T14:03:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/309449260","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"@andreipfeiffer Please avoid the usage of `let` and `const`. One design goal of the library is to run on many devices as possible. I think it's not the time yet to use ES6 features without polyfills.","created_at":"2017-06-19T15:04:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-309468324","id":309468324,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ2ODMyNA==","updated_at":"2017-06-19T15:04:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/309468324","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"NONE","body":"Sure, no problem, thanks.","created_at":"2017-06-19T15:17:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-309472293","id":309472293,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDMwOTQ3MjI5Mw==","updated_at":"2017-06-19T15:17:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/309472293","user":{"following_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/2570562?v=4","url":"https:\/\/api.github.com\/users\/andreipfeiffer","gists_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/gists{\/gist_id}","html_url":"https:\/\/github.com\/andreipfeiffer","subscriptions_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/subscriptions","node_id":"MDQ6VXNlcjI1NzA1NjI=","repos_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/repos","received_events_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/starred{\/owner}{\/repo}","site_admin":false,"login":"andreipfeiffer","type":"User","id":2570562,"followers_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/followers","organizations_url":"https:\/\/api.github.com\/users\/andreipfeiffer\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"New benchmarks are proof of the correcting of the run time engine 'let' is newer and solves problems with var so it's an improvement (so use it) also all on one line was slower now that's better too.\r\njsperf is old and broken wish I could delete them it deletes existing tests when editing and just horrible.\r\nAnyway you can test them on your system mine should it's changed in the last few years, so I'm glad I stuck to what I think it suppose to be right for the future.\r\n\r\nhttps:\/\/jsperf.com\/separating-assignment-from-declaration\/8\r\nTypeof I won't use still it's faster but they'll figure it out eventually right. I stick to what I believe the let vs var is proof of that, so I compare Constructor that makes way more sense to me.\r\nhttps:\/\/jsperf.com\/mj-typeof-vs-constructor\r\nIt's a meaningless difference, what matters is 'var' doesn't release & collect as well as 'let' does.\r\nCrockford says something to that effect too.\r\nhttps:\/\/jsperf.com\/mj-let-vs-var\/1\r\n\r\n**And the RANT of a lifetime begins enjoy:**\r\nAs to const? I build everything off of my global object, if you make it const fine you can always over right the contents of an object also meaningless as types are in JS and should be.\r\n\r\nThe only thing I do new now while avoiding null as well is create an und for undefined and then you say so explicitly not writable like so. (I also use 3 letter names like rnd for 'renderer' cam for 'camera' etc. kind of like assembly ironically, I also mostly turf the vowels you can still read it. jmp vs jump )\r\n\r\n```\r\nif( global.hasOwnProperty( 'und' ) === false ) {\r\n\tglobal.und = undefined;\r\n\tObject.defineProperty( global, 'und', {\r\n\t\tvalue: undefined,\r\n\t\twritable: false,\r\n\t\tconfigurable: false\r\n\t} );\r\n}\r\n```\r\nCrockford explained everything well a few years back, so maybe there's an update with ES6 etc.\r\nIt's everything I understood instinctively being self taught since the first PET computer entered the school in Canada. I was in grade 4. I taught myself assembly in grade 6 because that's all you could do with them Apple ][+ etc. I'm 48 now.\r\nHe starts a few years before my time (Act I) but not many and I was just a kid through those years with many distractions (art & music) in life etc. about part\/act 3 or 4 he explains you wouldn't but you can get ride of declarations altogether with his fun bit on the Y Combinator (at end of act 3).\r\n\r\nHistory https:\/\/www.youtube.com\/watch?v=JxAXlJEmNMg\r\nJavaScript https:\/\/www.youtube.com\/watch?v=RO1Wnu-xKoY\r\nhttps:\/\/www.youtube.com\/watch?v=ya4UHuXNygM\r\nY combinator at the end https:\/\/youtu.be\/ya4UHuXNygM?t=1h9m26s\r\nit goes on and on for like a week and beyond.\r\nPart 5 \"the end of all things\" https:\/\/www.youtube.com\/watch?v=47Ceot8yqeI\r\n\r\nby building everything in an object or even from one global you can do away with all of it var let const gone. Even temps in a function can be arguments you check for und,  and set a default (you don't need to pass them and can override not so in many other languages).\r\nI've recently destroyed the last type for the developers conscious by merging Array functions in the Object class as an Ordered Dictionary. Type's are bull for me now in every way.\r\nI also took the ON out of JSON and pass my data as JS, (yes the sockets layer is using JSON but that's questionably... maybe BSON or just JS is better agian (must purify).\r\nAll the languages can be transpile into JS now, but I say why not just use JavaScript in the first place? Oh because your old school and think you need types in you big corporation as you were taught by others and never thought about deeply fine, but it get's turned into JS and it strips all the types out when you build it. \r\nAnyway I say think again.\r\nlet there be let, don't waste time with const. In a scaled system cycles are king but we don't need to worry about nano seconds.\r\nI could go one but I'll let the reader spend 40 years figuring out how to distill and extinguish the bull as we rush into the singularity.\r\nThe JS Run-Time Engine optimizes your types so you don't have to think about them, but you need to be aware it's better not to mix them. All functions should have defaults and\/or best guesses etc. to make sure they return a result.\r\nI use und because I don't want to type undefined all the time, and banging !it is hard to see but (it && it.thing) is a nice abbreviation.\r\nI'd prefer if the runtime better handled it.thing like (it && it.thing) so no throwing there I guess, just return und.\r\nIn the end hoisting is efficient and probably better so you should ask yourself is strict even needed and then again no var let const etc. I'm sure that was the smart point and goal of the creator BE did in a week, when he create JS. All you do is check if und or make sure you set a default and for your for-loop counter 'i' (junior labeling) could be hoisted and nested via closure to wherever because it's single threaded system. I have nodejs fork per (CPUs - 1 for system) and grab both an IPV4 and IPV6 per fork so the farm and world can communicate in cells etc. so totally trans-formative again. With mass global parallel reactive GPU node computing the nano seconds in var vs let are meaningless. Optic networks trying to achieve the dream of realtime 60 FPS rendering make things like compression to bitcoin re-thinkable and possibly a waste of cycles on both ends or it should be hidden in the server's encryption (runtime server build cached and updated with watches), etc. Realtime hot-loading means the only compiling needed is JS to GL transpile on the fly. I'll stop there but it all leads to something wonderful I've waited 30 years for and THREE js is at the center of the UI of the future.\r\nAdding ES6 => functions just duplicates another way for my single function JS parser to have to implement so wasteful again. ","created_at":"2017-12-12T14:29:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-351067236","id":351067236,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDM1MTA2NzIzNg==","updated_at":"2017-12-12T14:29:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/351067236","user":{"following_url":"https:\/\/api.github.com\/users\/MasterJames\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/MasterJames\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1840183?v=4","url":"https:\/\/api.github.com\/users\/MasterJames","gists_url":"https:\/\/api.github.com\/users\/MasterJames\/gists{\/gist_id}","html_url":"https:\/\/github.com\/MasterJames","subscriptions_url":"https:\/\/api.github.com\/users\/MasterJames\/subscriptions","node_id":"MDQ6VXNlcjE4NDAxODM=","repos_url":"https:\/\/api.github.com\/users\/MasterJames\/repos","received_events_url":"https:\/\/api.github.com\/users\/MasterJames\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/MasterJames\/starred{\/owner}{\/repo}","site_admin":false,"login":"MasterJames","type":"User","id":1840183,"followers_url":"https:\/\/api.github.com\/users\/MasterJames\/followers","organizations_url":"https:\/\/api.github.com\/users\/MasterJames\/orgs"}},{"index":6,"author_association":"OWNER","body":"@MasterJames Sorry, TL;DR again. I'm interested on what you have to say, but in the time I'm able to read one of your posts I can merge 10 PRs from other people. Please, try to make your posts shorter.","created_at":"2017-12-12T19:24:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-351164493","id":351164493,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDM1MTE2NDQ5Mw==","updated_at":"2017-12-12T19:24:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/351164493","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":7,"author_association":"OWNER","body":"Also, just like I recently mentioned to @pailhead, I don't think it's nice to revive closed PRs in this way.","created_at":"2017-12-12T19:27:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-351165517","id":351165517,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDM1MTE2NTUxNw==","updated_at":"2017-12-12T19:27:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/351165517","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"\ud83d\ude1f \r\n","created_at":"2017-12-15T06:49:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11558#issuecomment-351927849","id":351927849,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11558","node_id":"MDEyOklzc3VlQ29tbWVudDM1MTkyNzg0OQ==","updated_at":"2017-12-15T06:49:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/351927849","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}