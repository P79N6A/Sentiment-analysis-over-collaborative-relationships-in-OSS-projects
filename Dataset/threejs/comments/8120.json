{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I've written multiple before for OpenGL.  Did you check to see which multi-sample levels are available before setting them?  I think that is necessary for robustness.\n","created_at":"2016-02-12T20:30:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-183477453","id":183477453,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4MzQ3NzQ1Mw==","updated_at":"2016-02-12T20:30:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/183477453","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"@bhouston The spec already checks against MAX_SAMPLES and generates an INVALID_OPERATION error if above threshold. We could add that check for robustness and better error messaging before setting up the render buffer storage, throwing a `new Error` if it's above that value.\n\nI'm not sure how to detect the possible sample levels. Seems like it needs to be power of two and based on the sized internal format of the render buffer.\n\nSee `Table 2.nnn` here:\nhttps:\/\/www.opengl.org\/registry\/specs\/ARB\/framebuffer_object.txt \n","created_at":"2016-02-13T18:39:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-183719468","id":183719468,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4MzcxOTQ2OA==","updated_at":"2016-02-13T18:39:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/183719468","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Ok, FireFox Nightly now supports multisample renderbuffers so we can start testing a bit.\n\nHere is a nice easy reference:\nhttp:\/\/ake.in.th\/2013\/04\/02\/offscreening-and-multisampling-with-opengl\/\n\nNotes:\n- In WebGL2, `glEnable( GL_MULTISAMPLE )` is probably replaced by `{ antialias: true }` context attribute\n- There is no `glTexImage2DMultisample` in WebGL2, I'm not sure if that's a problem\n- You can't just sample a MSAA buffer from a shader, you first have to blit it to a 0-sampled FBO\n- Your MSAA renderbuffer can't have a texture associated with it\n\nThe last two points introduces a bit of architectural changes. I'm not sure how best to implement with ThreeJS codebase, but I'll poke around.\n","created_at":"2016-02-16T17:10:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184776540","id":184776540,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDc3NjU0MA==","updated_at":"2016-02-16T17:10:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184776540","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"@mattdesl This is very nice work you are doing. :)\n\nWhat we did to make our code simple is that we required people to create a texture for our MS render target, just like one creates a texture for non-MS render targets.  But we didn't use it during MS rendering, but we used it as the write (not read) target for the MS render target (the 0-sampled FBO.)  Thus we had a \"commit\"-type function that would read the MS render target to the texture.\n","created_at":"2016-02-16T17:49:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184797482","id":184797482,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDc5NzQ4Mg==","updated_at":"2016-02-16T17:54:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184797482","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"The benefit of the above design is that whether we did MS or non-MS, there was always a texture with the results of the render.  Now we were not rendering to screen, which may introduce more design issues.\n","created_at":"2016-02-16T17:49:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184797667","id":184797667,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDc5NzY2Nw==","updated_at":"2016-02-16T17:55:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184797667","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"@bhouston That's nice, I think I'll do the same.\n\nIt looks like ThreeJS doesn't set up any color buffer render storage, which is needed for MSAA. I can implement a way that it only sets up specific color buffer render storage with MSAA targets, but it seems like it would be simpler to have all render targets specify a color buffer storage.\n","created_at":"2016-02-16T17:55:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184800089","id":184800089,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDgwMDA4OQ==","updated_at":"2016-02-16T17:55:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184800089","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"Hmm the only thing with your approach is that the sample counts need to match.\n\nSay user creates a RenderTarget with samples=4, internally we need two WebGLRenderTargets; one with samples=4 and one with samples=0. Then we \"commit\" (blit) the framebuffers to make it all transparent to the user, so they are just operating on the internal samples=0 target. Is that correct?\n","created_at":"2016-02-16T18:00:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184801648","id":184801648,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDgwMTY0OA==","updated_at":"2016-02-16T18:00:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184801648","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"Yeah, you have the idea I was trying to communicate.\n\nAlso, I'm not saying this is the best idea, it is just what we did.\n\nYou could also make subclass of WebGLRenderTarget that contains the second MSAA one, and has a commit to the first.  This way you can pass the MultiSampleWebGLRenderTarget into the code that uses just a WebGLRenderTarget and it will work.  But that code could detect if it is a MSAA one (such as WebGLRenderer) and use the advanced features, commiting after it is done so that the class is still compatible with everything else.\n","created_at":"2016-02-16T18:06:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184804239","id":184804239,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDgwNDIzOQ==","updated_at":"2016-02-16T18:06:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184804239","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Ok, now it looks like this:\n\n``` js\n    var target = new THREE.WebGLRenderTargetMultisample(window.innerWidth, window.innerHeight);\n    target.texture.minFilter = THREE.LinearFilter;\n    target.texture.format = THREE.RGBFormat;\n    target.texture.generateMipmaps = false;\n    target.stencilBuffer = false;\n    target.depthBuffer = true;\n    target.samples = 8;\n```\n\nIf samples is zero, or if the context is WebGL1, the above has the same behaviour as normal WebGLRenderTarget.\n\nIt uses RGB8 or RGBA8 for internal formats (needs to match the 0-sample texture for blitting), so other ThreeJS texture formats won't work right now.\n\nIt will try to use `min( target.samples, capabilities.maxSamples )` so technically you could set it to `Infinity` if you just want max samples. Instead, maybe we should just pass the exact user value (if > 0) to have WebGL throw errors? Not sure.\n\nThe code changes don't support MSAA cube targets. Maybe another design\/architectural style would be needed for that?\n\nIn FireFox this seems to be working pretty well! I can get up to 8 samples on my late 2013 15\" MBP, and performance is still pretty great. :tada: Chrome is still bugging out, I've pinged Tojiro.\n","created_at":"2016-02-16T20:02:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184855837","id":184855837,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDg1NTgzNw==","updated_at":"2016-02-16T20:02:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184855837","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"> It will try to use min( target.samples, capabilities.maxSamples ) so technically you could set it to Infinity if you just want max samples.\n\nWell, one could add a true\/false as to whether it should fail if it can not be achieved.  I think in most cases one will want to have it use the highest samples it can successfully use, but in other cases, such as offline rendering, it may want to fall back to the manual MSAA pass that I PR'ed the other day.\n","created_at":"2016-02-16T21:30:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184882071","id":184882071,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDg4MjA3MQ==","updated_at":"2016-02-16T21:30:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184882071","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"Another thing that came up has to do with EffectComposer. Chances are you only want the first pass to use MSAA, and the rest should ping-pong two 0-sample targets. I ended up having to change some things in EffectComposer to get this working properly.\n","created_at":"2016-02-16T22:08:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184895387","id":184895387,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDg5NTM4Nw==","updated_at":"2016-02-16T22:08:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184895387","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"It is easy, a pass can do anything if the result is a 0-sample target.  I just created an MSAAPass that did this manually.  Having a real Multisample pass is no different.\n","created_at":"2016-02-17T00:49:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-184947620","id":184947620,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NDk0NzYyMA==","updated_at":"2016-02-17T00:49:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/184947620","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"This seems informative and on topic?\nhttps:\/\/www.cse.ust.hk\/~psander\/docs\/tempcoj.pdf\n\nWhat is the technical name for the method of aliases when a given pixel has samples taken randomly from four surrounding quadrants, and if they are close enough (agreeing) does not sample 4 more in that disagreeing quadrant? Eventually when they are all close enough (to a set limit) an appropriate relative average is made? Is this exclusive to the definition of Raytracing (of which there are many formulas Hanning, blackman, catmull-rom)? is it called Ray Variance?\n\n**So the idea of that here is not a sensible approach?**\n\n_I guess the example is in the middle of a sphere it does less sampling as it's more uniform, while the edge requires more samples. (Another form of the formulas simply called [in Houdini etc.] \"Edge Detection Filter\" comes to mind in this example.)_\n\nIs this what you mean by \"real Multisample pass\"? and again I'm guessing it's not GPU or real-time friendly but it sounds maybe more efficient if possible (on mass in the GPU).\nAnd thanks in general for taking the time\/years to help me understand the threeJS issues (so I'm more useful here in the future), as well as more specifically here (this issue) to grasp where the limits are when dealing with GPU real-time rendering compared with raytracing as it sounds like you're doing a less efficient but similar things.\n\nThe article also talks about using samples over time somehow, but that suggests pixel tracking vectors to my thinking?\n\nThis works well and looks pro and proper (nice job).\n\nFurther I keep thinking about how a helper could scan a scene to ultimately disable quality features, based on (adjustable user\/device preference settings like) framerate (and\/or object distance) and this seems like the perfect thing for dynamically changing based on performance on the specific device. Ironically you maybe need aliasing more at distance, where as geo-detail (and\/or particle count) might work the other way around [similarly like I figure shadow-map res and probably most textures would]. You could even disable shadows entirely for distance objects if you preferred object detail etc.\n","created_at":"2016-02-17T08:00:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-185086274","id":185086274,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NTA4NjI3NA==","updated_at":"2016-02-17T08:00:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/185086274","user":{"following_url":"https:\/\/api.github.com\/users\/MasterJames\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/MasterJames\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1840183?v=4","url":"https:\/\/api.github.com\/users\/MasterJames","gists_url":"https:\/\/api.github.com\/users\/MasterJames\/gists{\/gist_id}","html_url":"https:\/\/github.com\/MasterJames","subscriptions_url":"https:\/\/api.github.com\/users\/MasterJames\/subscriptions","node_id":"MDQ6VXNlcjE4NDAxODM=","repos_url":"https:\/\/api.github.com\/users\/MasterJames\/repos","received_events_url":"https:\/\/api.github.com\/users\/MasterJames\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/MasterJames\/starred{\/owner}{\/repo}","site_admin":false,"login":"MasterJames","type":"User","id":1840183,"followers_url":"https:\/\/api.github.com\/users\/MasterJames\/followers","organizations_url":"https:\/\/api.github.com\/users\/MasterJames\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"I guess this is essential an Effect Composer, Vector based Motion Blur Anti-aliasing proposal (at least to me it seems to be) suggested, I believe by this same article linked to earlier https:\/\/www.cse.ust.hk\/~psander\/docs\/tempcoj.pdf  in my previous message, and am still wondering if I\u2019ll finish reading it myself before writing on it?!\nAfter some grazing on it and thinking, it seemed to me it would be possible that thinking temporally with only a start and end frame within a second, a frame in between can be estimated. This means with an animated spline description of a pixel position over time that is computed from motion tracking vectors, basically used for motion blur as only a frame by frame vector, is instead used to compute a curve. \nhttps:\/\/www.youtube.com\/watch?v=zNiI8hbYbxQ\nIt\u2019s not just \u201cpixel vectors\u201d but you use that to generate a spline which I believe is a good (linear algebra ~ matrix = solve ~ GPU) GPU kind of problem. A probability curve is generated. On average this is smaller as they also work together like voxels, which exhibit physics type properties that also look like a GPU problem.\nWith this probability curve an extra accurate component can be incorporated into an anti-aliasing pipeline. \nIts contribution may not be worth the effort to get the job done. Still I imagine it\u2019s a temporal way of describing a sequence of frames (not just as help with anti-aliasing), so that any client can compute whatever number of frames they want or at least where the detail is needed (at distance is typically) most useful and slow to change.\nNoted: is that we also have the advantage of knowing slightly ahead of time what the animation is already going to be, not only predicatively but in certain cases matter-of-factly, and in real-time that\u2019s probably helpful information. \nUsing the computed vectors of the existing model animation suggests perfect knowledge of this, so ya it\u2019s just adding another way of adding a (temporal) dimension to your anti-aliasing compute on a pixels\/sec level.\n\nThe color itself is also a spline vector.\nFlicker detection equals sample depth.\n","created_at":"2016-02-17T09:52:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-185125298","id":185125298,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NTEyNTI5OA==","updated_at":"2016-02-17T10:50:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/185125298","user":{"following_url":"https:\/\/api.github.com\/users\/MasterJames\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/MasterJames\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1840183?v=4","url":"https:\/\/api.github.com\/users\/MasterJames","gists_url":"https:\/\/api.github.com\/users\/MasterJames\/gists{\/gist_id}","html_url":"https:\/\/github.com\/MasterJames","subscriptions_url":"https:\/\/api.github.com\/users\/MasterJames\/subscriptions","node_id":"MDQ6VXNlcjE4NDAxODM=","repos_url":"https:\/\/api.github.com\/users\/MasterJames\/repos","received_events_url":"https:\/\/api.github.com\/users\/MasterJames\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/MasterJames\/starred{\/owner}{\/repo}","site_admin":false,"login":"MasterJames","type":"User","id":1840183,"followers_url":"https:\/\/api.github.com\/users\/MasterJames\/followers","organizations_url":"https:\/\/api.github.com\/users\/MasterJames\/orgs"}},{"index":14,"author_association":"OWNER","body":"Aesthetics note... Could we name it `WebGLMultisampleRenderTarget` instead? \ud83d\ude07\n","created_at":"2016-02-17T13:27:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-185203848","id":185203848,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NTIwMzg0OA==","updated_at":"2016-02-17T13:27:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/185203848","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"Ok, renamed! :smile:\n\nOutstanding issues:\n- How important is MSAA cube render targets?\n- How should we handle `renderTarget.samples` when it's over the maximum capabilities? Is the current clamp to max approach OK?\n- This needs a demo added to `examples\/`\n","created_at":"2016-02-17T15:23:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-185252188","id":185252188,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NTI1MjE4OA==","updated_at":"2016-02-17T15:23:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/185252188","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"@bhouston I can't seem to figure out how to get a MSAAPass without an extra (unnecessary) pass, since each pass can't modify the read\/write targets of the EffectComposer. e.g.\n\n``` js\nfunction MSAAPass (scene, camera) {\n  this.scene = scene;\n  this.camera = camera;\n  this.enabled = true;\n  this.clear = true;\n  this.needsSwap = false;\n}\n\nMSAAPass.prototype = {\n\n  _updateMultisampleTarget: function (width, height) { ... },\n\n  render: function (renderer, writeBuffer, readBuffer, delta) {\n    \/\/ Lazily create \/ update a WebGLMultisampleRenderTarget\n    this._updateMultisampleTarget(readBuffer.width, readBuffer.height);\n\n    \/\/ ???\n    \/\/ renderer.render(this.scene, this.camera, readBuffer, this.clear);\n  }\n};\n```\n","created_at":"2016-02-17T16:14:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-185277935","id":185277935,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE4NTI3NzkzNQ==","updated_at":"2016-02-17T16:15:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/185277935","user":{"following_url":"https:\/\/api.github.com\/users\/mattdesl\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mattdesl\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1383811?v=4","url":"https:\/\/api.github.com\/users\/mattdesl","gists_url":"https:\/\/api.github.com\/users\/mattdesl\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mattdesl","subscriptions_url":"https:\/\/api.github.com\/users\/mattdesl\/subscriptions","node_id":"MDQ6VXNlcjEzODM4MTE=","repos_url":"https:\/\/api.github.com\/users\/mattdesl\/repos","received_events_url":"https:\/\/api.github.com\/users\/mattdesl\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mattdesl\/starred{\/owner}{\/repo}","site_admin":false,"login":"mattdesl","type":"User","id":1383811,"followers_url":"https:\/\/api.github.com\/users\/mattdesl\/followers","organizations_url":"https:\/\/api.github.com\/users\/mattdesl\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"@mattdesl asked:\n\n> How important is MSAA cube render targets?\n\nI am in favor of the basics first. :)  More features can come later.\n\n> How should we handle renderTarget.samples when it's over the maximum capabilities? Is the current clamp to max approach OK?\n\nYes, we should clamp to max in my opinion.  No crashes.\n\n> This needs a demo added to examples\/\n\nVery much so.   Why not just take my ManualMSAARenderPass example and swap out my code with yours -- you should have similar results but it should be faster. :)\n","created_at":"2016-03-04T21:13:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-192468120","id":192468120,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDE5MjQ2ODEyMA==","updated_at":"2016-03-04T21:13:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/192468120","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":18,"author_association":"OWNER","body":"#9965\n","created_at":"2016-10-29T02:19:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8120#issuecomment-257065310","id":257065310,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8120","node_id":"MDEyOklzc3VlQ29tbWVudDI1NzA2NTMxMA==","updated_at":"2016-10-29T02:19:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/257065310","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}