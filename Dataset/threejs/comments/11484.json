{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"> The parsing of PRWM file is especially fast when the endianness of the file is the same as the endianness of the client platform. \r\n\r\nInteresting. I wonder if there is a better way to handle this. Say, naming the files like this:\r\n\r\n```\r\ncerberus.be.prwm\r\ncerberus.le.prwm\r\n```\r\n\r\nThen, using the loader like `load('cerberus.prwm')` and letting the loader look for `be.pwrn` or `le.prwm` depending of the user's endianness.\r\n\r\n> There's also a `three-buffergeometry-to-prwm` npm module which takes an instance of Three.BufferGeometry as argument and return a PRWM file as an arraybuffer ([online example](http:\/\/www.kchapelier.com\/prwm\/examples\/three-buffergeometry-to-prwm.html)).\r\n\r\nI guess this only outputs a prwm in the user's endianness?\r\n","created_at":"2017-06-14T02:36:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308302853","id":308302853,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODMwMjg1Mw==","updated_at":"2017-06-14T02:36:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308302853","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"> Interesting. I wonder if there is a better way to handle this. Say, naming the files like this:\r\n> ```js \r\n> cerberus.be.prwm\r\n> cerberus.le.prwm\r\n> ```\r\n> Then, using the loader like load('cerberus.prwm') and letting the loader look for be.pwrm or le.prwm depending of the user's endianness.\r\n\r\nI thought about it but I'm not sure this is the way to go.. While this would reduce the number of end points on the API, I think this would make it less \"straightforward\" to use. If possible I'd rather avoid forcing the users to set filenames following a specific format.\r\n\r\nCurrently the loader can load files of any endianness, it's just much faster if it matches your plaftorm's. But in my tests parsing a PRWM file of the \"wrong\" endianness is still slightly faster than parsing an equivalent OBJ model so it should still be allowed. To allow that in this example we'd need to first check if the `cerberus.prwm` file exists, then if we get a 404 try to access `cerberus.le.prwm`, or check for `cerberus.le.prwm` and if it does not exist try to access `cerberus.be.prwm`.\r\n\r\nCurrently, there's a loadBest method with this signature : \r\n\r\n```js\r\nloader.loadBest( urlLittleEndian, urlBigEndian, onLoad, onProgress, onError )\r\n```\r\n\r\nwhich use one or the other depending on the client platform endianness , and for users who'd want to handle that themselves : \r\n\r\n```js\r\nTHREE.PRWMLoader.isBigEndianPlatform()\r\n```\r\n\r\nAnother possibility to simplify the API would be to *optionally* accept an array (with the littleEndian url and the bigEndian url) instead of a string as the first argument of `prwmLoader.load`. Not sure I like methods with \"flexible\" signatures though...\r\n\r\n> > There's also a three-buffergeometry-to-prwm npm module which takes an instance of Three.BufferGeometry as argument and return a PRWM file as an arraybuffer ([online example](http:\/\/www.kchapelier.com\/prwm\/examples\/three-buffergeometry-to-prwm.html)).\r\n> \r\n> I guess this only outputs a prwm in the user's endianness?\r\n\r\nThe example is hardcoded to generate little endian files, but the choice of the endianness is exposed by the actual module API.\r\n\r\n```js\r\nthreeBufferGeometryToPrwm(bufferGeometry, bigEndian);\r\n``` ","created_at":"2017-06-14T07:56:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308351512","id":308351512,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODM1MTUxMg==","updated_at":"2017-06-14T07:58:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308351512","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":2,"author_association":"OWNER","body":"> To allow that in this example we'd need to first check if the `cerberus.prwm` file exists, then if we get a 404 try to access `cerberus.le.prwm`, or check for `cerberus.le.prwm` and if it does not exist try to access `cerberus.be.prwm`.\r\n\r\nActually, what I'm proposing is that, if the user tries to load `cerberus.prwm`, the loader will check `isBigEndianPlatform()` and, depending of the boolean, load `cerberus.be.prwm` or `cerberus.le.prwm`.\r\n\r\nSo, they'll always have to provide 2 files per model, but I think the parse speed is well worth it.","created_at":"2017-06-14T20:30:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308549070","id":308549070,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODU0OTA3MA==","updated_at":"2017-06-14T20:30:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308549070","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":3,"author_association":"OWNER","body":"Maybe this would be clearer:\r\n\r\n```js\r\nloader.load( 'cerberus.*.prwm', function () {} );\r\n```\r\n\r\nThat way the loader just needs to replace `*`.","created_at":"2017-06-14T20:32:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308549547","id":308549547,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODU0OTU0Nw==","updated_at":"2017-06-14T23:33:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308549547","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"Yes good idea, this is is more straightforward and allow to bypass the filename change by not using `*`. I'll implement those changes tomorrow.","created_at":"2017-06-14T22:35:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308577407","id":308577407,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODU3NzQwNw==","updated_at":"2017-06-14T22:35:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308577407","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"The change discussed above has been implemented, the `loadBest` method removed and the example adapted. `THREE.PRWMLoader.isBigEndianPlatform()` is still exposed in case someone want to do a wrapper for the loader for some reason.","created_at":"2017-06-15T14:28:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308750426","id":308750426,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODc1MDQyNg==","updated_at":"2017-06-15T14:28:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308750426","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":6,"author_association":"OWNER","body":"Thanks!","created_at":"2017-06-15T14:36:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308752746","id":308752746,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODc1Mjc0Ng==","updated_at":"2017-06-15T14:36:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308752746","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":7,"author_association":"OWNER","body":"While talking about this PR with @spite, he raised an valid question: Are there any big-endian platforms that run WebGL?","created_at":"2017-06-15T21:45:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308874465","id":308874465,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODg3NDQ2NQ==","updated_at":"2017-06-15T21:45:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308874465","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"> While talking about this PR with @spite, he raised an valid question: Are there any big-endian platforms that run WebGL?\r\n\r\nThat's hard to say to be honest. My researches lead me to think that exotic big-endian android devices and custom big-endian *nix box might exist in the wild due to the bi-endianness of arm\/aarch64 CPUs (even though they're *typically* set to little-endian), but it's hard to find conclusive evidence of this. Especially relative to support for WebGL.","created_at":"2017-06-16T06:25:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308944097","id":308944097,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODk0NDA5Nw==","updated_at":"2017-06-16T06:28:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308944097","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":9,"author_association":"OWNER","body":"I'll ask around tomorrow, but it's tempting to simplify it even more and simplify it to just little-endian...","created_at":"2017-06-16T06:43:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/11484#issuecomment-308946924","id":308946924,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11484","node_id":"MDEyOklzc3VlQ29tbWVudDMwODk0NjkyNA==","updated_at":"2017-06-16T06:43:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/308946924","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}