{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"1. Does this optimization work fine even with `.groups`?\r\n\r\n2. Just my preference tho, `BufferGeometryUtils` would be a better place to add these methods?","created_at":"2018-05-23T08:26:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391264022","id":391264022,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTI2NDAyMg==","updated_at":"2018-05-23T08:26:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391264022","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"> 1. Does this optimization work fine even with `.groups`?\r\n\r\nIt does not! Thanks for catching that. I'll rework it so each group is optimized independently. I suppose one of the complexities is that groups can have overlapping draw indices, right? If that's the case I'll probably just print a warning and not optimize.\r\n\r\n> 2. Just my preference tho, `BufferGeometryUtils` would be a better place to add these methods?\r\n\r\nI didn't realize that was there! I think `getMemoryUse` definitely belongs there, but the triangle optimization pairs nicely with the `toNonIndexed` function, which is in `BufferGeometry`.\r\n\r\nThanks @takahirox!","created_at":"2018-05-23T15:49:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391398138","id":391398138,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTM5ODEzOA==","updated_at":"2018-05-23T15:49:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391398138","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"> I suppose one of the complexities is that groups can have overlapping draw indices, right\r\n\r\nI think so.\r\n\r\n> If that's the case I'll probably just print a warning and not optimize.\r\n\r\nPerhaps it sounds reasonable. Good start.","created_at":"2018-05-23T16:01:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391402226","id":391402226,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTQwMjIyNg==","updated_at":"2018-05-23T16:01:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391402226","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"To summarize, you provide a method that will convert non-indexed \"triangle soup\" to indexed `BufferGeometry` that shares vertices when possible, reducing the memory footprint.\r\n\r\nThis is akin to `Geometry.mergeVertices()`, and requires that the user specify a `precision` value, which is used for comparing floats.\r\n\r\nDoes this PR work for interleaved BufferAttrbutes?\r\n","created_at":"2018-05-23T16:54:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391421776","id":391421776,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTQyMTc3Ng==","updated_at":"2018-05-23T16:54:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391421776","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"> To summarize, you provide a method that will convert non-indexed \"triangle soup\" to indexed BufferGeometry that shares vertices when possible, reducing the memory footprint.\r\n\r\nThat's right, but in this case it's using every attribute in the hash to make sure they're all the same before merging the vertices.\r\n\r\n> This is akin to Geometry.mergeVertices(), and requires that the user specify a precision value, which is used for comparing floats.\r\n\r\nI hadn't seen that function, but yeah! A precision value isn't required here -- it's optional and defaults to 3. Maybe it makes more sense for the function to be called `mergeVertices` so it's consistent with `Geometry`?\r\n\r\nWould it make sense to expose precision as an option for `Geometry.mergeVertices`, as well?\r\n\r\n> Does this PR work for interleaved BufferAttrbutes?\r\n\r\nIt doesn't. I hadn't encountered those before -- I can take a look at what it would take to support that. Is it okay if the process of merging vertices de-interleaves the attributes?\r\n\r\nThanks!","created_at":"2018-05-23T20:50:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391491872","id":391491872,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTQ5MTg3Mg==","updated_at":"2018-05-23T20:50:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391491872","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":">That's right, but in this case it's using every attribute in the hash to make sure they're all the same before merging the vertices.\r\n\r\nOf course. That is required for `BufferGeometry`. I think the attributes should be exactly the same to justify merging them.\r\n\r\n> A precision value isn't required here -- it's optional and defaults to 3\r\n\r\nNo, a precision value is required. It has a default value of 3.\r\n\r\n> Maybe it makes more sense for the function to be called mergeVertices() so it's consistent with Geometry?\r\n\r\nThat was my thinking, too.\r\n\r\n>  Is it okay if the process of merging vertices de-interleaves the attributes?\r\n\r\nProbably not.\r\n\r\n> Would it make sense to expose precision as an option for Geometry.mergeVertices, as well?\r\n\r\nIt would make sense. There has been no demand for that, though.\r\n\r\n","created_at":"2018-05-23T21:01:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391494869","id":391494869,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTQ5NDg2OQ==","updated_at":"2018-05-23T21:01:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391494869","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"> No, a precision value is required. It has a default value of 3.\r\n\r\nHa, fair enough.\r\n\r\n> > Is it okay if the process of merging vertices de-interleaves the attributes?\r\n>\r\n> Probably not.\r\n\r\nI'll think about that a little more, then.\r\n\r\nIt also just occurred to me that a BufferAttribute can be shared across multiple pieces of geometry in the scene, so modifying them in place probably isn't okay (as I am here), is that right? It seems like the function should be creating and setting _new_ BufferAttributes, right?","created_at":"2018-05-23T21:16:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391499273","id":391499273,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTQ5OTI3Mw==","updated_at":"2018-05-23T21:16:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391499273","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"`Geometry` will be deprecated at some point -- or at least will no longer be renderable -- so converting `Geometry` to `BufferGeometry` (\"triangle soup\") will no longer be so much of an issue.\r\n\r\nWhere I think this PR may be useful is in merging (sharing) vertices. I do not think reducing the footprint is that big of a deal.\r\n\r\nThere will be limits to the use cases for with your approach will work. You will have to determine that yourself. :)\r\n\r\nIn the end, it remains to be seen if this PR is \"useful enough\".","created_at":"2018-05-23T21:30:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391502816","id":391502816,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTUwMjgxNg==","updated_at":"2018-05-23T21:30:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391502816","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"> `Geometry` will be deprecated at some point -- or at least will no longer be renderable -- so converting `Geometry` to `BufferGeometry` (\"triangle soup\") will no longer be so much of an issue.\r\n\r\nThat's good to know! I was kind of wondering if that was going to happen. Is there a roadmap or anything documenting some of the future plans for the library? I don't see anything in the wiki or docs.\r\n\r\n> Where I think this PR may be useful is in merging (sharing) vertices. I do not think reducing the footprint is that big of a deal.\r\n>...\r\n>In the end, it remains to be seen if this PR is \"useful enough\".\r\n\r\nI recognize that my use cases aren't necessarily common ones. I do feel that minimizing the memory footprint before exporting a model to a file is more generally useful, especially when the intent is to load that back to the web.\r\n\r\nI'd included the function in BufferGeometry because it seemed like a natural fit along with \"toNonIndexed\". If the consensus is that this belongs somewhere else then I'll gladly move it! I'm just here to contribute work I'm doing otherwise to a broader community who can hopefully benefit. On that topic, is there any documentation on vision or what does or doesn't belong in the core library? Or is it more community driven?\r\n\r\nAnd finally, here are some of the changes and updates I've made:\r\n\r\n### Changes\r\n- Merging geometry actually _does_ work with overlapping and non overlapping groups\r\n- Function renamed to `mergeVertices`\r\n- Function creates new `BufferAttributes` so as to not mess with other geometry that may also be using them.\r\n- Merging vertices now works with `InterleavedBufferAttributes`, but de-interleaves them in the process. I'll need a bit more time to think about a clean way to handle that if it's critical that it not de-interleave.\r\n- Added `interleaveAttributes` to `BufferGeometryUtils` to make an interleaved attribute from an array of attributes\r\n- Added `getMemoryUse` to `BufferGeometryUtils`\r\n- Added `copy`, `clone`, and modified the clone for `BufferGeometry` because it was failing to clone when interleaved buffers were used\r\n- Updated [demo](https:\/\/gkjohnson.github.io\/threejs-optimize-triangle-indices\/example.html) to show the changes","created_at":"2018-05-24T05:03:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391589121","id":391589121,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTU4OTEyMQ==","updated_at":"2018-05-24T05:03:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391589121","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"I have a coupld of late API change requests.\r\n\r\n`precision` is not an easy to use concept as it has no intuitive default. I recommend changing this to `error` or `tolerance` instead, when `error === 0` it will basically do nothing, when `error === 0.001` it will work the same way as `precision === 3` (if i understand the current logic correctly). So when i use the API i can supply `0` to have nothing done - this is a handy convention. Also, precision parameter affords more control over deduping behaviour (wider range of values, not just `0-X`) and it allows working with very large models, where one might want to set `precision` to a value greater than `1`.\r\n\r\nI recommend changing name `getMemoryUse`. First of all, I suggest using word `compute` instead of `get` as it conveys more than retrieval. Second, I recommend `BuffersByteSize` instead of `MemoryUse`. I.e. `computeBuffersByteSize` - it's a bit less intuitive, but more explicit in terms of conveying expectations on returned value. Alternatives:  `BuffersBytesUsed` or `Attributes` instead of `Buffers`, however, I feel that `Buffers` is more clear and generic at the same time.\r\n\r\n","created_at":"2018-05-24T09:03:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-391643078","id":391643078,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTY0MzA3OA==","updated_at":"2018-05-24T09:03:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391643078","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"@Usnul Sorry I missed these comments.\r\n\r\nI can see the argument for using `error` rather than `precision`. Let me look into the right way to implement that approach. I'll also consider the name change for the memory function.\r\n\r\nI was also looking back at the memory use function and realized that it probably _won't_ work with interleaved attributes, so I'll fix that, as well.\r\n\r\nThanks!","created_at":"2018-06-20T02:23:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-398603627","id":398603627,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODYwMzYyNw==","updated_at":"2018-06-20T02:23:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398603627","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"I've update the PR, again! If this all looks good I can add documentation for the function to the BufferGeometry docs page!\r\n\r\n### Changes\r\n\r\n- Rename `BufferGeometryUtils.getMemoryUse` to `BufferGeometryUtils.estimateBytesUsed`\r\n- Fix `estimateBytesUsed` function to work with interleaved buffers\r\n- Update the `mergeVertices` function to take a `tolerance` variable rather than `precision`","created_at":"2018-06-22T14:55:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-399470801","id":399470801,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDM5OTQ3MDgwMQ==","updated_at":"2018-06-22T14:55:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/399470801","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":12,"author_association":"COLLABORATOR","body":"This PR was helpful to me for reducing the size of files when converting an old Geometry example (`sittingBox.js`) to glTF using GLTFExporter. By default the conversion from Geometry to BufferGeometry drops indices and increases file size 5x, and the mergeVertices function here brought that back down. One suggestion, though, would be to preserve morphAttributes throughout the merge:\r\n\r\nhttps:\/\/gist.github.com\/donmccurdy\/bf17af7acfcdd5ebc57da1200e7b1e46","created_at":"2018-08-20T00:34:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414167533","id":414167533,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDE2NzUzMw==","updated_at":"2018-08-20T00:34:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414167533","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"Thanks @donmccurdy! I've added your changes and am trying to test it but I'm having a hard time getting the `sittingBox.js` model to animate as a `BufferGeometry`.  The `morphAttributes` are filled out but the animation from geometry doesn't seem to be working. Is there another step to converting a morphTarget animated geometry to bufferGeometry?\r\n\r\nThanks!","created_at":"2018-08-20T03:03:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414184798","id":414184798,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDE4NDc5OA==","updated_at":"2018-08-20T03:03:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414184798","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"Hm, this is the code I'm using to convert:\r\n\r\n```js\r\nif ( ! geometry.isBufferGeometry ) {\r\n\r\n\tvar geometryTemp = new THREE.BufferGeometry();\r\n\tgeometryTemp.fromGeometry( geometry );\r\n\r\n\t\/\/ Conversion adds unwanted attributes to the geometry. Remove them.\r\n\tgeometryTemp.removeAttribute( 'normal' );\r\n\tif ( geometry.colors.length === 0 ) geometryTemp.removeAttribute( 'color' );\r\n\r\n\tif ( THREE.BufferGeometryUtils ) {\r\n\r\n\t\tTHREE.BufferGeometryUtils.mergeVertices.apply( geometryTemp );\r\n\r\n\t}\r\n\r\n\tgeometry = geometryTemp;\r\n\r\n}\r\n```\r\n\r\nNothing specific for the morphTargets there, so I'm not sure why they wouldn't be working. I actually wrote that diff against [your code here](https:\/\/github.com\/gkjohnson\/threejs-sandbox\/blob\/master\/mergeVertices\/mergeVertices.js), as I hadn't seen this PR, so perhaps there are some differences?","created_at":"2018-08-20T04:20:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414193393","id":414193393,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDE5MzM5Mw==","updated_at":"2018-08-20T04:20:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414193393","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"This is before merging the indices. Here is an example where the Geometry is animating, but I can't get it to animate once it has been converted to a BufferGeometry:\r\n\r\nhttps:\/\/gkjohnson.github.io\/threejs-sandbox\/mergeVertices\/animated.html\r\n\r\nAnd the relevant conversion code (with your suggested changes):\r\n\r\nhttps:\/\/github.com\/gkjohnson\/threejs-sandbox\/blob\/master\/mergeVertices\/animated.html#L91\r\n\r\n```js\r\nloader.load( '...\/examples\/models\/animated\/sittingBox.js', function( geometry ) {\r\n\r\n    \/\/ ...\r\n\r\n    var bufferGeometry = new THREE.BufferGeometry();\r\n    bufferGeometry.fromGeometry( geometry );\r\n    bufferGeometry.removeAttribute( 'normal' );\r\n    if ( geometry.colors.length === 0 ) bufferGeometry.removeAttribute( 'color' );\r\n\r\n    var bmesh = new THREE.Mesh( bufferGeometry, morphMaterial.clone() );\r\n    buffMixer = new THREE.AnimationMixer( bmesh );\r\n    buffMixer.clipAction( geometry.animations[0] ).setDuration( 10 ).play();\r\n    scene.add( bmesh );\r\n\r\n});\r\n```\r\n\r\nAnd of course the mixer is updated in the render loop. You can see that the BufferGeometry version is static, though. I feel like I'm missing something obvious but I'm not sure what.","created_at":"2018-08-20T05:10:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414198817","id":414198817,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDE5ODgxNw==","updated_at":"2018-08-20T05:10:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414198817","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"@gkjohnson The problem is that the animation tracks specify the morph targets they affect by name, and those names are lost when converting Geometry to BufferGeometry. Compare `geomMixer._actions[0]._propertyBindings` and `buffMixer._actions[0]._propertyBindings` in your example, and you'll see that the `.buffer` property of the latter contains `NaN`. That's hard to fix (_should_ these BufferAttributes take the names of the morph targets, since BufferGeometry names come from the `.morphTargetDictionary` property on the mesh?) so I wouldn't worry about it here. \r\n\r\nApparently the code worked for me because I was converting to BufferGeometry and then exporting\/importing the result with GLTFExporter\/GLTFLoader, which flattens `clip.tracks` into a single track and inherently avoids this whole issue.","created_at":"2018-08-20T07:01:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414216755","id":414216755,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDIxNjc1NQ==","updated_at":"2018-08-20T07:02:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414216755","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"Thanks @donmccurdy! I just pushed the changes that add support for merging the morph attributes and tested that the lengths of the `position` morph attribute arrays are the same as the length of the regular `position` attribute. Unfortunately I still wasn't able to save the GLTF with animations, otherwise I'd be happy to test it there. Here was my process:\r\n\r\n```js\r\nloader.load( '...\/animated\/sittingBox.js', function( geometry ) {\r\n   \r\n   var bufferGeometry = new THREE.BufferGeometry();\r\n    bufferGeometry.fromGeometry( geometry );\r\n    bufferGeometry.removeAttribute( 'normal' );\r\n    if ( geometry.colors.length === 0 ) bufferGeometry.removeAttribute( 'color' );\r\n\r\n    var bmesh = new THREE.Mesh( bufferGeometry, morphMaterial.clone() );\r\n    var gltf = (new THREE.GLTFExporter()).parse( bmesh, { animations: goemetry.animations } );\r\n    \r\n    \/\/ save the file   \r\n\r\n} );\r\n```\r\n\r\nI also realized that technically every morph attribute value should be included in the attribute hash, as well because it could be that two vertices start out near eachother but separate over the course of the animation.\r\n\r\nI notice that the `THREE.Geometry.mergeVertices` doesn't handle morphTargets at all so it's a step up from that, but it's definitely a caveat with this function.\r\n\r\nA slightly related aside -- I've read a few things that sound like `THREE.Geometry` is eventually going to be removed from `THREE`? Is that the case? Is there a timeline for that?\r\n","created_at":"2018-08-21T02:33:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414530012","id":414530012,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDUzMDAxMg==","updated_at":"2018-08-21T02:33:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414530012","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":18,"author_association":"COLLABORATOR","body":">THREE.Geometry is eventually going to be removed from THREE? Is that the case? Is there a timeline for that?\r\n\r\n`THREE.Geometry` will no longer be _renderable_ -- only `BufferGeometry` will be. There is no timeline; it will happen when we are ready.\r\n","created_at":"2018-08-21T03:19:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414536965","id":414536965,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDUzNjk2NQ==","updated_at":"2018-08-21T03:19:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414536965","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":19,"author_association":"COLLABORATOR","body":"> Unfortunately I still wasn't able to save the GLTF with animations, otherwise I'd be happy to test it there.\r\n\r\nSorry yeah, the conversion to glTF depends on new features in GLTFExporter that I haven't submitted a PR for yet. But you should be able to test (without using glTF) with a quick hack:\r\n\r\n```js\r\nbmesh.morphTargetDictionary = mesh.morphTargetDictionary;\r\nfor ( var key in bmesh.morphTargetDictionary ) {\r\n  var index = bmesh.morphTargetDictionary[key];\r\n  bmesh.geometry.morphAttributes.position[+index].name = key;\r\n}\r\n```\r\nThis change fixes your earlier demo (https:\/\/gkjohnson.github.io\/threejs-sandbox\/mergeVertices\/animated.html) for me. It's not really the right way to convert the geometry, but I think it demonstrates your mergeVertices() implementation is correct.","created_at":"2018-08-21T05:01:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-414550362","id":414550362,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNDU1MDM2Mg==","updated_at":"2018-08-21T05:02:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/414550362","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":20,"author_association":"CONTRIBUTOR","body":"Thanks -- I've updated example page to show two a before and after vertices have been merged on the animated BufferGeometry:\r\n\r\nhttps:\/\/gkjohnson.github.io\/threejs-sandbox\/mergeVertices\/animated.html","created_at":"2018-08-23T19:55:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-415550903","id":415550903,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQxNTU1MDkwMw==","updated_at":"2018-08-23T19:55:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/415550903","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"> - [ ] Move `.mergeVertices` to BufferGeometryUtils\r\n\r\nDone. The function now returns a new `BufferGeometry` instance, as well.\r\n\r\n> - [ ] Consider leaving `InterleavedBufferAttribute` clone and copy methods for another PR\r\n\r\nAre you referring to these lines?\r\n\r\n```js\r\nif ( oldAttribute.isInterleavedBufferAttribute ) {\r\n\r\n    attribute = new THREE.BufferAttribute( buffer, oldAttribute.itemSize, oldAttribute.itemSize );\r\n\r\n} else {\r\n\r\n    attribute = geometry.getAttribute( name ).clone();\r\n    attribute.setArray( buffer );\r\n\r\n}\r\n```\r\n\r\nYou mean I should get rid of the special case for the interleaved attributes? I can add a warning log, instead.\r\n\r\nThe other two I'll leave for other PRs, I think. I'll take a look at adding unit tests but the point geometry etc seems more complicated.\r\n\r\nYou can see the new function working in the two examples in my original repo:\r\n\r\nhttps:\/\/gkjohnson.github.io\/threejs-sandbox\/mergeVertices\/\r\nhttps:\/\/gkjohnson.github.io\/threejs-sandbox\/mergeVertices\/animated.html","created_at":"2019-01-09T01:45:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-452541328","id":452541328,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU0MTMyOA==","updated_at":"2019-01-09T01:45:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452541328","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":22,"author_association":"CONTRIBUTOR","body":"This could serve as a unit test: Could you modify the `webgl_physics_volume` example? There are only two minor changes:\r\n\r\n1 - Edit the processGeometry function to this:\r\n```javascript\r\nfunction processGeometry( bufGeometry ) {\r\n\t\/\/ Obtain a indexed BufferGeometry with merged vertices\r\n\tvar indexedBufferGeom = THREE.BufferGeometryUtils.mergeVertices( bufGeometry, 0.0001 );\r\n\t\/\/ Create index arrays mapping the indexed vertices to bufGeometry vertices\r\n\tmapIndices( bufGeometry, indexedBufferGeom );\r\n}\r\n```\r\n2 - Delete the function `createIndexedBufferGeometryFromGeometry`\r\n\r\n\r\nOh, and you will have to include the `BufferGeometryUtils`","created_at":"2019-01-09T01:59:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-452543744","id":452543744,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU0Mzc0NA==","updated_at":"2019-01-09T02:00:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452543744","user":{"following_url":"https:\/\/api.github.com\/users\/yomboprime\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/yomboprime\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/2453652?v=4","url":"https:\/\/api.github.com\/users\/yomboprime","gists_url":"https:\/\/api.github.com\/users\/yomboprime\/gists{\/gist_id}","html_url":"https:\/\/github.com\/yomboprime","subscriptions_url":"https:\/\/api.github.com\/users\/yomboprime\/subscriptions","node_id":"MDQ6VXNlcjI0NTM2NTI=","repos_url":"https:\/\/api.github.com\/users\/yomboprime\/repos","received_events_url":"https:\/\/api.github.com\/users\/yomboprime\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/yomboprime\/starred{\/owner}{\/repo}","site_admin":false,"login":"yomboprime","type":"User","id":2453652,"followers_url":"https:\/\/api.github.com\/users\/yomboprime\/followers","organizations_url":"https:\/\/api.github.com\/users\/yomboprime\/orgs"}},{"index":23,"author_association":"COLLABORATOR","body":"> You mean I should get rid of the special case for the interleaved attributes? I can add a warning log, instead.\r\n\r\nYou've added `.copy()` and `.clone()` methods to the `InterleavedBufferAttribute` class, but then in `mergeVertices` you've specifically avoided calling `clone()` on the interleaved attributes. So it doesn't seem like there's any need to modify `InterleavedBufferAttribute.js` here?","created_at":"2019-01-09T02:02:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-452544367","id":452544367,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU0NDM2Nw==","updated_at":"2019-01-09T02:02:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452544367","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":24,"author_association":"CONTRIBUTOR","body":"> You've added .copy() and .clone() methods to the InterleavedBufferAttribute class, but then in mergeVertices you've specifically avoided calling clone() on the interleaved attributes. So it doesn't seem like there's any need to modify InterleavedBufferAttribute.js here?\r\n\r\nHa, I completely forgot I did that (it's been awhile) -- I've removed it, now.\r\n\r\n> This could serve as a unit test: Could you modify the webgl_physics_volume example? There are only two minor changes:\r\n\r\nThat's not a bad idea. I'll look into doing that in a bit.\r\n\r\nThanks!","created_at":"2019-01-09T02:06:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-452545062","id":452545062,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU0NTA2Mg==","updated_at":"2019-01-09T02:06:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452545062","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":25,"author_association":"CONTRIBUTOR","body":"@donmccurdy @yomboprime \r\n\r\nI've gotten the `webgl_physics_volume` example to work with `mergeVertices`. One caveat is that I needed to create a new geometry with _only_ the position and index attributes so it merged correctly for this use case. Maybe in a future PR an `includeAttributes` or `excludeAttributes` option can be added to the function so only a certain set of attribute data will be used in the hash.\r\n\r\n```js\r\nfunction processGeometry( bufGeometry ) {\r\n\r\n    \/\/ Ony consider the position values when merging the vertices\r\n    var posOnlyBufGeometry = new THREE.BufferGeometry();\r\n    posOnlyBufGeometry.addAttribute( 'position', bufGeometry.getAttribute( 'position' ) );\r\n    posOnlyBufGeometry.setIndex( bufGeometry.getIndex() );\r\n\r\n    \/\/ Merge the vertices so the triangle soup is converted to indexed triangles\r\n    var indexedBufferGeom = THREE.BufferGeometryUtils.mergeVertices( posOnlyBufGeometry );\r\n\r\n    \/\/ Create index arrays mapping the indexed vertices to bufGeometry vertices\r\n    mapIndices( bufGeometry, indexedBufferGeom );\r\n\r\n}\r\n```","created_at":"2019-01-09T18:29:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-452804283","id":452804283,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgwNDI4Mw==","updated_at":"2019-01-09T18:29:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452804283","user":{"following_url":"https:\/\/api.github.com\/users\/gkjohnson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gkjohnson\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/734200?v=4","url":"https:\/\/api.github.com\/users\/gkjohnson","gists_url":"https:\/\/api.github.com\/users\/gkjohnson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gkjohnson","subscriptions_url":"https:\/\/api.github.com\/users\/gkjohnson\/subscriptions","node_id":"MDQ6VXNlcjczNDIwMA==","repos_url":"https:\/\/api.github.com\/users\/gkjohnson\/repos","received_events_url":"https:\/\/api.github.com\/users\/gkjohnson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gkjohnson\/starred{\/owner}{\/repo}","site_admin":false,"login":"gkjohnson","type":"User","id":734200,"followers_url":"https:\/\/api.github.com\/users\/gkjohnson\/followers","organizations_url":"https:\/\/api.github.com\/users\/gkjohnson\/orgs"}},{"index":26,"author_association":"OWNER","body":"Thanks!","created_at":"2019-01-10T23:46:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-453305287","id":453305287,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMwNTI4Nw==","updated_at":"2019-01-10T23:46:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/453305287","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":27,"author_association":"COLLABORATOR","body":"Can you update the docs please?","created_at":"2019-01-11T01:31:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14116#issuecomment-453334907","id":453334907,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14116","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMzNDkwNw==","updated_at":"2019-01-11T01:31:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/453334907","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}}]}