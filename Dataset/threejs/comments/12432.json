{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I've ran into the exact same issue about a year back - creating many (a couple of 100,000) individual buffer geometries then merging them for rendering. The biggest bottleneck was the UUID function. \r\n\r\nIs there a reason we need such a complex UUID in the first place rather than just a simple incrementing ID? An incrementing ID can also guarantee uniqueness, at least within a single app. ","created_at":"2017-10-18T13:39:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337593524","id":337593524,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU5MzUyNA==","updated_at":"2017-10-18T13:39:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337593524","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Having a pluggable id generator would be nice. Generating a spec complaint non-random UUID might also be possible. Lastly, it might be worth it to make id generation lazy.","created_at":"2017-10-18T15:39:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337633673","id":337633673,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzYzMzY3Mw==","updated_at":"2017-10-18T15:39:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337633673","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Personally I prefer having only one uuid generating function because it's much simpler.\r\nHaving alternative\/pluggable generator could cause problems, especially it generates non-unique id, when objects go across multiple apps.\r\n\r\nSo, I prefer simply optimizing uuid generator (or replacing with faster one).\r\nI'm trying optimization and achieved 2x performance on my Chrome by replacing `.join` with string concatenation, but it makes a bit slower on FireFox nightly.\r\n\r\nI'll try some other optimizations and share the result later...\r\n","created_at":"2017-10-18T16:00:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337640531","id":337640531,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzY0MDUzMQ==","updated_at":"2017-10-18T16:00:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337640531","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":3,"author_association":"NONE","body":"Optimizing the existing generator could certainly be a good idea, but if we stick to the UUID format it only goes so far. We'll require all those characters and somehow assembling them into a string, which are sadly slow operations in JS (trying concatenation was also my first bet when I met this problem a few months ago, it did not change performance in my tests in then-current Chrome).\r\n\r\nBut even if the UUID format is kept and generation remains slow (if somewhat faster), I do like the idea to make it lazy (as in only do the actual generation when a UUID is to be used), so all those use cases which don't require UUIDs but use lots of objects will become automatically faster.","created_at":"2017-10-18T17:12:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337661655","id":337661655,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzY2MTY1NQ==","updated_at":"2017-10-18T17:12:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337661655","user":{"following_url":"https:\/\/api.github.com\/users\/nkrisztian89\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/nkrisztian89\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/540568?v=4","url":"https:\/\/api.github.com\/users\/nkrisztian89","gists_url":"https:\/\/api.github.com\/users\/nkrisztian89\/gists{\/gist_id}","html_url":"https:\/\/github.com\/nkrisztian89","subscriptions_url":"https:\/\/api.github.com\/users\/nkrisztian89\/subscriptions","node_id":"MDQ6VXNlcjU0MDU2OA==","repos_url":"https:\/\/api.github.com\/users\/nkrisztian89\/repos","received_events_url":"https:\/\/api.github.com\/users\/nkrisztian89\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/nkrisztian89\/starred{\/owner}{\/repo}","site_admin":false,"login":"nkrisztian89","type":"User","id":540568,"followers_url":"https:\/\/api.github.com\/users\/nkrisztian89\/followers","organizations_url":"https:\/\/api.github.com\/users\/nkrisztian89\/orgs"}},{"index":4,"author_association":"OWNER","body":"I vote for trying to optimise the current code.\r\n\r\nOtherwise, it would have to look something like this:\r\n\r\n```js\r\nObject.defineProperties( Object3D.prototype, {\r\n\t_uuid: {\r\n\t\tvalue: undefined,\r\n\t},\r\n\tuuid: {\r\n\t\tget: function () {\r\n\t\t\tif ( this._uuid === undefined ) {\r\n\t\t\t\tthis._uuid = _Math.generateUUID();\r\n\t\t\t}\r\n\t\t\treturn this._uuid;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tthis._uuid = value;\r\n\t\t}\r\n\t}\r\n} );\r\n```","created_at":"2017-10-18T17:29:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337666302","id":337666302,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzY2NjMwMg==","updated_at":"2017-10-18T17:29:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337666302","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"I think Lazy UUID generation is a good approach to solve this issue. Then I made PR #12437.\r\n\r\nI still think optimizing UUID generation is also worth even if we merge laze UUID generation.\r\nI'll share my evaluation later.","created_at":"2017-10-19T14:53:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337933626","id":337933626,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzkzMzYyNg==","updated_at":"2017-10-19T15:28:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337933626","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"Sir. Doob, there is another option. Rewrite the property of the object after generation. Though that is not very fast in my experience.","created_at":"2017-10-19T15:20:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-337942013","id":337942013,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzNzk0MjAxMw==","updated_at":"2017-10-19T15:20:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/337942013","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":" @takahirox I dont think lazy generation its a good solution i would prefer to move to a more simple generator keeping the same ######-####-####-####-###### structure.\r\n\r\nOr better lets make it lazy but still update it to be faster ","created_at":"2017-10-19T19:15:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338009049","id":338009049,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODAwOTA0OQ==","updated_at":"2017-10-19T19:16:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338009049","user":{"following_url":"https:\/\/api.github.com\/users\/tentone\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tentone\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/9158354?v=4","url":"https:\/\/api.github.com\/users\/tentone","gists_url":"https:\/\/api.github.com\/users\/tentone\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tentone","subscriptions_url":"https:\/\/api.github.com\/users\/tentone\/subscriptions","node_id":"MDQ6VXNlcjkxNTgzNTQ=","repos_url":"https:\/\/api.github.com\/users\/tentone\/repos","received_events_url":"https:\/\/api.github.com\/users\/tentone\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tentone\/starred{\/owner}{\/repo}","site_admin":false,"login":"tentone","type":"User","id":9158354,"followers_url":"https:\/\/api.github.com\/users\/tentone\/followers","organizations_url":"https:\/\/api.github.com\/users\/tentone\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"This is what i have come up with, the existing one is already really good, nice work @mrdoob.\r\n\r\n20~40% improvement in both firefox and chrome.\r\n\r\n```\r\nvar chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\r\nvar uuid = \"------------------------------------\".split(\"\");\r\n\r\nfunction generateUUID()\r\n{\r\n\tvar rnd = Math.random() * 0xffffffff;\r\n\r\n\tfor(var i = 0; i < 36; i++)\r\n\t{\t\r\n\t\tif(i === 8 || i === 13 || i === 18 || i === 23)\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\trnd >>= 1;\r\n\t\tuuid[i] = chars[rnd & 0xf];\r\n\t}\r\n\r\n\treturn uuid.join(\"\");\r\n}\r\n```","created_at":"2017-10-19T20:20:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338026379","id":338026379,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODAyNjM3OQ==","updated_at":"2017-10-19T21:43:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338026379","user":{"following_url":"https:\/\/api.github.com\/users\/tentone\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tentone\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/9158354?v=4","url":"https:\/\/api.github.com\/users\/tentone","gists_url":"https:\/\/api.github.com\/users\/tentone\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tentone","subscriptions_url":"https:\/\/api.github.com\/users\/tentone\/subscriptions","node_id":"MDQ6VXNlcjkxNTgzNTQ=","repos_url":"https:\/\/api.github.com\/users\/tentone\/repos","received_events_url":"https:\/\/api.github.com\/users\/tentone\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tentone\/starred{\/owner}{\/repo}","site_admin":false,"login":"tentone","type":"User","id":9158354,"followers_url":"https:\/\/api.github.com\/users\/tentone\/followers","organizations_url":"https:\/\/api.github.com\/users\/tentone\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"@tentone Be wary that this id generation algorithm tends to generate more collisions than the original code. On my computer on Chrome for 1.000.000 ids generated there are more than 100 collisions, where the current algorithms generates none.\r\n\r\n```js\r\n\/\/ simple collision tester\r\nvar o = {};\r\nvar num = 1000000;\r\nfor (var i = 0; i < num; i++) {\r\n  o[generateUUID()] = true;\r\n}\r\nconsole.log(num - Object.keys(o).length, 'collisions');\r\n```","created_at":"2017-10-19T21:36:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338045025","id":338045025,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA0NTAyNQ==","updated_at":"2017-10-19T21:37:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338045025","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"@kchapelier Just noticed that wasnt supposed to happen this should have same number as collisions as using the Math.random() method by itself.\r\n\r\nI was experimenting and noticed that for high values by shifting 0 we can actually change the value for some reason, hmmm\r\n\r\nEDIT: Shifts in JS are 32bit only http:\/\/ecma-international.org\/ecma-262\/5.1\/#sec-11.7.1","created_at":"2017-10-19T21:58:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338049855","id":338049855,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA0OTg1NQ==","updated_at":"2017-10-19T22:02:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338049855","user":{"following_url":"https:\/\/api.github.com\/users\/tentone\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tentone\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/9158354?v=4","url":"https:\/\/api.github.com\/users\/tentone","gists_url":"https:\/\/api.github.com\/users\/tentone\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tentone","subscriptions_url":"https:\/\/api.github.com\/users\/tentone\/subscriptions","node_id":"MDQ6VXNlcjkxNTgzNTQ=","repos_url":"https:\/\/api.github.com\/users\/tentone\/repos","received_events_url":"https:\/\/api.github.com\/users\/tentone\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tentone\/starred{\/owner}{\/repo}","site_admin":false,"login":"tentone","type":"User","id":9158354,"followers_url":"https:\/\/api.github.com\/users\/tentone\/followers","organizations_url":"https:\/\/api.github.com\/users\/tentone\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"Why lazy generation isn't good?\r\n\r\n> Or better lets make it lazy but still update it to be faster\r\n\r\nThis's what I mentioned","created_at":"2017-10-19T22:33:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338056542","id":338056542,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA1NjU0Mg==","updated_at":"2017-10-19T22:36:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338056542","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":12,"author_association":"OWNER","body":"Just adding here @kchapelier [optimisation](https:\/\/gist.github.com\/kchapelier\/e630c36f984079850ae930fd56daa064)...\r\n\r\n```js\r\nfunction () {\r\n\r\n\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\tvar uuid = new Array( 31 );\r\n\tvar rnd = 0, r;\r\n\r\n\treturn function generateUUID() {\r\n\r\n\t\tfor ( var i = 0; i < 31; i ++ ) {\r\n\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\tr = rnd & 0xf;\r\n\t\t\trnd = rnd >> 4;\r\n\t\t\tuuid[ i ] = chars[ ( i === 15 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\t}\r\n\r\n\t\treturn uuid.join( '' );\r\n\r\n\t};\r\n\r\n}()\r\n```","created_at":"2017-10-19T22:36:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338057141","id":338057141,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA1NzE0MQ==","updated_at":"2017-10-19T22:36:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338057141","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"@takahirox Sorry, i meant to say that it is a good aproach we avoid generating unnecessary uuids but also wanted so optimize the generator","created_at":"2017-10-19T22:43:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338058307","id":338058307,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA1ODMwNw==","updated_at":"2017-10-19T22:43:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338058307","user":{"following_url":"https:\/\/api.github.com\/users\/tentone\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tentone\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/9158354?v=4","url":"https:\/\/api.github.com\/users\/tentone","gists_url":"https:\/\/api.github.com\/users\/tentone\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tentone","subscriptions_url":"https:\/\/api.github.com\/users\/tentone\/subscriptions","node_id":"MDQ6VXNlcjkxNTgzNTQ=","repos_url":"https:\/\/api.github.com\/users\/tentone\/repos","received_events_url":"https:\/\/api.github.com\/users\/tentone\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tentone\/starred{\/owner}{\/repo}","site_admin":false,"login":"tentone","type":"User","id":9158354,"followers_url":"https:\/\/api.github.com\/users\/tentone\/followers","organizations_url":"https:\/\/api.github.com\/users\/tentone\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"So, let me share my optimization (including @kchapelier approach) here\r\n\r\n```js\r\nvar _Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t\/\/ http:\/\/www.broofa.com\/Tools\/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function generateUUID() {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgenerateUUID2: function () {\r\n\r\n\t\t\/\/ Replace .join with string concatenation\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function generateUUID2() {\r\n\r\n\t\t\tvar uuid = '';\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid += '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid += '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid += chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgenerateUUID3: function () {\r\n\r\n\t\t\/\/ String concatenation each 2 characters\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\tvar table = [];\r\n\r\n\t\tfor ( var i = 0; i < 256; i ++ ) {\r\n\r\n\t\t\ttable[ i ] = chars[ i >> 4 ] + chars[ i & 0xF ];\r\n\r\n\t\t}\r\n\r\n\t\tvar flags = [\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse,\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse,\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse,\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse,\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse, true, false, true,\r\n\t\t\tfalse, true, false, true\r\n\t\t];\r\n\r\n\t\treturn function generateUUID3() {\r\n\r\n\t\t\tvar uuid = '';\r\n\t\t\tvar tmp = 0;\r\n\t\t\tvar value = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid += '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\ttmp = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\r\n\t\t\t\t\tvalue = ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r;\r\n\r\n\t\t\t\t\tif ( flags[ i ] === true ) {\r\n\r\n\t\t\t\t\t\tuuid += table[ ( tmp << 4 ) | value ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttmp = value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgenerateUUID4: function () {\r\n\r\n\t\t\/\/ String concatenation each 2 characters including '-'\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\tvar table = [];\r\n\r\n\t\tfor ( var i = 0; i < 289; i ++ ) {\r\n\r\n\t\t\tvar index1 = ( i \/ 17 ) | 0;\r\n\t\t\tvar index2 = i % 17;\r\n\t\t\tvar c1 = index1 === 16 ? '-' : chars[ index1 ];\r\n\t\t\tvar c2 = index2 === 16 ? '-' : chars[ index2 ];\r\n\t\t\ttable[ i ] = c1 + c2;\r\n\r\n\t\t}\r\n\r\n\t\treturn function generateUUID4() {\r\n\r\n\t\t\tvar uuid = '';\r\n\t\t\tvar tmp = 0;\r\n\t\t\tvar value = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tvalue = 16;\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tvalue = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\r\n\t\t\t\t\tvalue = ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ( i % 2 ) === 0 ) {\r\n\r\n\t\t\t\t\ttmp = value;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuuid += table[ ( tmp * 17 ) + value ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgenerateUUID5: function () {\r\n\r\n\t\t\/\/ Remove hardcode characters (@kchapelier 's idea)\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 31 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function generateUUID5 () {\r\n\r\n\t\t\tfor ( var i = 0; i < 31; i ++ ) {\r\n\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\tuuid[ i ] = chars[ ( i === 15 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgenerateUUID6: function () {\r\n\r\n\t\t\/\/ Remove hardcode characters from generateUUID4\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\tvar table = [];\r\n\r\n\t\tfor ( var i = 0; i < 256; i ++ ) {\r\n\r\n\t\t\ttable[ i ] = chars[ i >> 4 ] + chars[ i & 0xF ];\r\n\r\n\t\t}\r\n\r\n\t\treturn function generateUUID6() {\r\n\r\n\t\t\tvar uuid = '';\r\n\t\t\tvar tmp = 0;\r\n\t\t\tvar value = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 31; i ++ ) {\r\n\r\n\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\tvalue = ( i === 15 ) ? ( r & 0x3 ) | 0x8 : r;\r\n\r\n\t\t\t\tif ( ( i % 2 ) === 0 ) {\r\n\r\n\t\t\t\t\ttmp = value;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuuid += table[ ( tmp << 4 ) | value ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuuid += chars[ tmp ];\r\n\r\n\t\t\treturn uuid;\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n};\r\n\r\nfunction run( func ) {\r\n\r\n\tvar loop = 0x100000;\r\n\r\n\tvar startTime = performance.now();\r\n\r\n\tfor ( var i = 0; i < loop; i ++ ) {\r\n\r\n\t\tfunc();\r\n\r\n\t}\r\n\r\n\tvar endTime = performance.now();\r\n\r\n\tconsole.log( ( endTime - startTime ).toFixed( 2 ) + 'ms, loop=' + loop );\r\n\r\n}\r\n\r\nrun(_Math.generateUUID);\r\nrun(_Math.generateUUID);\r\nrun(_Math.generateUUID2);\r\nrun(_Math.generateUUID2);\r\nrun(_Math.generateUUID3);\r\nrun(_Math.generateUUID3);\r\nrun(_Math.generateUUID4);\r\nrun(_Math.generateUUID4);\r\nrun(_Math.generateUUID5);\r\nrun(_Math.generateUUID5);\r\nrun(_Math.generateUUID6);\r\nrun(_Math.generateUUID6);\r\n```\r\n\r\nI don't change the randomness.\r\n\r\nOn my Windows10 + Chrome, `generateUUID4` optimization makes 3x faster.\r\nBut just 1.12x improvement on my FireFox Nightly.\r\n\r\nI'll explain more detail later.\r\nI just woke up now and it's breakfast time!\r\n","created_at":"2017-10-19T22:52:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338059896","id":338059896,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA1OTg5Ng==","updated_at":"2017-10-19T23:25:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338059896","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@takahirox Impressive !\r\n\r\n~By removing the hardcoded formatting on the `generateUUID4` we can make it slightly faster (16% on Chrome). See `generateUUID4b` here : https:\/\/gist.github.com\/kchapelier\/73e85552b08f6d31ba8bba4c7ab87c28~","created_at":"2017-10-19T23:16:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338063692","id":338063692,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA2MzY5Mg==","updated_at":"2017-10-19T23:31:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338063692","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"That's `generateUUID6`","created_at":"2017-10-19T23:18:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338064049","id":338064049,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA2NDA0OQ==","updated_at":"2017-10-19T23:18:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338064049","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"@takahirox Ah, you are right. ~There is a bug in `generateUUID6 ` which made it underperformed (`temp * 17` which made out of bounds access in the table array).~ Scratch that,\u00a0I was testing the previous version.","created_at":"2017-10-19T23:24:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338064902","id":338064902,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA2NDkwMg==","updated_at":"2017-10-19T23:27:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338064902","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":18,"author_association":"COLLABORATOR","body":"Yup, I was aware of that and fixed.","created_at":"2017-10-19T23:27:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338065333","id":338065333,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA2NTMzMw==","updated_at":"2017-10-19T23:27:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338065333","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":19,"author_association":"COLLABORATOR","body":"I tried three techniques\r\n\r\n1. Replacing `.join` with String concatenation\r\n1. String concatenation each 2 characters\r\n1. Removing hardcoded characters (@kchapelier 's idea)\r\n\r\n| Function |Chrome|FireFox Nightly|\r\n|--|--|--|\r\n|1. (`generateUUID2`) | x1.73 | x0.66 |\r\n|1. + 2. (`generateUUID4`) | x2.82 | x1.00 |\r\n|1. + 2. + 3. (`generateUUID6`) | x3.28 | x1.09 |\r\n\r\nThe table shows the performance gain from the original `generateUUID` on my Windows10. (greater than x1.0 stands for faster, smaller than x1.0 stands for slower)\r\n\r\nIn general, String concatenation is faster than `.join`. For Chrome, only 1. could be good enough. 1. improves the performance roughly x1.7. But it somehow slow the performance on FireFox Nightly.\r\n\r\nIt's very weird, String concatenation itself is much faster than `.join` even on FireFox Nightly https:\/\/jsperf.com\/concat-vs-plus-vs-join The FireFox JavaScript engine doesn't optimize the code well?\r\n\r\nThen I also tried 2. and 3. Applying them improves the performance roughly 3x on Chrome and doesn't worse the performance on FireFox Nightly.\r\n\r\nAnd seems like `Math.random()` is one of time consuming part, especially on FireFix. Replacing it with faster random generate could be another option.\r\n\r\nI'd be pleased if you share the performance number in different environment, especially Mac.","created_at":"2017-10-20T02:55:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338092292","id":338092292,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA5MjI5Mg==","updated_at":"2017-10-20T08:36:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338092292","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":20,"author_association":"COLLABORATOR","body":"@nkrisztian89 Can you mention how much faster `generateUUID` should be to solve the problem you faced? You said you tried String concatenation, so x1.7 isn't fast enough?","created_at":"2017-10-20T03:29:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338096475","id":338096475,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODA5NjQ3NQ==","updated_at":"2017-10-20T03:29:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338096475","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"> It's very weird, String concatenation itself is much faster than .join even on FireFox Nightly https:\/\/jsperf.com\/concat-vs-plus-vs-join The FireFox JavaScript engine doesn't optimize the code well?\r\n\r\nWhile string concat is usually faster than .join nowadays in my experience, don't put too much trust in the number returned by this specific benchmark. All the tests there can be optimized away entirely by the javascript engine as all of them are constant expressions and their result is not even used. A lot of microbenchmarks fall into this trap. As JS engine optimizations renders most microbenchmarks moot, it's usually better to benchmark a whole part of an application than an isolated statement. \r\n\r\nHere is a [similar benchmark](https:\/\/jsperf.com\/string-concat-comparaison) which is actively preventing the operations from being optimized away, for what it is worth.","created_at":"2017-10-20T08:13:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338138170","id":338138170,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODEzODE3MA==","updated_at":"2017-10-20T08:13:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338138170","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":22,"author_association":"CONTRIBUTOR","body":"> I'd be pleased if you share the performance number in different environment, especially Mac.\r\n\r\nFunction | Chrome Mac | Firefox Mac | Safari\r\n-------- | ------------- | ----------- | ------\r\noriginal (generateUUID) | 1267.42ms | 1449.63ms | 805.94ms\r\n1 (generateUUID2) | 671.10ms | 1665.99ms | 533.65ms\r\n1 + 2 (generateUUID4) | 443.43ms | 1317.12ms | 447.96ms\r\n1 + 2 + 3 (generateUUID6)\u00a0| 378.30ms | 1214.16ms | 354.73ms\r\n\r\n(I executed the code directly in the console of each browser)","created_at":"2017-10-20T08:24:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338140851","id":338140851,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODE0MDg1MQ==","updated_at":"2017-10-20T09:35:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338140851","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":23,"author_association":"COLLABORATOR","body":"Thanks for the numbers! ~How about the `generateUUID2` performance number?~ I want the original `generateUUID` performance number as well.","created_at":"2017-10-20T08:31:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338142427","id":338142427,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODE0MjQyNw==","updated_at":"2017-10-20T08:37:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338142427","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":24,"author_association":"CONTRIBUTOR","body":"\ud83d\udc4c I updated the table above with the stats from a new run. I probably somehow messed up when indicating the time for generateUUID2 on Chrome Mac the first time. It went from 1000ms to 671ms.","created_at":"2017-10-20T09:37:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338157693","id":338157693,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODE1NzY5Mw==","updated_at":"2017-10-20T09:37:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338157693","user":{"following_url":"https:\/\/api.github.com\/users\/kchapelier\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kchapelier\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/5741699?v=4","url":"https:\/\/api.github.com\/users\/kchapelier","gists_url":"https:\/\/api.github.com\/users\/kchapelier\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kchapelier","subscriptions_url":"https:\/\/api.github.com\/users\/kchapelier\/subscriptions","node_id":"MDQ6VXNlcjU3NDE2OTk=","repos_url":"https:\/\/api.github.com\/users\/kchapelier\/repos","received_events_url":"https:\/\/api.github.com\/users\/kchapelier\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kchapelier\/starred{\/owner}{\/repo}","site_admin":false,"login":"kchapelier","type":"User","id":5741699,"followers_url":"https:\/\/api.github.com\/users\/kchapelier\/followers","organizations_url":"https:\/\/api.github.com\/users\/kchapelier\/orgs"}},{"index":25,"author_association":"NONE","body":"@takahirox I ran tests on the actual full application (in Chrome, which is the target platform since it greatly outperforms Firefox for this application)\r\nIn this \"real world\" scenario, generateUUID6 is about 55% faster (using it adds 530 ms instead of 824 ms per 3.4 seconds of scene building compared to using a simple step ID)\r\n\r\nI do not a have a specific target for how much faster it needs to be. My goal is to improve the user experience of the application by reducing loading times. Delays by functions I don't use are fine if they are (proportionally) insignificant in time. Otherwise I would seek to eliminate them.\r\n\r\nAny improvement that comes out of this can be useful for many people I think, even if for this project, probably lazy generation (or any other solution that removes rather than reduces the overhead) would be the ideal way. I can still stick to overwriting the method manually (trading maintenance risk for better UX)","created_at":"2017-10-20T16:14:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338252659","id":338252659,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODI1MjY1OQ==","updated_at":"2017-10-20T16:14:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338252659","user":{"following_url":"https:\/\/api.github.com\/users\/nkrisztian89\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/nkrisztian89\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/540568?v=4","url":"https:\/\/api.github.com\/users\/nkrisztian89","gists_url":"https:\/\/api.github.com\/users\/nkrisztian89\/gists{\/gist_id}","html_url":"https:\/\/github.com\/nkrisztian89","subscriptions_url":"https:\/\/api.github.com\/users\/nkrisztian89\/subscriptions","node_id":"MDQ6VXNlcjU0MDU2OA==","repos_url":"https:\/\/api.github.com\/users\/nkrisztian89\/repos","received_events_url":"https:\/\/api.github.com\/users\/nkrisztian89\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/nkrisztian89\/starred{\/owner}{\/repo}","site_admin":false,"login":"nkrisztian89","type":"User","id":540568,"followers_url":"https:\/\/api.github.com\/users\/nkrisztian89\/followers","organizations_url":"https:\/\/api.github.com\/users\/nkrisztian89\/orgs"}},{"index":26,"author_association":"CONTRIBUTOR","body":"@takahirox By shifting slower (only a bit at a time) its possible to reduce the amount of random generations making the generator faster.\r\n\r\nI tested with the generateUUID4 variant (i think we should keep the formation, somebody may be assuming that formatting, changing it might break somebody code).\r\n\r\n```\r\n\t\tfunction generateUUID4()\r\n\t\t{\r\n\t\t\tvar uuid = '';\r\n\t\t\tvar tmp = 0;\r\n\t\t\tvar value = 0;\r\n\r\n\t\t\tfor( var i = 0; i < 36; i++ ) {\r\n\r\n\t\t\t\tif(i === 8 || i === 13 || i === 18 || i === 23) {\r\n\t\t\t\t\tuuid += '-';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( rnd <= 0x02 )rnd = 0x2000000 + ( Math.random() * 0x8000000 );\r\n\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\trnd = rnd >> 1;\r\n\t\t\t\tvalue = ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r;\r\n\r\n\t\t\t\tif ( ( i % 2 ) === 0 ) {\r\n\r\n\t\t\t\t\ttmp = value;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuuid += table[ ( tmp * 17 ) + value ];\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid;\r\n\r\n\t\t};\r\n```\r\n\r\n![capture](https:\/\/user-images.githubusercontent.com\/9158354\/31842286-5d827292-b5e5-11e7-9533-d0e20d33b0d1.JPG)\r\n\r\nEDIT: These changed allow to reduced by 75% the use Math.random ","created_at":"2017-10-20T21:25:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338326147","id":338326147,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODMyNjE0Nw==","updated_at":"2017-10-20T21:57:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338326147","user":{"following_url":"https:\/\/api.github.com\/users\/tentone\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tentone\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/9158354?v=4","url":"https:\/\/api.github.com\/users\/tentone","gists_url":"https:\/\/api.github.com\/users\/tentone\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tentone","subscriptions_url":"https:\/\/api.github.com\/users\/tentone\/subscriptions","node_id":"MDQ6VXNlcjkxNTgzNTQ=","repos_url":"https:\/\/api.github.com\/users\/tentone\/repos","received_events_url":"https:\/\/api.github.com\/users\/tentone\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tentone\/starred{\/owner}{\/repo}","site_admin":false,"login":"tentone","type":"User","id":9158354,"followers_url":"https:\/\/api.github.com\/users\/tentone\/followers","organizations_url":"https:\/\/api.github.com\/users\/tentone\/orgs"}},{"index":27,"author_association":"CONTRIBUTOR","body":"A simple question. \r\n\r\nIf we change the UUID generation why keep this pattern ?\r\nWhy keep a string pattern, instead of  an byte array, that could be ( maybe ) much much faster to generate, and for comparison too ( like a binary mask ) ?\r\n\r\nI don't known anybody that keep\/write the uuid to find an object in his view. So the uuid can be abstract no ?","created_at":"2017-10-20T21:48:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338330282","id":338330282,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzMDI4Mg==","updated_at":"2017-10-20T21:48:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338330282","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":28,"author_association":"CONTRIBUTOR","body":"Well im actually using UUID's myself in my project, to locate resources and some other stuff, but chaging it to simply Math.random() + \"\" would be totally fine by me and would be really fast.\r\n\r\nBut there are people relying on these and i think we should avoid breaking the actual formatting, lazy generation plus one of the options proposed above for the generator should be enough to speed up the code quite a bit!","created_at":"2017-10-20T21:51:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338330861","id":338330861,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzMDg2MQ==","updated_at":"2017-10-20T21:51:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338330861","user":{"following_url":"https:\/\/api.github.com\/users\/tentone\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tentone\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/9158354?v=4","url":"https:\/\/api.github.com\/users\/tentone","gists_url":"https:\/\/api.github.com\/users\/tentone\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tentone","subscriptions_url":"https:\/\/api.github.com\/users\/tentone\/subscriptions","node_id":"MDQ6VXNlcjkxNTgzNTQ=","repos_url":"https:\/\/api.github.com\/users\/tentone\/repos","received_events_url":"https:\/\/api.github.com\/users\/tentone\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tentone\/starred{\/owner}{\/repo}","site_admin":false,"login":"tentone","type":"User","id":9158354,"followers_url":"https:\/\/api.github.com\/users\/tentone\/followers","organizations_url":"https:\/\/api.github.com\/users\/tentone\/orgs"}},{"index":29,"author_association":"CONTRIBUTOR","body":"Yes lazy + new generator can do the job. But as long as change it, as much as really optimize it !\r\n\r\nThe idea, IMO, about the uuid is:\r\n\r\n- have an identifier that can operate as key for some search\/sort\/anything else\r\n- to be unique for first purpose\r\n\r\n( yes i know this is a big disclosure ! )\r\n\r\nThe fact to mark it as \"deprecated\" for String output could also allow people, that relying on it, to update their code base without any break ! But they will got a very good improvement in terme of performance ! \r\n\r\nI will give it a try for binary mask just to see...\r\n\r\nEdit: just a little thing\r\nA byte equal a char equal a string if needed !\r\n\r\nEdit2: @mrdoob \r\n\r\nIn fact the real question is, need we a real UUID like for data exchange all over the world, or is it just use internally for threejs ?\r\n\r\nBecause in first case the current algo need to be generated in order to have a 50% probability of at least one collision is 2.71 quintillion. Else this is not a UUID !!! And MUST be lazy due to the algo complexity\r\nTake a look: [UUID](https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier)\r\n\r\nIf it is just for internal use, just let use random numerical id instead !","created_at":"2017-10-20T22:12:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12432#issuecomment-338334412","id":338334412,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12432","node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzNDQxMg==","updated_at":"2017-10-20T22:27:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/338334412","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}}]}