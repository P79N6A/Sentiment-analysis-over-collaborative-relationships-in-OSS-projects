{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"Sounds good to me! Hopefully someone give it a go.","created_at":"2017-01-29T04:00:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-275892403","id":275892403,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTg5MjQwMw==","updated_at":"2017-01-29T04:00:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275892403","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"EXR is a complex format which will require lot of JavaScript to load.\r\n\r\nI'd recommend against loading it directly.  Convert it into an RGBM16 \/RGBE PNG or something like that.","created_at":"2017-01-31T16:29:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276414073","id":276414073,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQxNDA3Mw==","updated_at":"2017-01-31T16:29:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276414073","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":2,"author_association":"NONE","body":"Currently I had to write my own code to convert to 16bit and then split that into 2 - 8bit png files since all (most?) web readers for thing like gl-react can only handle 8bits. This then requires everything related to this in the code to deal with 2 files, not just one. And t write all shaders to be able to handle this bandaid approach of combining these 2 textures to recreate a floating point value in the correct range. \r\n\r\nSo now for an exr I've had to strip it down to 16bits and then create 2 files for every one. And most png readers apply gamma and other manipulations so it's an incredible challenge to try to get the data through the pipeline correctly.\r\n\r\nSuggestion:\r\nBuild a restricted EXR reader to start. 4 channels, simplified compression, rather than include every compression and format variation.\r\n\r\nAt the very least provide a consistent 16bit image reader.\r\n\r\n","created_at":"2017-01-31T17:23:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276430681","id":276430681,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzMDY4MQ==","updated_at":"2017-01-31T17:23:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276430681","user":{"following_url":"https:\/\/api.github.com\/users\/scottpixvana\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/scottpixvana\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/16196959?v=4","url":"https:\/\/api.github.com\/users\/scottpixvana","gists_url":"https:\/\/api.github.com\/users\/scottpixvana\/gists{\/gist_id}","html_url":"https:\/\/github.com\/scottpixvana","subscriptions_url":"https:\/\/api.github.com\/users\/scottpixvana\/subscriptions","node_id":"MDQ6VXNlcjE2MTk2OTU5","repos_url":"https:\/\/api.github.com\/users\/scottpixvana\/repos","received_events_url":"https:\/\/api.github.com\/users\/scottpixvana\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/scottpixvana\/starred{\/owner}{\/repo}","site_admin":false,"login":"scottpixvana","type":"User","id":16196959,"followers_url":"https:\/\/api.github.com\/users\/scottpixvana\/followers","organizations_url":"https:\/\/api.github.com\/users\/scottpixvana\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"@scottpixvana please to chat with you.  My background is VFX as well, but mostly as a software provider to VFX firms...\r\n\r\nThere is quite a bit of flexibility here.  The first is that the format of textures in Three.JS can be one byte per channel, fp16 per channel or fp32 per channel.  The renderer doesn't change at all.  Thus you just need to allocate your texture as FP16 or FP32 as appropriate and then just set it as the material map.  This is a pre-decoded texture workflow.\r\n\r\nThree.JS also supports inline decoding of HDR textures in various formats.  I contributed that in this PR -\r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/8117  For select texture slots in materials, particularly map, emissiveMap and envMap (for IBL), you can specify the texture encoding as RGBE, RGBM16, RGBM7, LogLUV, etc.  This allows one to use a very small size texture, RGBA8, but get dynamic range out of it.\r\n\r\nWe use RGBM16 for https:\/\/Clara.io 's stuff because it can be encoded in a PNG (which has native decoder support) - and we prefer RGBM16 because it's linear nature doesn't cause artifacts when using HW-based texture interpolation of the pre-decoded values:\r\n\r\nhttps:\/\/clara.io\/player\/v2\/9d11969e-eef5-483f-be63-b702a66bd7bf\r\n\r\nhttps:\/\/clara.io\/player\/v2\/cf2e9e9a-d643-4e77-a981-92f1ca1848e6\r\n\r\nBe warned that fp16 and fp32 have various limitations across different devices -- they are extensions in WebGL 1 and thus support is inconsistent.  Fp16 and FP32 will preform slower than RGBA8 textures because of increased GPU memory bandwidth requirements.  But fp16 and fp32 texture that are pre-decoded do not have any artifacts introduced by HW texture interpolation.\r\n\r\nMy recommendation would be to use RGBM16 in pngs, unless there is a concrete reason not to.","created_at":"2017-01-31T17:44:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276436580","id":276436580,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzNjU4MA==","updated_at":"2017-01-31T17:44:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276436580","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"BTW because Three.JS just seamlessly support FP16\/FP32 textures, just add your own EXR loader and write to FP16\/FP32 textures and it will work.  Have a look at the HDRCubeTextureLoaderfor example of how to load FP16\/FP32 into Three.JS: https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/examples\/js\/loaders\/HDRCubeTextureLoader.js\r\n\r\nTo understand how PNG is handled in the browser, refer to this guide: http:\/\/jonathannicol.com\/blog\/2006\/12\/01\/fixing-png-gamma\/    I would love to further improve the PNG handling in Three.JS in the context of HDR representations.\r\n\r\nThe only downside to PNGs that I've found is that IE for some reason premultiplies A into RGB and then unpremultiplies it, thus reducing the fidelity of the resulting RGBA when A is low.  I've complained to the IE team about this a few years ago but it hasn't been fixed.  Our solution when encountering IE, is to load the HDR equivalent of the RGBM16 PNG.","created_at":"2017-01-31T17:49:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276438102","id":276438102,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzODEwMg==","updated_at":"2017-01-31T17:49:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276438102","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Reference for the builtin Three.JS encoders\/decoders: https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/renderers\/shaders\/ShaderChunk\/encodings_pars_fragment.glsl","created_at":"2017-01-31T17:50:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276438480","id":276438480,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzODQ4MA==","updated_at":"2017-01-31T17:50:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276438480","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":6,"author_association":"NONE","body":"Thanks for the additional info. I am using a special UV map for displacement (STMap) and other purposes.\r\n\r\nAs someone getting up to speed on all of this:\r\nWhat tools are you using to read\/write RGBM16? (i.e. Photoshop, etc)\r\nWhat are the routines in three.js to read in this file format?\r\n(Are these in three.js or just clara.io?)\r\n\r\nIf I'm deal directly with WebGL or something like gl-react, can I use these same libraries or is this strictly a capability of three.js\/clara.io?\r\n","created_at":"2017-02-01T08:37:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276601264","id":276601264,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjYwMTI2NA==","updated_at":"2017-02-01T08:37:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276601264","user":{"following_url":"https:\/\/api.github.com\/users\/scottpixvana\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/scottpixvana\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/16196959?v=4","url":"https:\/\/api.github.com\/users\/scottpixvana","gists_url":"https:\/\/api.github.com\/users\/scottpixvana\/gists{\/gist_id}","html_url":"https:\/\/github.com\/scottpixvana","subscriptions_url":"https:\/\/api.github.com\/users\/scottpixvana\/subscriptions","node_id":"MDQ6VXNlcjE2MTk2OTU5","repos_url":"https:\/\/api.github.com\/users\/scottpixvana\/repos","received_events_url":"https:\/\/api.github.com\/users\/scottpixvana\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/scottpixvana\/starred{\/owner}{\/repo}","site_admin":false,"login":"scottpixvana","type":"User","id":16196959,"followers_url":"https:\/\/api.github.com\/users\/scottpixvana\/followers","organizations_url":"https:\/\/api.github.com\/users\/scottpixvana\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"All the tools for converting between Linear\/sRGB\/RGBM\/RGBD\/RGBE\/LogLUV, etc are in Three.JS.  On textures you can set the encoding that it will use when reading that texture.  On render targets you can set the encoding it will use when writing to that render target.  To do a conversion between any encoding just load the source into a texture with its current encoding set properly, and then render it to a render target with the target encoding set.  Then read the render target back and save as a bitmat and you've converted your stuff.\r\n\r\nI do not have a separate JavaScript-based workflow or command line tools at this time.  But if you were to write one you can port across the glsl encoders\/decoders pretty easily - I linked to them above: https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/renderers\/shaders\/ShaderChunk\/encodings_pars_fragment.glsl\r\n\r\nSo if you can load an EXR into a FP32 texture you can convert it to RGBM16 in the above way and then save it as a PNG.  I should say that RGBM16 has a specific range limitation of 0.0 - 16.0, RGBM7 has a range limitation of 0.0 - 7.0 (hence the names.)  It isn't hard to modify Three.JS to use an RGBMX format where X is the range you want.\r\n\r\n","created_at":"2017-02-01T13:42:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276659710","id":276659710,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjY1OTcxMA==","updated_at":"2017-02-01T13:42:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276659710","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"I should mention that Three.JS is designed to work in linear space -- line any sane renderer.  Thus the workflow is to decode the texture from whatever format it is in to linear and then do the rendering and then encoder into the desired format.  Thus to change encodings, convert from source to linear, then linear to your target format.","created_at":"2017-02-01T13:44:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276660149","id":276660149,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjY2MDE0OQ==","updated_at":"2017-02-01T13:44:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276660149","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"I am using the *.png file format for storing RGBM16, thus the encoding is just a convention on that file format.  This Three.JS example shows HDR, RGBM16 and LDR IBL maps working: https:\/\/threejs.org\/examples\/?q=hdr#webgl_materials_envmaps_hdr  If you look at the source you can see it loading PNGs for the RGBM16 data.","created_at":"2017-02-01T13:48:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-276661121","id":276661121,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjY2MTEyMQ==","updated_at":"2017-02-01T13:48:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276661121","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"@mrdoob I've written an EXRLoader (only supports uncompressed EXRs right now). \r\n\r\n~~Is there a style guide doc I can read, to get things up to par, before I make an official PR?~~ \r\n\r\nFound it, PR: https:\/\/github.com\/mrdoob\/three.js\/pull\/12891","created_at":"2017-12-15T17:56:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-352070615","id":352070615,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDM1MjA3MDYxNQ==","updated_at":"2017-12-15T18:24:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/352070615","user":{"following_url":"https:\/\/api.github.com\/users\/richardmonette\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/richardmonette\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1041278?v=4","url":"https:\/\/api.github.com\/users\/richardmonette","gists_url":"https:\/\/api.github.com\/users\/richardmonette\/gists{\/gist_id}","html_url":"https:\/\/github.com\/richardmonette","subscriptions_url":"https:\/\/api.github.com\/users\/richardmonette\/subscriptions","node_id":"MDQ6VXNlcjEwNDEyNzg=","repos_url":"https:\/\/api.github.com\/users\/richardmonette\/repos","received_events_url":"https:\/\/api.github.com\/users\/richardmonette\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/richardmonette\/starred{\/owner}{\/repo}","site_admin":false,"login":"richardmonette","type":"User","id":1041278,"followers_url":"https:\/\/api.github.com\/users\/richardmonette\/followers","organizations_url":"https:\/\/api.github.com\/users\/richardmonette\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"Closing. [EXRLoader](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/examples\/js\/loaders\/EXRLoader.js) is available since `R90` (thanks to @richardmonette).","created_at":"2018-02-17T13:58:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-366443181","id":366443181,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjQ0MzE4MQ==","updated_at":"2018-02-17T13:58:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366443181","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"Thanks @richardmonette!!","created_at":"2018-02-17T16:45:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-366453877","id":366453877,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjQ1Mzg3Nw==","updated_at":"2018-02-17T16:45:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366453877","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":13,"author_association":"NONE","body":"> As someone getting up to speed on all of this:\r\nWhat tools are you using to read\/write RGBM16? (i.e. Photoshop, etc)\r\nWhat are the routines in three.js to read in this file format?\r\n(Are these in three.js or just clara.io?)\r\n\r\nI just came across an issue when using hdr\/exr on Samsung mobiles because they lack OES_texture_float, a bit late to the party but here are the tools i came across to convert hdr to png. Hope this helps someone.\r\n\r\n[https:\/\/github.com\/plepers\/hdr2png](https:\/\/github.com\/plepers\/hdr2png)\r\n\r\nNeed to handle the decoding in your shader of course. Here is a great example of that.\r\n[http:\/\/pierrelepers.com\/lab\/jthree\/](http:\/\/pierrelepers.com\/lab\/jthree\/)\r\n","created_at":"2018-04-24T08:41:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10652#issuecomment-383852159","id":383852159,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10652","node_id":"MDEyOklzc3VlQ29tbWVudDM4Mzg1MjE1OQ==","updated_at":"2018-04-24T22:14:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/383852159","user":{"following_url":"https:\/\/api.github.com\/users\/gauravrane\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gauravrane\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5513319?v=4","url":"https:\/\/api.github.com\/users\/gauravrane","gists_url":"https:\/\/api.github.com\/users\/gauravrane\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gauravrane","subscriptions_url":"https:\/\/api.github.com\/users\/gauravrane\/subscriptions","node_id":"MDQ6VXNlcjU1MTMzMTk=","repos_url":"https:\/\/api.github.com\/users\/gauravrane\/repos","received_events_url":"https:\/\/api.github.com\/users\/gauravrane\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gauravrane\/starred{\/owner}{\/repo}","site_admin":false,"login":"gauravrane","type":"User","id":5513319,"followers_url":"https:\/\/api.github.com\/users\/gauravrane\/followers","organizations_url":"https:\/\/api.github.com\/users\/gauravrane\/orgs"}}]}