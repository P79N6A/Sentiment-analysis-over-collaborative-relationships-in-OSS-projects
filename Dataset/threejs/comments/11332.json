{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Can you please explain your use case?\r\n\r\nI understand that one use case would be to render to a texture with linear output (for further processing) and then render to the screen with gamma output.\r\n\r\nYou can avoid setting `renderer.gammaInput` and set `texture.encoding` instead. (See http:\/\/threejs.org\/docs\/#api\/constants\/Textures.) You will have to set `material.needsUpdate` if the encoding is changed after the first render.\r\n\r\nCurrently, I am not sure if output encoding on a per-material basis has been fully implemented.\r\n\r\nThis entire issue regarding encoding and extensions probably needs to be revisited.\r\n\r\n\/ping @bhouston \r\n\r\nthree.js r.85","created_at":"2017-05-14T17:19:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301326590","id":301326590,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTMyNjU5MA==","updated_at":"2017-05-14T17:19:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301326590","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"gammaOutput, gammaInput are legacy.  You can set per-texture and per-render target encodings for read\/write.  I'd do more research there and see if that can meet your needs.","created_at":"2017-05-15T01:05:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301353435","id":301353435,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTM1MzQzNQ==","updated_at":"2017-05-15T01:05:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301353435","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Just to be clear, use ```texture.encoding``` for reading and writing using various different encodings.","created_at":"2017-05-15T01:06:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301353463","id":301353463,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTM1MzQ2Mw==","updated_at":"2017-05-15T01:06:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301353463","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"@bhouston I see that one can specify an encoding for a texture and an encoding for a render target.\r\n\r\nHowever, in the case of rendering to the screen, I think the encoding is always `LinearEncoding`, unless `gammaOutput = true`, in which case it is `GammaEncoding`.\r\n\r\nTo the best of my knowledge, there are no other options. Am I missing something?\r\n\r\nDo we need to deprecate `renderer.gammaOutput` and add `renderer.outputEncoding`, and declare `outputEncoding` applies only when rendering to the screen?","created_at":"2017-05-15T02:09:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301359535","id":301359535,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTM1OTUzNQ==","updated_at":"2017-05-15T02:09:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301359535","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"NONE","body":"Hi guys, thanks for your replies.\r\n@WestLangley: I'm building a previewer of MAX scenes for a client and I would like to let the user choose the type of Color Space (Gamma or Linear). \r\n\r\nIt would be very nice to have something similar to Unity or Unreal.... for example: \r\n\r\nrenderer.colorSpace = THREE.LinearEncoding;\r\nor \r\nrenderer.colorSpace = THREE.GammaEncoding;\r\n\r\nI could work with deprecated gammaInput\/Output but on-the-fly changes are not taken in consideration. The WebGLRenderer must be disposed and instantiated again ...\r\n\r\nI looked at the source and it seems the Shader Programs do not tell the textures the encoding has changed.\r\n\r\n","created_at":"2017-05-15T08:09:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301405864","id":301405864,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTQwNTg2NA==","updated_at":"2017-05-15T08:11:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301405864","user":{"following_url":"https:\/\/api.github.com\/users\/qornflex\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/qornflex\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/917547?v=4","url":"https:\/\/api.github.com\/users\/qornflex","gists_url":"https:\/\/api.github.com\/users\/qornflex\/gists{\/gist_id}","html_url":"https:\/\/github.com\/qornflex","subscriptions_url":"https:\/\/api.github.com\/users\/qornflex\/subscriptions","node_id":"MDQ6VXNlcjkxNzU0Nw==","repos_url":"https:\/\/api.github.com\/users\/qornflex\/repos","received_events_url":"https:\/\/api.github.com\/users\/qornflex\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/qornflex\/starred{\/owner}{\/repo}","site_admin":false,"login":"qornflex","type":"User","id":917547,"followers_url":"https:\/\/api.github.com\/users\/qornflex\/followers","organizations_url":"https:\/\/api.github.com\/users\/qornflex\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"> Do we need to deprecate renderer.gammaOutput and add renderer.outputEncoding, and declare outputEncoding applies only when rendering to the screen?\r\n\r\nI agree with the above (BTW there is always an outputEncoding declared, it is just usually sourced from looking at the renderTarget.encoding or failing that renderer.outputGamma -- we just need it ot use the renderer.encoding instead of renderer.outputGamma.)  That end result you propose is what I intended but it does break every single example that currently uses gammaInput and gammaOutput, but it is the right thing to do for correctness and code simplification.","created_at":"2017-05-15T13:28:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301474713","id":301474713,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTQ3NDcxMw==","updated_at":"2017-05-15T13:28:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301474713","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"We just need to modify this function call to get the renderer.outputEncoding: \r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/7f55016b844512b4072b88f04c48996791ebce53\/src\/renderers\/webgl\/WebGLPrograms.js#L136","created_at":"2017-05-15T13:29:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301475004","id":301475004,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTQ3NTAwNA==","updated_at":"2017-05-15T13:29:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301475004","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"Great! We are all on the same page. :)\r\n\r\n@OrtOfOn For now you can hack `WebGLPrograms.getProgramCode()` and make this change:\r\n```\r\narray.push( renderer.gammaOutput ); \/\/ add this line\r\n\r\nreturn array.join();\r\n```\r\n\r\nSetting `material.needsUpdate` will then do what you expect.\r\n\r\nWe can figure out the best way to deprecate `renderer.gammaInput` and `renderer.gammaOutput`.","created_at":"2017-05-15T15:13:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301506139","id":301506139,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTUwNjEzOQ==","updated_at":"2017-05-15T15:13:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301506139","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":8,"author_association":"NONE","body":"Thank you very much guys!","created_at":"2017-05-15T16:29:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11332#issuecomment-301528621","id":301528621,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11332","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTUyODYyMQ==","updated_at":"2017-05-15T16:29:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301528621","user":{"following_url":"https:\/\/api.github.com\/users\/qornflex\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/qornflex\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/917547?v=4","url":"https:\/\/api.github.com\/users\/qornflex","gists_url":"https:\/\/api.github.com\/users\/qornflex\/gists{\/gist_id}","html_url":"https:\/\/github.com\/qornflex","subscriptions_url":"https:\/\/api.github.com\/users\/qornflex\/subscriptions","node_id":"MDQ6VXNlcjkxNzU0Nw==","repos_url":"https:\/\/api.github.com\/users\/qornflex\/repos","received_events_url":"https:\/\/api.github.com\/users\/qornflex\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/qornflex\/starred{\/owner}{\/repo}","site_admin":false,"login":"qornflex","type":"User","id":917547,"followers_url":"https:\/\/api.github.com\/users\/qornflex\/followers","organizations_url":"https:\/\/api.github.com\/users\/qornflex\/orgs"}}]}