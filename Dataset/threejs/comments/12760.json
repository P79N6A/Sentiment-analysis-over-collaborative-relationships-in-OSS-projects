{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Reason for checking `undefined` would be (1) consistency with most of the file, and (2) technically `extras` could be `false`, `0`, or `''` and that would still be valid. Obviously merging is hard then, but that's an edge case.\r\n\r\n> In the case you posted you don't overwrite them, but they MAY be more important. I don't really like it so much that information may get lost, but for now I will implement this case.\r\n\r\nIt's impossible to preserve all of the places `.extras` could possibly be hooked in a glTF file... but maybe here's a better idea than merging the two: let's put the primitive extras on the mesh geometry, like so:\r\n\r\n```js\r\nif ( meshDef.extras !== undefined ) mesh.userData = meshDef.extras;\r\nif ( primitive.extras !== undefined ) mesh.geometry.userData = primitive.extras;\r\n```\r\n\r\nThat will be more future-proof, because eventually we want to merge all of the primitives into a single mesh as an optimization, when possible. And really the primitives are more like Geometry than a Mesh anyway.\r\n\r\nCould you also:\r\n\r\n1. [ ] Rebase the file or resolve the conflicts.\r\n2. [ ] Make sure to use tabs for indentation.","created_at":"2017-12-01T15:37:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12760#issuecomment-348526373","id":348526373,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12760","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODUyNjM3Mw==","updated_at":"2017-12-01T15:37:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348526373","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}